{"ast":null,"code":"var _jsxFileName = \"D:\\\\Randel\\\\PROJETO 2020\\\\SuggestInBox\\\\app.suggestinbox.com.br\\\\src\\\\components\\\\ResetPassword\\\\index.js\";\nimport React, { useState } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport history from '../../services/history';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { showMessage, hideMessage } from '../../store/messageReducer';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { reset } from '../../store/authReducer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    maxWidth: 300\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  error: {\n    color: 'red',\n    fontSize: 12\n  },\n  link: {\n    fontSize: 15\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst Reset = props => {\n  const classes = useStyles();\n  const [disableSubmit, setDisableSubmit] = useState(true);\n  const [open, setOpen] = useState(false);\n  const [progress, setProgress] = useState(true);\n  const [token] = useState(window.location.href.split('/?$')[1]);\n  const [email] = useState(window.location.href.split('/?$')[2]);\n\n  const handleClose = () => {\n    setOpen(false);\n    history.push('/login');\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      password: '',\n      passwordConfirmation: ''\n    },\n    validationSchema: Yup.object({\n      password: Yup.string().required('Senha obrigatória!').matches(/^(?=.*[A-Za-z])(?=.*[0-9])(?=.{6,})/, \"A senha deve ter pelo menos uma letra maiuscula, um número e 6 caracteres!\").max(40, 'Senha muito longa'),\n      passwordConfirmation: Yup.string().oneOf([Yup.ref('password'), null], 'Senha não confere').required('Confirme a senha!')\n    }),\n    onSubmit: values => {\n      setProgress(false);\n      const user = {\n        password: values.password,\n        token: token,\n        email: email\n      };\n      props.reset(user);\n      setOpen(true);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    className: classes.appBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"SuggestInBox\"))), /*#__PURE__*/React.createElement(Container, {\n    className: classes.container,\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Recuperar senha\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    type: \"password\",\n    name: \"password\",\n    margin: \"normal\",\n    fullWidth: true,\n    label: \"Nova senha\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    inputProps: {\n      maxLength: 70\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, formik.touched.password && formik.errors.password ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, formik.errors.password) : null), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    type: \"password\",\n    name: \"passwordConfirmation\",\n    margin: \"normal\",\n    fullWidth: true,\n    label: \"Confirme a senha\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.passwordConfirmation,\n    inputProps: {\n      maxLength: 70\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, formik.touched.passwordConfirmation && formik.errors.passwordConfirmation ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, formik.errors.passwordConfirmation) : null), /*#__PURE__*/React.createElement(ReCAPTCHA, {\n    sitekey: \"6LcgjtIZAAAAAANAHsE5_vCGEFFu8nCbHvk5AV7y\",\n    onChange: () => setDisableSubmit(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: disableSubmit,\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onBlur: formik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"Salvar\")), /*#__PURE__*/React.createElement(Dialog, {\n    open: props.openDialog,\n    onClick: () => setProgress(true),\n    onClose: props.hideMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Aten\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, props.message), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: props.hideMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, \"Fechar\"))), /*#__PURE__*/React.createElement(\"div\", {\n    hidden: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  })))));\n};\n\nconst mapStateToProps = state => ({\n  openDialog: state.message.showMessage,\n  message: state.message.message\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  reset,\n  showMessage,\n  hideMessage\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Reset);","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/app.suggestinbox.com.br/src/components/ResetPassword/index.js"],"names":["React","useState","bindActionCreators","connect","ReCAPTCHA","history","Yup","useFormik","showMessage","hideMessage","Container","makeStyles","Avatar","LockOutlinedIcon","Typography","Button","TextField","reset","AppBar","Toolbar","Dialog","DialogActions","DialogContent","DialogTitle","CircularProgress","useStyles","theme","container","maxWidth","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","error","color","fontSize","link","submit","Reset","props","classes","disableSubmit","setDisableSubmit","open","setOpen","progress","setProgress","token","window","location","href","split","email","handleClose","push","formik","initialValues","password","passwordConfirmation","validationSchema","object","string","required","matches","max","oneOf","ref","onSubmit","values","user","appBar","handleSubmit","handleChange","handleBlur","maxLength","touched","errors","openDialog","message","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport history from '../../services/history';\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { showMessage, hideMessage } from '../../store/messageReducer';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { reset } from '../../store/authReducer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    maxWidth: 300,\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  link: {\r\n    fontSize: 15 \r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Reset = (props) => {\r\n  const classes = useStyles();\r\n  const [disableSubmit, setDisableSubmit] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n  const [progress, setProgress] = useState(true);\r\n  \r\n  const [ token ] = useState(window.location.href.split('/?$')[1]);\r\n  const [ email ] = useState(window.location.href.split('/?$')[2]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    history.push('/login');\r\n  };\r\n\r\n  const formik = useFormik ({\r\n    initialValues: { password: '', passwordConfirmation: ''},\r\n    validationSchema: Yup.object({\r\n      password: Yup.string()\r\n        .required('Senha obrigatória!')\r\n        .matches(/^(?=.*[A-Za-z])(?=.*[0-9])(?=.{6,})/,\r\n          \"A senha deve ter pelo menos uma letra maiuscula, um número e 6 caracteres!\"\r\n        )\r\n        .max(40, 'Senha muito longa'),\r\n      passwordConfirmation: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Senha não confere')\r\n        .required('Confirme a senha!')\r\n      }),\r\n      onSubmit: values => {\r\n        setProgress(false);\r\n        const user = {\r\n          password: values.password,\r\n          token: token,\r\n          email: email\r\n        }\r\n        props.reset(user);\r\n        setOpen(true);\r\n      },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n        <Typography variant=\"h6\" noWrap>\r\n          SuggestInBox\r\n        </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container className={classes.container} component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Recuperar senha\r\n          </Typography> \r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"password\" \r\n              name=\"password\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Nova senha\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.password}\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <div>\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <Typography className={classes.error}>{formik.errors.password}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"password\" \r\n              name=\"passwordConfirmation\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Confirme a senha\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.passwordConfirmation}\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <div>\r\n              {formik.touched.passwordConfirmation && formik.errors.passwordConfirmation ? (\r\n                <Typography className={classes.error}>{formik.errors.passwordConfirmation}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <ReCAPTCHA sitekey=\"6LcgjtIZAAAAAANAHsE5_vCGEFFu8nCbHvk5AV7y\" onChange={() => setDisableSubmit(false)} />\r\n            <Button type=\"submit\" disabled={disableSubmit} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} onBlur={formik.handleBlur}>\r\n              Salvar\r\n            </Button>\r\n          </form>\r\n\r\n          <Dialog open={props.openDialog} onClick={()=> setProgress(true)} onClose={props.hideMessage}>\r\n            <DialogTitle>\r\n              Atenção\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              {props.message}\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={props.hideMessage}>Fechar</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          <div hidden={progress}>\r\n            <CircularProgress/>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  openDialog: state.message.showMessage,\r\n  message: state.message.message\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({reset, showMessage, hideMessage}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Reset);"]},"metadata":{},"sourceType":"module"}