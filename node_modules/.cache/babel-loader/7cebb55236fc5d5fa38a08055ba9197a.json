{"ast":null,"code":"var _jsxFileName = \"D:\\\\Randel\\\\PROJETO 2020\\\\SuggestInBox\\\\app.suggestinbox.com.br\\\\src\\\\pages\\\\User\\\\Suggest\\\\Menu\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { atvCompany, getCompanyById } from '../../../../store/companyReducer';\nimport { getMenuById } from '../../../../store/menuReducer';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from \"@material-ui/core/Switch\";\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles(() => ({\n  button: {\n    marginTop: '25px'\n  },\n  formControl: {\n    padding: '15px 0'\n  },\n  buttonAtv: {\n    margin: '15px 0'\n  },\n  center: {\n    textAlign: 'center',\n    margin: 'auto',\n    marginBottom: '20px'\n  }\n}));\n\nconst Menu = props => {\n  const classes = useStyles();\n  const {\n    companyById,\n    menuById,\n    sectionMenu\n  } = props;\n  const [urlCompanyId] = useState(window.location.href.split('?')[1]);\n  const [menu, setMenu] = useState({\n    check: companyById.menu\n  });\n  useEffect(() => {\n    props.getMenuById(urlCompanyId);\n    setMenu({\n      check: companyById.menu\n    });\n  }, [companyById.menu]);\n\n  const atvMenu = companyById => {\n    if (companyById.menu) {\n      companyById.menu = false;\n      setMenu({\n        check: companyById.menu\n      });\n      return props.atvCompany(companyById);\n    } else {\n      companyById.menu = true;\n      setMenu({\n        check: companyById.menu\n      });\n      return props.atvCompany(companyById);\n    }\n  };\n\n  const [menuType, setMenuType] = useState(1);\n\n  const handleChange = event => {\n    setMenuType(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Card\\xE1pio / Cat\\xE1logo\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.buttonAtv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: menu.check ? menu.check : false,\n      onClick: () => atvMenu(companyById),\n      name: \"checkedA\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }),\n    label: \"Ativar/Desativar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })))), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Tipo:\"), /*#__PURE__*/React.createElement(Select, {\n    value: menuType,\n    onChange: handleChange,\n    displayEmpty: true,\n    className: classes.selectEmpty,\n    inputProps: {\n      'aria-label': 'Without label'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Card\\xE1pio\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Cat\\xE1logo\"))), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.center,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, menuById.name), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.menu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, sectionMenu.sort((a, b) => a.index > b.index ? 1 : -1).map(section => {\n    return /*#__PURE__*/React.createElement(TableContainer, {\n      key: section._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      stickyHeader: true,\n      \"aria-label\": \"sticky table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      colSpan: 2,\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 23\n      }\n    }, section.type)))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, section.itemMenu.sort((a, b) => a.index > b.index ? 1 : -1).map(item => {\n      return /*#__PURE__*/React.createElement(TableRow, {\n        key: item._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 27\n        }\n      }, item.name), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 31\n        }\n      }, \"(\", item.description, \")\"))), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }\n      }, item.value.toLocaleString(\"pt-BR\", {\n        style: \"currency\",\n        currency: \"BRL\"\n      })));\n    }))));\n  })));\n};\n\nMenu.prototypes = {\n  companyById: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  companyById: state.company.companyById,\n  menuById: state.menu.menu,\n  sectionMenu: state.menu.sectionMenu\n});\n\nconst mapsDispatchToProps = dispatch => bindActionCreators({\n  atvCompany,\n  getCompanyById,\n  getMenuById\n}, dispatch);\n\nexport default connect(mapStateToProps, mapsDispatchToProps)(Menu);","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/app.suggestinbox.com.br/src/pages/User/Suggest/Menu/index.js"],"names":["React","useState","useEffect","PropTypes","bindActionCreators","connect","atvCompany","getCompanyById","getMenuById","makeStyles","Switch","FormGroup","FormControlLabel","Typography","Grid","MenuItem","FormHelperText","FormControl","Select","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","Paper","useStyles","button","marginTop","formControl","padding","buttonAtv","margin","center","textAlign","marginBottom","Menu","props","classes","companyById","menuById","sectionMenu","urlCompanyId","window","location","href","split","menu","setMenu","check","atvMenu","menuType","setMenuType","handleChange","event","target","value","selectEmpty","name","sort","a","b","index","map","section","_id","type","itemMenu","item","description","toLocaleString","style","currency","prototypes","array","isRequired","mapStateToProps","state","company","mapsDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { atvCompany, getCompanyById } from '../../../../store/companyReducer';\r\nimport { getMenuById } from '../../../../store/menuReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(() =>({\r\n  button: {\r\n    marginTop: '25px',\r\n  },\r\n  formControl: {\r\n    padding: '15px 0'\r\n  },\r\n  buttonAtv: {\r\n    margin: '15px 0'\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    margin: 'auto',\r\n    marginBottom: '20px',\r\n  },\r\n}));\r\n\r\nconst Menu = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById, menuById, sectionMenu } = props;\r\n  const [urlCompanyId] = useState(window.location.href.split('?')[1]);\r\n  const [ menu, setMenu ] = useState({\r\n    check: companyById.menu\r\n  });\r\n\r\n  useEffect(() => {\r\n    props.getMenuById(urlCompanyId);\r\n    setMenu({check: companyById.menu});\r\n  },[companyById.menu])\r\n\r\n  const atvMenu = (companyById) => {\r\n    if(companyById.menu){\r\n      companyById.menu = false;\r\n      setMenu({check: companyById.menu});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.menu = true;\r\n      setMenu({check: companyById.menu});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  const [menuType, setMenuType] = useState(1);\r\n\r\n  const handleChange = (event) => {\r\n    setMenuType(event.target.value);\r\n  };\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Cardápio / Catálogo</Typography>\r\n      <Grid container>\r\n        <Grid item className={classes.buttonAtv}>\r\n          <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={menu.check? menu.check : false}\r\n                onClick={()=>atvMenu(companyById)}\r\n                name=\"checkedA\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Ativar/Desativar\"\r\n          />\r\n          </FormGroup>\r\n        </Grid>\r\n      </Grid>\r\n      <FormControl className={classes.formControl}>\r\n        <FormHelperText>Tipo:</FormHelperText>\r\n        <Select\r\n          value={menuType}\r\n          onChange={handleChange}\r\n          displayEmpty\r\n          className={classes.selectEmpty}\r\n          inputProps={{ 'aria-label': 'Without label' }}\r\n        >\r\n          <MenuItem value={1}>Cardápio</MenuItem>\r\n          <MenuItem value={2}>Catálogo</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <h3 className={classes.center}>{menuById.name}</h3>\r\n\r\n      <Paper className={classes.menu}>\r\n        {sectionMenu.sort((a, b) => a.index > b.index? 1 : -1).map(section => {\r\n          return (\r\n            <TableContainer key={section._id}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell colSpan={2} align='center'>\r\n                      <h4>{section.type}</h4>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {section.itemMenu.sort((a, b) => a.index > b.index? 1 : -1).map(item => {\r\n                    return (\r\n                      <TableRow key={item._id}>\r\n                        <TableCell align='left'>\r\n                          <h5>{item.name}</h5> \r\n                          <h6><i>({item.description})</i></h6>\r\n                        </TableCell>\r\n                        <TableCell align='right'>{(item.value).toLocaleString(\"pt-BR\", {style: \"currency\", currency: \"BRL\"})}</TableCell>\r\n                      </TableRow>\r\n                    )\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          )})}\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nMenu.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n  menuById: state.menu.menu,\r\n  sectionMenu: state.menu.sectionMenu,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({atvCompany, getCompanyById, getMenuById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Menu);"]},"metadata":{},"sourceType":"module"}