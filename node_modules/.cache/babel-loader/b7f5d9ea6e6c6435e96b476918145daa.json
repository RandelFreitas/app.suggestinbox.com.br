{"ast":null,"code":"import api from '../services/api';\nimport history from '../services/history';\nconst ACTIONS = {\n  //SUGGEST\n  LIST_SUGGESTS: 'LISTSUGGESTS',\n  FAVORITE: 'FAVORITE',\n  TOFILE: 'TOFILE',\n  //COMPANY\n  LIST_COMPANIES: 'LISTCOMPANIES',\n  BY_ID_COMPANY: 'BYIDCOMPANY',\n  UPDATE_COMPANY: 'UPDATECOMPANY',\n  ATV_MENU: 'ATVMENU',\n  ATV_PROMO: 'ATVPROMO',\n  CLEAN_COMPANY: 'CLEANCOMPANY',\n  ADD_COMPANY: 'ADDCOMPANY',\n  //USER\n  BY_ID_USER: 'BYIDUSER',\n  UPDATE_USER: 'UPDATEUSER'\n};\nconst INITIAL_STATE = {\n  //SUGGEST\n  suggests: [],\n  suggest: [],\n  suggestById: [],\n  infosSuggests: [],\n  //COMPANY\n  companies: [],\n  company: [],\n  infosCompanies: [],\n  companyById: [],\n  loadingCompany: false,\n  companyAtv: [],\n  //USER\n  userById: [],\n  loadingUser: false\n};\nexport const companyReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    //*********************SUGGESTS*********************\n    case ACTIONS.LIST_SUGGESTS:\n      return { ...state,\n        suggests: action.suggests,\n        infosSuggests: action.infosSuggests\n      };\n\n    case ACTIONS.FAVORITE:\n      const listUp = [...state.suggests];\n      listUp.forEach(suggest => {\n        if (suggest._id === action._id) {\n          suggest.favorite = true;\n        }\n      });\n      return { ...state,\n        suggests: listUp\n      };\n\n    case ACTIONS.TOFILE:\n      const listUpOut = [...state.suggests];\n      listUpOut.forEach(suggest => {\n        if (suggest._id === action._id) {\n          suggest.outlier = true;\n        }\n      });\n      return { ...state,\n        suggests: listUpOut\n      };\n    //*********************COMPANIES*********************\n\n    case ACTIONS.LIST_COMPANIES:\n      return { ...state,\n        companies: action.companies,\n        infosCompanies: action.infosCompanies\n      };\n\n    case ACTIONS.ADD_COMPANY:\n      return { ...state,\n        company: action.company\n      };\n\n    case ACTIONS.BY_ID_COMPANY:\n      return { ...state,\n        companyById: action.companyById,\n        loadingCompany: action.loadingCompany\n      };\n\n    case ACTIONS.UPDATE_COMPANY:\n      return state;\n\n    case ACTIONS.ATV_MENU:\n      return { ...state,\n        companyById: action.companyById\n      };\n\n    case ACTIONS.ATV_PROMO:\n      return { ...state,\n        companyById: action.companyById\n      };\n    //*********************USER*********************\n\n    case ACTIONS.BY_ID_USER:\n      return { ...state,\n        userById: action.userById,\n        loadingUser: action.loadingUser\n      };\n\n    case ACTIONS.UPDATE_USER:\n      return state;\n    //DEFAULT\n\n    default:\n      return state;\n  }\n}; //*******************************************SUGGESTS*********************************************\n//LISTAR SUGGESTS\n\nexport const listSuggest = (page, nOfItems, idUrl) => {\n  return dispatch => {\n    api.get(`/adm/all-suggest/${idUrl}?page=${page}&limit=${nOfItems}`).then(Response => {\n      const {\n        docs,\n        infos\n      } = Response.data;\n      dispatch({\n        type: ACTIONS.LIST_SUGGESTS,\n        suggests: docs,\n        infosSuggests: infos\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; //FAVORITAR SUGGEST\n\nexport const favorite = suggest => {\n  return dispatch => {\n    api.put(`/adm/suggest/${suggest._id}`, suggest).then(Response => {\n      dispatch({\n        type: ACTIONS.FAVORITE,\n        id: suggest._id\n      });\n    });\n  };\n}; //ARQUIVAR SUGGEST\n\nexport const outlier = suggest => {\n  return dispatch => {\n    api.put(`/adm/suggest/${suggest._id}`, suggest).then(Response => {\n      dispatch({\n        type: ACTIONS.TOFILE,\n        id: suggest._id\n      });\n    });\n  };\n}; //*******************************************COMPANIES*********************************************\n//LISTAR COMPANIAS\n\nexport const listCompanies = (page, nOfItems) => {\n  return dispatch => {\n    api.get(`/adm/company?page=${page}&limit=${nOfItems}`).then(Response => {\n      const {\n        docs,\n        infos\n      } = Response.data;\n      dispatch({\n        type: ACTIONS.LIST_COMPANIES,\n        companies: docs,\n        infosCompanies: infos\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; //ADICIONAR COMPANY\n\nexport const addCompany = (company, id) => {\n  return dispatch => {\n    api.post('/adm/company', company).then(Response => {\n      dispatch({\n        type: ACTIONS.ADD_COMPANY,\n        company: Response.data\n      });\n    }, history.push(`/user`)).catch(error => {\n      console.log(error);\n    });\n  };\n}; //GET BY ID COMPANY\n\nexport const getCompanyById = id => {\n  return dispatch => {\n    api.get(`/adm/company/${id}`).then(Response => {\n      dispatch({\n        type: ACTIONS.BY_ID_COMPANY,\n        companyById: Response.data,\n        loadingCompany: true\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; //UPDATE COMPANY\n\nexport const updateCompany = (company, id, idUser) => {\n  return dispatch => {\n    api.put(`/adm/company/${id}`, company).then(Response => {\n      dispatch({\n        type: ACTIONS.UPDATE_COMPANY //company: Response.data\n\n      });\n    }, history.push(`/suggest/?${idUser}/?${id}?page=1&limit=25`)).catch(error => {\n      console.log(error);\n    });\n  };\n}; //LIMPAR CAMPOS COMPANY\n\nexport const cleanCompany = () => {\n  return {\n    type: ACTIONS.CLEAN_COMPANY\n  };\n}; //*******************************************USER*********************************************\n//GET BY ID USER\n\nexport const getUserById = id => {\n  return dispatch => {\n    api.get(`/adm/user/${id}`).then(Response => {\n      dispatch({\n        type: ACTIONS.BY_ID_USER,\n        userById: Response.data,\n        loadingUser: true\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; //UPDATE USER\n\nexport const updateUser = (user, id) => {\n  return dispatch => {\n    api.put(`/adm/user/${id}`, user).then(Response => {\n      dispatch({\n        type: ACTIONS.UPDATE_USER //user: Response.data\n\n      });\n    }, history.push(`/user/?${id}?page=1&limit=25`)).catch(error => {\n      console.log(error);\n    });\n  };\n}; //*******************************************PROMO*********************************************\n//ATIVAR PROMO\n\nexport const atvPromo = company => {\n  return dispatch => {\n    api.put(`/adm/company/${company._id}`, company).then(Response => {\n      dispatch({\n        type: ACTIONS.ATV_PROMO,\n        companyById: company\n      });\n    });\n  };\n}; //*******************************************MENU*********************************************\n//ATIVAR MENU\n\nexport const atvMenu = company => {\n  return dispatch => {\n    api.put(`/adm/company/${company._id}`, company).then(Response => {\n      dispatch({\n        type: ACTIONS.ATV_MENU,\n        companyById: company\n      });\n    });\n  };\n};","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/app.suggestinbox.com.br/src/store/companyReducer.js"],"names":["api","history","ACTIONS","LIST_SUGGESTS","FAVORITE","TOFILE","LIST_COMPANIES","BY_ID_COMPANY","UPDATE_COMPANY","ATV_MENU","ATV_PROMO","CLEAN_COMPANY","ADD_COMPANY","BY_ID_USER","UPDATE_USER","INITIAL_STATE","suggests","suggest","suggestById","infosSuggests","companies","company","infosCompanies","companyById","loadingCompany","companyAtv","userById","loadingUser","companyReducer","state","action","type","listUp","forEach","_id","favorite","listUpOut","outlier","listSuggest","page","nOfItems","idUrl","dispatch","get","then","Response","docs","infos","data","catch","error","console","log","put","id","listCompanies","addCompany","post","push","getCompanyById","updateCompany","idUser","cleanCompany","getUserById","updateUser","user","atvPromo","atvMenu"],"mappings":"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","sourcesContent":["import api from '../services/api';\r\nimport history from '../services/history';\r\n\r\nconst ACTIONS = {\r\n  //SUGGEST\r\n  LIST_SUGGESTS: 'LISTSUGGESTS',\r\n  FAVORITE: 'FAVORITE',\r\n  TOFILE: 'TOFILE',\r\n  //COMPANY\r\n  LIST_COMPANIES: 'LISTCOMPANIES',\r\n  BY_ID_COMPANY: 'BYIDCOMPANY',\r\n  UPDATE_COMPANY: 'UPDATECOMPANY',\r\n  ATV_MENU: 'ATVMENU',\r\n  ATV_PROMO: 'ATVPROMO',\r\n  CLEAN_COMPANY: 'CLEANCOMPANY',\r\n  ADD_COMPANY: 'ADDCOMPANY',\r\n  //USER\r\n  BY_ID_USER: 'BYIDUSER',\r\n  UPDATE_USER: 'UPDATEUSER',\r\n}\r\nconst INITIAL_STATE = {\r\n  //SUGGEST\r\n  suggests: [],\r\n  suggest: [],\r\n  suggestById: [],\r\n  infosSuggests: [],\r\n  //COMPANY\r\n  companies: [],\r\n  company: [],\r\n  infosCompanies: [],\r\n  companyById: [],\r\n  loadingCompany: false,\r\n  companyAtv: [],\r\n  //USER\r\n  userById: [],\r\n  loadingUser: false,\r\n}\r\nexport const companyReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    //*********************SUGGESTS*********************\r\n    case ACTIONS.LIST_SUGGESTS:\r\n      return {...state, suggests: action.suggests, infosSuggests: action.infosSuggests}\r\n    case ACTIONS.FAVORITE:\r\n      const listUp = [...state.suggests]\r\n      listUp.forEach(suggest => {\r\n        if(suggest._id === action._id){\r\n          suggest.favorite = true;\r\n        }\r\n      })\r\n      return {...state, suggests: listUp}\r\n    case ACTIONS.TOFILE:\r\n      const listUpOut = [...state.suggests]\r\n      listUpOut.forEach(suggest => {\r\n        if(suggest._id === action._id){\r\n          suggest.outlier = true;\r\n        }\r\n      })\r\n      return {...state, suggests: listUpOut}\r\n    //*********************COMPANIES*********************\r\n    case ACTIONS.LIST_COMPANIES:\r\n      return {...state, companies: action.companies, infosCompanies: action.infosCompanies}\r\n    case ACTIONS.ADD_COMPANY:\r\n      return {...state, company: action.company}\r\n    case ACTIONS.BY_ID_COMPANY:\r\n      return {...state, companyById: action.companyById, loadingCompany: action.loadingCompany}\r\n    case ACTIONS.UPDATE_COMPANY:\r\n      return state;\r\n    case ACTIONS.ATV_MENU:\r\n      return {...state, companyById: action.companyById}\r\n    case ACTIONS.ATV_PROMO:\r\n      return {...state, companyById: action.companyById}\r\n    //*********************USER*********************\r\n    case ACTIONS.BY_ID_USER:\r\n      return {...state, userById: action.userById, loadingUser: action.loadingUser}\r\n    case ACTIONS.UPDATE_USER:\r\n      return state;\r\n    //DEFAULT\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//*******************************************SUGGESTS*********************************************\r\n//LISTAR SUGGESTS\r\nexport const listSuggest = (page, nOfItems, idUrl) => {\r\n  return dispatch => {\r\n    api.get(`/adm/all-suggest/${idUrl}?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_SUGGESTS,\r\n        suggests: docs,\r\n        infosSuggests: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//FAVORITAR SUGGEST\r\nexport const favorite = (suggest) => {\r\n  return dispatch => {\r\n    api.put(`/adm/suggest/${suggest._id}`, suggest )\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.FAVORITE,\r\n        id: suggest._id\r\n      })\r\n    })\r\n  }\r\n}\r\n//ARQUIVAR SUGGEST\r\nexport const outlier = (suggest) => {\r\n  return dispatch => {\r\n    api.put(`/adm/suggest/${suggest._id}`, suggest )\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.TOFILE,\r\n        id: suggest._id\r\n      })\r\n    })\r\n  }\r\n}\r\n//*******************************************COMPANIES*********************************************\r\n//LISTAR COMPANIAS\r\nexport const listCompanies = (page, nOfItems) => {\r\n  return dispatch => {\r\n    api.get(`/adm/company?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_COMPANIES,\r\n        companies: docs,\r\n        infosCompanies: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//ADICIONAR COMPANY\r\nexport const addCompany = (company, id) => {\r\n  return dispatch => {\r\n    api.post('/adm/company', company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ADD_COMPANY,\r\n        company: Response.data,\r\n      });\r\n    }, history.push(`/user`))\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//GET BY ID COMPANY\r\nexport const getCompanyById = (id) => {\r\n  return dispatch => {\r\n    api.get(`/adm/company/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_COMPANY,\r\n        companyById: Response.data,\r\n        loadingCompany: true,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n//UPDATE COMPANY\r\nexport const updateCompany = (company, id, idUser) => {\r\n  return dispatch => {\r\n    api.put(`/adm/company/${id}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_COMPANY,\r\n        //company: Response.data\r\n      })\r\n    }, history.push(`/suggest/?${idUser}/?${id}?page=1&limit=25`))\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n//LIMPAR CAMPOS COMPANY\r\nexport const cleanCompany = () => {\r\n  return {\r\n    type: ACTIONS.CLEAN_COMPANY,\r\n  }\r\n}\r\n//*******************************************USER*********************************************\r\n//GET BY ID USER\r\nexport const getUserById = (id) => {\r\n  return dispatch => {\r\n    api.get(`/adm/user/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_USER,\r\n        userById: Response.data,\r\n        loadingUser: true,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n//UPDATE USER\r\nexport const updateUser = (user, id) => {\r\n  return dispatch => {\r\n    api.put(`/adm/user/${id}`, user)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_USER,\r\n        //user: Response.data\r\n      })\r\n    }, history.push(`/user/?${id}?page=1&limit=25`))\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n//*******************************************PROMO*********************************************\r\n//ATIVAR PROMO\r\nexport const atvPromo = (company) => {\r\n  return dispatch => {\r\n    api.put(`/adm/company/${company._id}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ATV_PROMO,\r\n        companyById: company\r\n      })\r\n    })\r\n  }\r\n}\r\n//*******************************************MENU*********************************************\r\n//ATIVAR MENU\r\nexport const atvMenu = (company) => {\r\n  return dispatch => {\r\n    api.put(`/adm/company/${company._id}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ATV_MENU,\r\n        companyById: company\r\n      })\r\n    })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}