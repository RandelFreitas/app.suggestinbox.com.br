{"ast":null,"code":"var _jsxFileName = \"D:\\\\Randel\\\\PROJETO 2020\\\\SuggestInBox\\\\app.suggestinbox.com.br\\\\src\\\\pages\\\\User\\\\SetupCompany\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Divider, Button, TextField, Card, Typography, Grid } from '@material-ui/core';\nimport { addCompany, getCompanyById, updateCompany, cleanCompany } from '../../../store/admReducer';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: 8\n  },\n  button: {\n    float: 'right',\n    margin: 8\n  },\n  media: {\n    margin: 'auto',\n    width: 140,\n    height: 140\n  },\n  card: {\n    marginBottom: 10\n  },\n  center: {\n    margin: 'auto'\n  },\n  error: {\n    color: 'red',\n    fontSize: 12\n  },\n  grid: {\n    justifyContent: 'center',\n    padding: 8\n  }\n}));\n\nconst SetupCompany = props => {\n  const classes = useStyles();\n  const {\n    companyById\n  } = props;\n  const [idUrl] = useState(window.location.href.split('/new-company/?')[1]);\n  const defaultFormShape = {\n    name: '',\n    cnpj: '',\n    slogan: '',\n    history: '',\n    localization: '',\n    email: '',\n    phone: '',\n    address: {\n      state: '',\n      city: '',\n      street: '',\n      number: '',\n      type: '',\n      district: '',\n      zip: '',\n      obs: ''\n    }\n  };\n  useEffect(() => {\n    if (idUrl) {\n      props.getCompanyById(idUrl);\n    } else {\n      props.cleanCompany();\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: companyById._id ? companyById : defaultFormShape,\n    enableReinitialize: true,\n    validationSchema: Yup.object({\n      name: Yup.string().required('Nome obrigatório!'),\n      cnpj: Yup.string().required('Cnpj obrigatório!'),\n      slogan: Yup.string().required('Slogan obrigatório'),\n      history: Yup.string().required('História obrigatória'),\n      localization: Yup.string().required('Localização obrigatória'),\n      email: Yup.string().required('Email obrigatório!'),\n      phone: Yup.string().required('Telefone obrigatório!'),\n      address: Yup.object({\n        zip: Yup.string().required('Cep obrigatorio!'),\n        street: Yup.string().required('Rua obrigatorio!'),\n        district: Yup.string().required('Bairro obrigatorio!'),\n        city: Yup.string().required('Cidade obrigatorio!'),\n        state: Yup.string().required('Estado obrigatorio!'),\n        number: Yup.string().required('Número obrigatorio!')\n      })\n    }),\n    onSubmit: values => {\n      if (companyById._id) {\n        const {\n          name,\n          slogan,\n          history,\n          localization,\n          email,\n          cnpj,\n          phone\n        } = values;\n        const {\n          state,\n          city,\n          street,\n          number,\n          type,\n          district,\n          zip,\n          obs\n        } = values.address;\n        const address = {\n          state,\n          city,\n          street,\n          number,\n          type,\n          district,\n          zip,\n          obs\n        };\n        const companyUpdate = {\n          name,\n          slogan,\n          history,\n          localization,\n          email,\n          cnpj,\n          phone,\n          address\n        };\n        props.updateCompany(companyUpdate, companyById._id);\n      } else {\n        props.addCompany(values);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, formik => /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"Dados\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    spacing: 1,\n    className: classes.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Nome:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"name\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('name'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, formik.touched.name && formik.errors.name ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, formik.errors.name) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Slogan:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"slogan\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('slogan'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, formik.touched.slogan && formik.errors.slogan ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, formik.errors.slogan) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Hist\\xF3ria:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"history\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('history'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, formik.touched.history && formik.errors.history ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  }, formik.errors.history) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Localiza\\xE7\\xE3o:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"localization\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('localization'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, formik.touched.localization && formik.errors.localization ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }, formik.errors.localization) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Email:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"email\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('email'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, formik.touched.email && formik.errors.email ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, formik.errors.email) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Telefone:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"phone\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('phone'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, formik.touched.phone && formik.errors.phone ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }\n  }, formik.errors.phone) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"CNPJ:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"cnpj\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('cnpj'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }, formik.touched.cnpj && formik.errors.cnpj ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 25\n    }\n  }, formik.errors.cnpj) : null))), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    spacing: 1,\n    className: classes.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Cep:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"address.zip\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('address.zip'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 21\n    }\n  }, formik.touched.address && formik.errors.address ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 25\n    }\n  }, formik.errors.address.zip) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Rua:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"address.street\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('address.street'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 21\n    }\n  }, formik.touched.address && formik.errors.address ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 25\n    }\n  }, formik.errors.address.street) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Bairro:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"address.district\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('address.district'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 21\n    }\n  }, formik.touched.address && formik.errors.address ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 25\n    }\n  }, formik.errors.address.district) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Cidade:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"address.city\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('address.city'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 21\n    }\n  }, formik.touched.address && formik.errors.address ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 25\n    }\n  }, formik.errors.address.city) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Estado:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"address.state\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('address.state'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 21\n    }\n  }, formik.touched.address && formik.errors.address ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 25\n    }\n  }, formik.errors.address.state) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"N\\xFAmero:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"address.number\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('address.number'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 21\n    }\n  }, formik.touched.address && formik.errors.address ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 25\n    }\n  }, formik.errors.address.number) : null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 19\n    }\n  }, companyById._id ? 'Atualizar' : 'Salvar')))))));\n};\n\nSetupCompany.prototypes = {\n  companyById: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  companyById: state.adm.companyById\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  addCompany,\n  getCompanyById,\n  updateCompany,\n  cleanCompany\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupCompany);","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/app.suggestinbox.com.br/src/pages/User/SetupCompany/index.js"],"names":["React","useEffect","useState","connect","Link","bindActionCreators","PropTypes","Formik","Yup","makeStyles","Divider","Button","TextField","Card","Typography","Grid","addCompany","getCompanyById","updateCompany","cleanCompany","useStyles","theme","root","flexGrow","marginBottom","button","float","margin","media","width","height","card","center","error","color","fontSize","grid","justifyContent","padding","SetupCompany","props","classes","companyById","idUrl","window","location","href","split","defaultFormShape","name","cnpj","slogan","history","localization","email","phone","address","state","city","street","number","type","district","zip","obs","_id","object","string","required","values","companyUpdate","formik","handleSubmit","shrink","getFieldProps","touched","errors","prototypes","array","isRequired","mapStateToProps","adm","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider, Button, TextField, Card, Typography, Grid} from '@material-ui/core';\r\nimport { addCompany, getCompanyById, updateCompany, cleanCompany } from '../../../store/admReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 8\r\n  },\r\n  button: {\r\n    float: 'right',\r\n    margin: 8,\r\n  },\r\n  media: {\r\n    margin: 'auto',\r\n    width: 140,\r\n    height: 140,\r\n  },\r\n  card: {\r\n    marginBottom: 10,\r\n  },\r\n  center: {\r\n    margin: 'auto',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  grid: {\r\n    justifyContent: 'center',\r\n    padding: 8\r\n  }\r\n}));\r\n\r\nconst SetupCompany = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n\r\n  const [idUrl] = useState(window.location.href.split('/new-company/?')[1]);\r\n  const defaultFormShape = {\r\n    name: '',\r\n    cnpj: '',\r\n    slogan: '',\r\n    history: '',\r\n    localization: '',\r\n    email: '',\r\n    phone: '',\r\n    address: {\r\n      state: '',\r\n      city: '',\r\n      street: '',\r\n      number: '',\r\n      type: '',\r\n      district: '',\r\n      zip: '',\r\n      obs: ''\r\n    },\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(idUrl){\r\n      props.getCompanyById(idUrl);\r\n    }else{\r\n      props.cleanCompany();\r\n    }\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <Formik \r\n        initialValues= {companyById._id? companyById : defaultFormShape}\r\n        enableReinitialize\r\n        validationSchema={Yup.object({\r\n          name: Yup.string()\r\n            .required('Nome obrigatório!'),\r\n          cnpj: Yup.string()\r\n            .required('Cnpj obrigatório!'),\r\n          slogan: Yup.string()\r\n            .required('Slogan obrigatório'),\r\n          history: Yup.string()\r\n            .required('História obrigatória'),\r\n          localization: Yup.string()\r\n            .required('Localização obrigatória'),\r\n          email: Yup.string()\r\n            .required('Email obrigatório!'),\r\n          phone: Yup.string()\r\n            .required('Telefone obrigatório!'),\r\n          address: Yup.object({\r\n            zip: Yup.string()\r\n              .required('Cep obrigatorio!'),\r\n            street: Yup.string()\r\n              .required('Rua obrigatorio!'),\r\n            district: Yup.string()\r\n              .required('Bairro obrigatorio!'),\r\n            city: Yup.string()\r\n              .required('Cidade obrigatorio!'),\r\n            state: Yup.string()\r\n              .required('Estado obrigatorio!'),\r\n            number: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n          }),\r\n        })}\r\n\r\n        onSubmit={(values) => {\r\n          if(companyById._id){\r\n            const { name, slogan, history, localization, email, cnpj, phone } = values;\r\n            const { state, city, street, number, type, district, zip, obs } = values.address;\r\n            const address = {state, city, street, number, type, district, zip, obs};\r\n            const companyUpdate = { name, slogan, history, localization, email, cnpj, phone, address };\r\n            props.updateCompany(companyUpdate, companyById._id);\r\n          }else{\r\n            props.addCompany(values);\r\n          }\r\n        }}>\r\n        {formik => (\r\n          <Card >\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <p style={{margin: 10}}>Dados</p>\r\n              <Grid container>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Nome:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"name\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('name')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.name && formik.errors.name ? (\r\n                        <Typography className={classes.error}>{formik.errors.name}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Slogan:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"slogan\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('slogan')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.slogan && formik.errors.slogan ? (\r\n                        <Typography className={classes.error}>{formik.errors.slogan}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"História:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"history\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('history')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.history && formik.errors.history ? (\r\n                        <Typography className={classes.error}>{formik.errors.history}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Localização:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"localization\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('localization')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.localization && formik.errors.localization ? (\r\n                        <Typography className={classes.error}>{formik.errors.localization}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Email:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"email\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('email')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.email && formik.errors.email ? (\r\n                        <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Telefone:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"phone\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('phone')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.phone && formik.errors.phone ? (\r\n                        <Typography className={classes.error}>{formik.errors.phone}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"CNPJ:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"cnpj\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('cnpj')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.cnpj && formik.errors.cnpj ? (\r\n                        <Typography className={classes.error}>{formik.errors.cnpj}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{margin: 10}}>Endereço</p>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cep:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.zip\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.zip')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.zip}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Rua:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.street\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.street')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.street}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Bairro:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.district\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.district')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.district}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cidade:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.city\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.city')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.city}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Estado:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.state\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.state')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.state}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Número:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.number\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.number')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.number}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Divider/>\r\n                  <Button type=\"submit\" className={classes.button} variant=\"contained\" color=\"primary\">\r\n                    {companyById._id? 'Atualizar': 'Salvar'}\r\n                  </Button>\r\n                  \r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nSetupCompany.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.adm.companyById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ addCompany, getCompanyById, updateCompany, cleanCompany }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupCompany);"]},"metadata":{},"sourceType":"module"}