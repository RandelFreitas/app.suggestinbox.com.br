{"ast":null,"code":"import api from '../services/api'; //import history from '../services/history';\n\nconst ACTIONS = {\n  LISTSUGGESTS: 'LISTSUGGESTS',\n  LISTCOMPANIES: 'LISTCOMPANIES'\n};\nconst INITIAL_STATE = {\n  suggests: [],\n  infosSuggests: [],\n  companies: [],\n  infosCompanies: []\n};\nexport const admReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LISTSUGGESTS:\n      return { ...state,\n        suggests: action.suggests,\n        infosSuggests: action.infosSuggests\n      };\n\n    case ACTIONS.LISTCOMPANIES:\n      return { ...state,\n        companies: action.companies,\n        infosCompanies: action.infosCompanies\n      };\n\n    default:\n      return state;\n  }\n};\nexport const listSuggest = (page, nOfItems) => {\n  return dispatch => {\n    api.get(`/adm/suggest?page=${page}&limit=${nOfItems}`).then(Response => {\n      const {\n        docs,\n        infos\n      } = Response.data;\n      dispatch({\n        type: ACTIONS.LISTSUGGESTS,\n        suggests: docs,\n        infosSuggests: infos\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};\nexport const listCompanies = (page, nOfItems) => {\n  return dispatch => {\n    api.get(`/adm/company?page=${page}&limit=${nOfItems}`).then(Response => {\n      const {\n        docs,\n        infos\n      } = Response.data;\n      dispatch({\n        type: ACTIONS.LISTCOMPANIES,\n        companies: docs,\n        infosCompanies: infos\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/SuggestInBoxFront/src/store/admReducer.js"],"names":["api","ACTIONS","LISTSUGGESTS","LISTCOMPANIES","INITIAL_STATE","suggests","infosSuggests","companies","infosCompanies","admReducer","state","action","type","listSuggest","page","nOfItems","dispatch","get","then","Response","docs","infos","data","catch","error","console","log","listCompanies"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,iBAAhB,C,CACA;;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,YAAY,EAAE,cADA;AAEdC,EAAAA,aAAa,EAAE;AAFD,CAAhB;AAIA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,EADU;AAEpBC,EAAAA,aAAa,EAAE,EAFK;AAGpBC,EAAAA,SAAS,EAAE,EAHS;AAIpBC,EAAAA,cAAc,EAAE;AAJI,CAAtB;AAMA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGN,aAAT,EAAwBO,MAAxB,KAAmC;AAC3D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKX,OAAO,CAACC,YAAb;AACE,aAAO,EAAC,GAAGQ,KAAJ;AAAWL,QAAAA,QAAQ,EAAEM,MAAM,CAACN,QAA5B;AAAsCC,QAAAA,aAAa,EAAEK,MAAM,CAACL;AAA5D,OAAP;;AACF,SAAKL,OAAO,CAACE,aAAb;AACE,aAAO,EAAC,GAAGO,KAAJ;AAAWH,QAAAA,SAAS,EAAEI,MAAM,CAACJ,SAA7B;AAAwCC,QAAAA,cAAc,EAAEG,MAAM,CAACH;AAA/D,OAAP;;AACF;AACE,aAAOE,KAAP;AANJ;AAQD,CATM;AAUP,OAAO,MAAMG,WAAW,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AAC7C,SAAOC,QAAQ,IAAI;AACjBhB,IAAAA,GAAG,CAACiB,GAAJ,CAAS,qBAAoBH,IAAK,UAASC,QAAS,EAApD,EACCG,IADD,CACMC,QAAQ,IAAI;AAChB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,QAAQ,CAACG,IAAjC;AACAN,MAAAA,QAAQ,CAAC;AACLJ,QAAAA,IAAI,EAAEX,OAAO,CAACC,YADT;AAELG,QAAAA,QAAQ,EAAEe,IAFL;AAGLd,QAAAA,aAAa,EAAEe;AAHV,OAAD,CAAR;AAKD,KARD,EASCE,KATD,CASOC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAXD;AAYD,GAbD;AAcD,CAfM;AAgBP,OAAO,MAAMG,aAAa,GAAG,CAACb,IAAD,EAAOC,QAAP,KAAoB;AAC/C,SAAOC,QAAQ,IAAI;AACjBhB,IAAAA,GAAG,CAACiB,GAAJ,CAAS,qBAAoBH,IAAK,UAASC,QAAS,EAApD,EACCG,IADD,CACMC,QAAQ,IAAI;AAChB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,QAAQ,CAACG,IAAjC;AACAN,MAAAA,QAAQ,CAAC;AACLJ,QAAAA,IAAI,EAAEX,OAAO,CAACE,aADT;AAELI,QAAAA,SAAS,EAAEa,IAFN;AAGLZ,QAAAA,cAAc,EAAEa;AAHX,OAAD,CAAR;AAKD,KARD,EASCE,KATD,CASOC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAXD;AAYD,GAbD;AAcD,CAfM","sourcesContent":["import api from '../services/api';\r\n//import history from '../services/history';\r\n\r\nconst ACTIONS = {\r\n  LISTSUGGESTS: 'LISTSUGGESTS',\r\n  LISTCOMPANIES: 'LISTCOMPANIES'\r\n}\r\nconst INITIAL_STATE = {\r\n  suggests: [],\r\n  infosSuggests: [],\r\n  companies: [],\r\n  infosCompanies: []\r\n}\r\nexport const admReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.LISTSUGGESTS:\r\n      return {...state, suggests: action.suggests, infosSuggests: action.infosSuggests}\r\n    case ACTIONS.LISTCOMPANIES:\r\n      return {...state, companies: action.companies, infosCompanies: action.infosCompanies}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport const listSuggest = (page, nOfItems) => {\r\n  return dispatch => {\r\n    api.get(`/adm/suggest?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n          type: ACTIONS.LISTSUGGESTS,\r\n          suggests: docs,\r\n          infosSuggests: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\nexport const listCompanies = (page, nOfItems) => {\r\n  return dispatch => {\r\n    api.get(`/adm/company?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n          type: ACTIONS.LISTCOMPANIES,\r\n          companies: docs,\r\n          infosCompanies: infos\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}