{"ast":null,"code":"import api from '../services/api';\nimport history from '../services/history';\nconst ACTIONS = {\n  GET_INFO: 'GET_INFO'\n};\nconst INITIAL_STATE = {\n  infos: []\n};\nexport const companyReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.GET_INFO:\n      return { ...state,\n        infos: action.infos\n      };\n\n    default:\n      return state;\n  }\n};\nexport const getInfo = id => {\n  return dispatch => {\n    api.post('/infocompany', id).then(Response => {\n      dispatch({\n        type: ACTIONS.GET_INFO,\n        infos: Response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/SuggestInBox/src/store/companyReducer.js"],"names":["api","history","ACTIONS","GET_INFO","INITIAL_STATE","infos","companyReducer","state","action","type","getInfo","id","dispatch","post","then","Response","data","catch","error","console","log"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,iBAAhB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,QAAQ,EAAE;AADI,CAAhB;AAIA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAC;AADc,CAAtB;AAIA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AAC/D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKP,OAAO,CAACC,QAAb;AACE,aAAO,EAAC,GAAGI,KAAJ;AAAWF,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAAzB,OAAP;;AACF;AACE,aAAOE,KAAP;AAJJ;AAMD,CAPM;AASP,OAAO,MAAMG,OAAO,GAAIC,EAAD,IAAQ;AAC7B,SAAOC,QAAQ,IAAI;AACjBZ,IAAAA,GAAG,CAACa,IAAJ,CAAS,cAAT,EAAyBF,EAAzB,EACCG,IADD,CACMC,QAAQ,IAAI;AAChBH,MAAAA,QAAQ,CAAC;AACLH,QAAAA,IAAI,EAAEP,OAAO,CAACC,QADT;AAELE,QAAAA,KAAK,EAAEU,QAAQ,CAACC;AAFX,OAAD,CAAR;AAID,KAND,EAOCC,KAPD,CAOOC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KATD;AAUD,GAXD;AAYD,CAbM","sourcesContent":["import api from '../services/api';\r\nimport history from '../services/history';\r\n\r\nconst ACTIONS = {\r\n  GET_INFO: 'GET_INFO',\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  infos:[],\r\n}\r\n\r\nexport const companyReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.GET_INFO:\r\n      return {...state, infos: action.infos}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getInfo = (id) => {\r\n  return dispatch => {\r\n    api.post('/infocompany', id)\r\n    .then(Response => {\r\n      dispatch({\r\n          type: ACTIONS.GET_INFO,\r\n          infos: Response.data,\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}