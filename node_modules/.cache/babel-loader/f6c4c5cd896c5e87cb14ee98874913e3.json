{"ast":null,"code":"import api from '../services/api';\nimport history from '../services/history';\nimport { setInfosLocalStorage, logoutUser } from '../services/auth';\nimport { showMessage } from './messageReducer';\nconst ACTIONS = {\n  AUTH: 'AUTH',\n  FOGOT: 'FOGOT'\n};\nconst INITIAL_STATE = {\n  infos: [],\n  email: [],\n  user: []\n};\nexport const authReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.AUTH:\n      return { ...state,\n        infos: action.infos\n      };\n\n    case ACTIONS.FOGOT:\n      return { ...state,\n        email: action.email\n      };\n\n    case ACTIONS.RESET:\n      return { ...state,\n        user: action.user\n      };\n\n    default:\n      return state;\n  }\n}; //AUTENTICAÇÃO\n\nexport const auth = login => {\n  return dispatch => {\n    try {\n      api.post('/auth', null).then(Response => {\n        dispatch({\n          type: ACTIONS.AUTH,\n          infos: Response.data\n        }, setInfosLocalStorage(Response.data.token, Response.data.user), history.push(`/user?page=1&limit=25`));\n      }).catch(error => {\n        dispatch(showMessage(\"Email ou senha inválidos!\"));\n      });\n    } catch (error) {\n      showMessage(\"Erro no servidor!\");\n    }\n  };\n}; //ESQUECI SENHA\n\nexport const fogot = email => {\n  return dispatch => {\n    api.post('/auth/fogot', email).then(Response => {\n      dispatch({\n        type: ACTIONS.FOGOT,\n        email: Response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; //RESET SENHA\n\nexport const reset = user => {\n  return dispatch => {\n    api.post('/auth/reset_password', user).then(Response => {\n      dispatch({\n        type: ACTIONS.FOGOT,\n        user: Response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; //LOGOUT\n\nexport const logout = () => {\n  logoutUser();\n  history.push(`/login`);\n};","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/app.suggestinbox.com.br/src/store/authReducer.js"],"names":["api","history","setInfosLocalStorage","logoutUser","showMessage","ACTIONS","AUTH","FOGOT","INITIAL_STATE","infos","email","user","authReducer","state","action","type","RESET","auth","login","dispatch","post","then","Response","data","token","push","catch","error","fogot","console","log","reset","logout"],"mappings":"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","sourcesContent":["import api from '../services/api';\r\nimport history from '../services/history';\r\nimport { setInfosLocalStorage, logoutUser } from '../services/auth';\r\nimport { showMessage } from './messageReducer';\r\n\r\nconst ACTIONS = {\r\n  AUTH: 'AUTH',\r\n  FOGOT: 'FOGOT'\r\n}\r\nconst INITIAL_STATE = {\r\n  infos:[],\r\n  email:[],\r\n  user:[]\r\n}\r\nexport const authReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.AUTH:\r\n      return {...state, infos: action.infos}\r\n    case ACTIONS.FOGOT:\r\n      return {...state, email: action.email}\r\n    case ACTIONS.RESET:\r\n      return {...state, user: action.user}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//AUTENTICAÇÃO\r\nexport const auth = (login) => {\r\n  return dispatch => {\r\n    try{\r\n      api.post('/auth', null)\r\n      .then(Response => {\r\n        dispatch({\r\n            type: ACTIONS.AUTH,\r\n            infos: Response.data,\r\n          },\r\n          setInfosLocalStorage(Response.data.token, Response.data.user),\r\n          history.push(`/user?page=1&limit=25`)\r\n        );\r\n      })\r\n      .catch(error => {\r\n        dispatch(\r\n          showMessage(\"Email ou senha inválidos!\"),\r\n      )});\r\n    }catch(error){\r\n      showMessage(\"Erro no servidor!\")\r\n    }\r\n  }\r\n}\r\n//ESQUECI SENHA\r\nexport const fogot = (email) => {\r\n  return dispatch => {\r\n    api.post('/auth/fogot', email)\r\n    .then(Response => {\r\n      dispatch({\r\n          type: ACTIONS.FOGOT,\r\n          email: Response.data,\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//RESET SENHA\r\nexport const reset = (user) => {\r\n  return dispatch => {\r\n    api.post('/auth/reset_password', user)\r\n    .then(Response => {\r\n      dispatch({\r\n          type: ACTIONS.FOGOT,\r\n          user: Response.data,\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//LOGOUT\r\nexport const logout = () =>{\r\n  logoutUser();\r\n  history.push(`/login`);\r\n}"]},"metadata":{},"sourceType":"module"}