{"ast":null,"code":"import api from '../services/api';\nimport history from '../services/history';\nimport { showMessage } from './messageReducer';\nconst ACTIONS = {\n  LIST_COMPANIES: 'LIST_COMPANIES',\n  BY_ID_COMPANY: 'BY_ID_COMPANY',\n  UPDATE_COMPANY: 'UPDATE_COMPANY',\n  ATV_COMPANY: 'ATV_COMPANY',\n  CLEAN_COMPANY: 'CLEAN_COMPANY',\n  ADD_COMPANY: 'ADD_COMPANY'\n};\nconst INITIAL_STATE = {\n  companies: [],\n  companyById: [],\n  infosCompanies: [],\n  companyAtv: [],\n  suggest: []\n};\nexport const companyReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LIST_COMPANIES:\n      return { ...state,\n        companies: action.companies,\n        infosCompanies: action.infosCompanies\n      };\n\n    case ACTIONS.ADD_COMPANY:\n      return { ...state\n      };\n\n    case ACTIONS.BY_ID_COMPANY:\n      return { ...state,\n        companyById: action.companyById\n      };\n\n    case ACTIONS.UPDATE_COMPANY:\n      return { ...state,\n        companyById: action.companyById\n      };\n\n    case ACTIONS.CLEAN_COMPANY:\n      return { ...state,\n        companyById: []\n      };\n\n    case ACTIONS.ATV_COMPANY:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}; //LISTAR COMPANIAS\n\nexport const listCompanies = (page, nOfItems) => {\n  return dispatch => {\n    api.get(`/adm/company?page=${page}&limit=${nOfItems}`).then(Response => {\n      const {\n        docs,\n        infos\n      } = Response.data;\n      dispatch({\n        type: ACTIONS.LIST_COMPANIES,\n        companies: docs,\n        infosCompanies: infos\n      });\n\n      if (Response.data.error) {\n        dispatch(showMessage(Response.data.error));\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; //ADICIONAR COMPANY\n\nexport const addCompany = (company, idUser) => {\n  return dispatch => {\n    api.post('/adm/company', company).then(Response => {\n      dispatch({\n        type: ACTIONS.ADD_COMPANY\n      });\n\n      if (Response.data.error) {\n        dispatch(showMessage(Response.data.error));\n      } else {\n        dispatch(showMessage(\"Companhia cadastrada com sucesso!\"));\n        history.push(`/user/?${idUser}?page=1&limit=25`);\n      }\n    }).catch(error => {\n      dispatch(showMessage(\"Servido indisponivel, tente mais tarde!\"), console.log(error));\n    });\n  };\n}; //GET BY ID COMPANY\n\nexport const getCompanyById = id => {\n  return dispatch => {\n    api.get(`/adm/company/${id}`).then(Response => {\n      dispatch({\n        type: ACTIONS.BY_ID_COMPANY,\n        companyById: Response.data\n      });\n    }).catch(error => {\n      dispatch(showMessage(\"Servido indisponivel, tente mais tarde!\"), console.log(error));\n    });\n  };\n}; //UPDATE COMPANY\n\nexport const updateCompany = (company, idCompany, idUser) => {\n  return dispatch => {\n    api.put(`/adm/company/${idCompany}`, company).then(Response => {\n      dispatch({\n        type: ACTIONS.UPDATE_COMPANY,\n        companyById: Response.data\n      });\n\n      if (Response.data.error) {\n        dispatch(showMessage(Response.data.error), history.push(`/suggest/?${idUser}/?${idCompany}?page=1&limit=25`));\n      } else {\n        dispatch(showMessage('Companhia atualizada com sucesso!'), history.push(`/suggest/?${idUser}/?${idCompany}?page=1&limit=25`));\n      }\n    }).catch(error => {\n      dispatch(showMessage(\"Servido indisponivel, tente mais tarde!\"), console.log(error));\n    });\n  };\n}; //LIMPAR CAMPOS COMPANY NAS ATAULIZAÇÕES\n\nexport const cleanCompany = () => {\n  return {\n    type: ACTIONS.CLEAN_COMPANY\n  };\n}; //ATIVAR / DESATIVAR: MENU, PROMO, CALL\n\nexport const atvCompany = company => {\n  return dispatch => {\n    api.put(`/adm/company/${company._id}`, company).then(Response => {\n      dispatch({\n        type: ACTIONS.ATV_COMPANY\n      });\n\n      if (Response.data.error) {\n        dispatch(showMessage(Response.data.error));\n      }\n    }).catch(error => {\n      dispatch(showMessage(\"Servido indisponivel, tente mais tarde!\"), console.log(error));\n    });\n  };\n};","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/app.suggestinbox.com.br/src/store/companyReducer.js"],"names":["api","history","showMessage","ACTIONS","LIST_COMPANIES","BY_ID_COMPANY","UPDATE_COMPANY","ATV_COMPANY","CLEAN_COMPANY","ADD_COMPANY","INITIAL_STATE","companies","companyById","infosCompanies","companyAtv","suggest","companyReducer","state","action","type","listCompanies","page","nOfItems","dispatch","get","then","Response","docs","infos","data","error","catch","console","log","addCompany","company","idUser","post","push","getCompanyById","id","updateCompany","idCompany","put","cleanCompany","atvCompany","_id"],"mappings":"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","sourcesContent":["import api from '../services/api';\r\nimport history from '../services/history';\r\nimport { showMessage } from './messageReducer';\r\n\r\nconst ACTIONS = {\r\n  LIST_COMPANIES: 'LIST_COMPANIES',\r\n  BY_ID_COMPANY: 'BY_ID_COMPANY',\r\n  UPDATE_COMPANY: 'UPDATE_COMPANY',\r\n  ATV_COMPANY: 'ATV_COMPANY',\r\n  CLEAN_COMPANY: 'CLEAN_COMPANY',\r\n  ADD_COMPANY: 'ADD_COMPANY',\r\n}\r\nconst INITIAL_STATE = {\r\n  companies: [],\r\n  companyById: [],\r\n  infosCompanies: [],\r\n  companyAtv: [],\r\n  suggest: []\r\n}\r\nexport const companyReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.LIST_COMPANIES:\r\n      return {...state, companies: action.companies, infosCompanies: action.infosCompanies}\r\n    case ACTIONS.ADD_COMPANY:\r\n      return {...state}\r\n    case ACTIONS.BY_ID_COMPANY:\r\n      return {...state, companyById: action.companyById}\r\n    case ACTIONS.UPDATE_COMPANY:\r\n      return {...state, companyById: action.companyById};\r\n    case ACTIONS.CLEAN_COMPANY:\r\n      return {...state, companyById: []}\r\n    case ACTIONS.ATV_COMPANY:\r\n      return {...state}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//LISTAR COMPANIAS\r\nexport const listCompanies = (page, nOfItems) => {\r\n  return dispatch => {\r\n    api.get(`/adm/company?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_COMPANIES,\r\n        companies: docs,\r\n        infosCompanies: infos,\r\n      });\r\n      if(Response.data.error){\r\n        dispatch(\r\n          showMessage(Response.data.error),\r\n        )\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//ADICIONAR COMPANY\r\nexport const addCompany = (company, idUser) => {\r\n  return dispatch => {\r\n    api.post('/adm/company', company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ADD_COMPANY,\r\n      });\r\n      if(Response.data.error){\r\n        dispatch(\r\n          showMessage(Response.data.error)\r\n        )\r\n      }else{\r\n        dispatch(\r\n          showMessage(\"Companhia cadastrada com sucesso!\")\r\n        );\r\n        history.push(`/user/?${idUser}?page=1&limit=25`)\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servido indisponivel, tente mais tarde!\"),\r\n        console.log(error)\r\n      )\r\n    });\r\n  }\r\n}\r\n//GET BY ID COMPANY\r\nexport const getCompanyById = (id) => {\r\n  return dispatch => {\r\n    api.get(`/adm/company/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_COMPANY,\r\n        companyById: Response.data,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servido indisponivel, tente mais tarde!\"),\r\n        console.log(error)\r\n      )\r\n    })\r\n  }\r\n}\r\n//UPDATE COMPANY\r\nexport const updateCompany = (company, idCompany, idUser) => {\r\n  return dispatch => {\r\n    api.put(`/adm/company/${idCompany}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_COMPANY,\r\n        companyById: Response.data,\r\n      });\r\n      if(Response.data.error){\r\n        dispatch(\r\n          showMessage(Response.data.error),\r\n          history.push(`/suggest/?${idUser}/?${idCompany}?page=1&limit=25`)\r\n        )\r\n      }else{\r\n        dispatch(\r\n          showMessage('Companhia atualizada com sucesso!'),\r\n          history.push(`/suggest/?${idUser}/?${idCompany}?page=1&limit=25`)\r\n        )\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servido indisponivel, tente mais tarde!\"),\r\n        console.log(error)\r\n      )\r\n    });\r\n  }\r\n}\r\n//LIMPAR CAMPOS COMPANY NAS ATAULIZAÇÕES\r\nexport const cleanCompany = () => {\r\n  return {\r\n    type: ACTIONS.CLEAN_COMPANY,\r\n  }\r\n}\r\n//ATIVAR / DESATIVAR: MENU, PROMO, CALL\r\nexport const atvCompany = (company) => {\r\n  return dispatch => {\r\n    api.put(`/adm/company/${company._id}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ATV_COMPANY,\r\n      });\r\n      if(Response.data.error){\r\n        dispatch(\r\n          showMessage(Response.data.error)\r\n        )\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servido indisponivel, tente mais tarde!\"),\r\n        console.log(error)\r\n      )\r\n    })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}