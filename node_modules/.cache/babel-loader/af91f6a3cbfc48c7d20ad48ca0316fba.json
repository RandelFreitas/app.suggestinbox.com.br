{"ast":null,"code":"var _jsxFileName = \"D:\\\\Randel\\\\PROJETO 2020\\\\SuggestInBox\\\\app.suggestinbox.com.br\\\\src\\\\components\\\\Fogot\\\\index.js\";\nimport React, { useState } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport history from '../../services/history';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { showMessage, hideMessage } from '../../store/messageReducer';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { fogot } from '../../store/authReducer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  error: {\n    color: 'red',\n    fontSize: 12\n  },\n  link: {\n    fontSize: 15\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst Fogot = props => {\n  const classes = useStyles();\n  const [disableSubmit, setDisableSubmit] = useState(false);\n  const formik = useFormik({\n    initialValues: {\n      email: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Email invalido').required('Email obrigatÃ³rio!')\n    }),\n    onSubmit: values => {\n      props.fogot(values);\n      console.log(values);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: props.openDialog,\n    onClose: props.hideMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Aten\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, props.message), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: props.hideMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Fechar\"))), /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    className: classes.appBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"SuggestInBox\"))), /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Recuperar senha\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    type: \"email\",\n    name: \"email\",\n    margin: \"normal\",\n    fullWidth: true,\n    label: \"Email\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, formik.touched.email && formik.errors.email ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, formik.errors.email) : null), /*#__PURE__*/React.createElement(ReCAPTCHA, {\n    sitekey: \"6LcdP8cZAAAAAMLbn_f2B0EDFSdtvkPQaEO1hx30\",\n    onChange: () => setDisableSubmit(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: disableSubmit,\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onBlur: formik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Enviar link para email\")))));\n};\n\nconst mapStateToProps = state => ({\n  openDialog: state.message.showMessage,\n  message: state.message.message\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fogot,\n  showMessage,\n  hideMessage\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Fogot);","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/app.suggestinbox.com.br/src/components/Fogot/index.js"],"names":["React","useState","bindActionCreators","connect","ReCAPTCHA","history","Yup","useFormik","showMessage","hideMessage","Container","makeStyles","Avatar","LockOutlinedIcon","Typography","Button","TextField","fogot","AppBar","Toolbar","Dialog","DialogActions","DialogContent","DialogTitle","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","error","color","fontSize","link","submit","Fogot","props","classes","disableSubmit","setDisableSubmit","formik","initialValues","email","validationSchema","object","string","required","onSubmit","values","console","log","openDialog","message","appBar","handleSubmit","handleChange","handleBlur","touched","errors","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport history from '../../services/history';\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { showMessage, hideMessage } from '../../store/messageReducer';\r\n\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { fogot } from '../../store/authReducer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  link: {\r\n    fontSize: 15 \r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Fogot = (props) => {\r\n  const classes = useStyles();\r\n  const [disableSubmit, setDisableSubmit] = useState(false);\r\n\r\n  const formik = useFormik ({\r\n    initialValues: { email: ''},\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .email('Email invalido')\r\n        .required('Email obrigatÃ³rio!'),\r\n      }),\r\n      onSubmit: values => {\r\n        props.fogot(values);\r\n        console.log(values);\r\n      },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.openDialog} onClose={props.hideMessage}>\r\n        <DialogTitle>\r\n          AtenÃ§Ã£o\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {props.message}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.hideMessage}>Fechar</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n        <Typography variant=\"h6\" noWrap>\r\n          SuggestInBox\r\n        </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Recuperar senha\r\n          </Typography> \r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"email\" \r\n              name=\"email\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Email\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.email}\r\n            />\r\n            <div>\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <ReCAPTCHA sitekey=\"6LcdP8cZAAAAAMLbn_f2B0EDFSdtvkPQaEO1hx30\" onChange={() => setDisableSubmit(false)} />\r\n            <Button type=\"submit\" disabled={disableSubmit} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} onBlur={formik.handleBlur}>\r\n              Enviar link para email\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  openDialog: state.message.showMessage,\r\n  message: state.message.message\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({fogot, showMessage, hideMessage}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Fogot);"]},"metadata":{},"sourceType":"module"}