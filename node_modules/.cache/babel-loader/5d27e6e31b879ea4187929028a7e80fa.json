{"ast":null,"code":"var _jsxFileName = \"D:\\\\Randel\\\\PROJETO 2020\\\\SuggestInBox\\\\app.suggestinbox.com.br\\\\src\\\\pages\\\\User\\\\Suggest\\\\Call\\\\index.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { atvCompany, getCompanyById } from '../../../../store/companyReducer';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from \"@material-ui/core/Switch\";\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    flexGrow: 1\n  },\n  tables: {\n    marginTop: '25px'\n  }\n}));\n\nconst Call = props => {\n  const classes = useStyles();\n  const {\n    companyById\n  } = props;\n  const [call, setCall] = useState({\n    check: companyById.call\n  });\n\n  const atvCall = companyById => {\n    if (companyById.call) {\n      companyById.call = false;\n      setCall({\n        check: companyById.call\n      });\n      return props.atvCompany(companyById);\n    } else {\n      companyById.call = true;\n      setCall({\n        check: companyById.call\n      });\n      return props.atvCompany(companyById);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Chamada por mesa\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: call.check,\n      onClick: () => atvCall(companyById),\n      name: \"checkedA\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }),\n    label: \"Ativar/Desativar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.tables,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Mesa 1\")))));\n};\n\nCall.prototypes = {\n  companyById: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  companyById: state.company.companyById\n});\n\nconst mapsDispatchToProps = dispatch => bindActionCreators({\n  atvCompany,\n  getCompanyById\n}, dispatch);\n\nexport default connect(mapStateToProps, mapsDispatchToProps)(Call);","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/app.suggestinbox.com.br/src/pages/User/Suggest/Call/index.js"],"names":["React","useState","Link","PropTypes","bindActionCreators","connect","atvCompany","getCompanyById","makeStyles","Switch","FormGroup","FormControlLabel","Typography","Grid","Button","AppBar","Toolbar","useStyles","theme","root","flexGrow","title","tables","marginTop","Call","props","classes","companyById","call","setCall","check","atvCall","prototypes","array","isRequired","mapStateToProps","state","company","mapsDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,kCAA3C;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,SAAS,GAAGT,UAAU,CAAEU,KAAD,KAAW;AACtCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADgC;AAItCC,EAAAA,KAAK,EAAE;AACLD,IAAAA,QAAQ,EAAE;AADL,GAJ+B;AAOtCE,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE;AADL;AAP8B,CAAX,CAAD,CAA5B;;AAYA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAkBF,KAAxB;AACA,QAAM,CAAEG,IAAF,EAAQC,OAAR,IAAoB5B,QAAQ,CAAC;AACjC6B,IAAAA,KAAK,EAAEH,WAAW,CAACC;AADc,GAAD,CAAlC;;AAIA,QAAMG,OAAO,GAAIJ,WAAD,IAAiB;AAC/B,QAAGA,WAAW,CAACC,IAAf,EAAoB;AAClBD,MAAAA,WAAW,CAACC,IAAZ,GAAmB,KAAnB;AACAC,MAAAA,OAAO,CAAC;AAACC,QAAAA,KAAK,EAAEH,WAAW,CAACC;AAApB,OAAD,CAAP;AACA,aAAOH,KAAK,CAACnB,UAAN,CAAiBqB,WAAjB,CAAP;AACD,KAJD,MAIK;AACHA,MAAAA,WAAW,CAACC,IAAZ,GAAmB,IAAnB;AACAC,MAAAA,OAAO,CAAC;AAACC,QAAAA,KAAK,EAAEH,WAAW,CAACC;AAApB,OAAD,CAAP;AACA,aAAOH,KAAK,CAACnB,UAAN,CAAiBqB,WAAjB,CAAP;AACD;AACF,GAVD;;AAYA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,gBAAD;AACE,IAAA,OAAO,eACL,oBAAC,MAAD;AACE,MAAA,OAAO,EAAEC,IAAI,CAACE,KADhB;AAEE,MAAA,OAAO,EAAE,MAAIC,OAAO,CAACJ,WAAD,CAFtB;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AASE,IAAA,KAAK,EAAC,kBATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF,CADF,CAFF,eAmBE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAED,OAAO,CAACJ,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEI,OAAO,CAACL,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,CADF,CAnBF,CADF;AA+BD,CAlDD;;AAoDAG,IAAI,CAACQ,UAAL,GAAkB;AAChBL,EAAAA,WAAW,EAAExB,SAAS,CAAC8B,KAAV,CAAgBC;AADb,CAAlB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCT,EAAAA,WAAW,EAAES,KAAK,CAACC,OAAN,CAAcV;AADK,CAAL,CAA7B;;AAIA,MAAMW,mBAAmB,GAAGC,QAAQ,IAClCnC,kBAAkB,CAAC;AAACE,EAAAA,UAAD;AAAaC,EAAAA;AAAb,CAAD,EAA+BgC,QAA/B,CADpB;;AAGA,eAAelC,OAAO,CAAC8B,eAAD,EAAkBG,mBAAlB,CAAP,CAA8Cd,IAA9C,CAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { atvCompany, getCompanyById } from '../../../../store/companyReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  tables: {\r\n    marginTop: '25px'\r\n  },\r\n}));\r\n\r\nconst Call = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n  const [ call, setCall ] = useState({\r\n    check: companyById.call\r\n  })\r\n\r\n  const atvCall = (companyById) => {\r\n    if(companyById.call){\r\n      companyById.call = false;\r\n      setCall({check: companyById.call});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.call = true;\r\n      setCall({check: companyById.call});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Chamada por mesa</Typography>\r\n      <Grid container>\r\n        <Grid item>\r\n          <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={call.check}\r\n                onClick={()=>atvCall(companyById)}\r\n                name=\"checkedA\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Ativar/Desativar\"\r\n          />\r\n          </FormGroup>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container className={classes.tables}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Mesa 1\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nCall.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({atvCompany, getCompanyById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Call);"]},"metadata":{},"sourceType":"module"}