{"ast":null,"code":"import api from '../services/api'; //import history from '../services/history';\n\nconst ACTIONS = {\n  LIST: 'LIST'\n};\nconst INITIAL_STATE = {\n  suggests: [],\n  infosSuggest: []\n};\nexport const admReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LIST:\n      return { ...state,\n        suggests: action.suggests,\n        infos: action.infos\n      };\n\n    default:\n      return state;\n  }\n};\nexport const listSuggest = (page, nOfItems) => {\n  return dispatch => {\n    api.get(`/adm/suggest?page=${page}&limit=${nOfItems}`).then(Response => {\n      const {\n        docs,\n        infos\n      } = Response.data;\n      dispatch({\n        type: ACTIONS.LIST,\n        infosSuggests: docs,\n        infos\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};\nexport const listCompanies = (page, nOfItems) => {\n  return dispatch => {\n    api.get(`/adm/company?page=${page}&limit=${nOfItems}`).then(Response => {\n      const {\n        docs,\n        infos\n      } = Response.data;\n      dispatch({\n        type: ACTIONS.LIST,\n        company: docs,\n        infosCompany: infos\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/SuggestInBoxFront/src/store/admReducer.js"],"names":["api","ACTIONS","LIST","INITIAL_STATE","suggests","infosSuggest","admReducer","state","action","type","infos","listSuggest","page","nOfItems","dispatch","get","then","Response","docs","data","infosSuggests","catch","error","console","log","listCompanies","company","infosCompany"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,iBAAhB,C,CACA;;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,IAAI,EAAE;AADQ,CAAhB;AAGA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,EADU;AAEpBC,EAAAA,YAAY,EAAE;AAFM,CAAtB;AAIA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AAC3D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKR,OAAO,CAACC,IAAb;AACE,aAAO,EAAC,GAAGK,KAAJ;AAAWH,QAAAA,QAAQ,EAAEI,MAAM,CAACJ,QAA5B;AAAsCM,QAAAA,KAAK,EAAEF,MAAM,CAACE;AAApD,OAAP;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD,CAPM;AAQP,OAAO,MAAMI,WAAW,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AAC7C,SAAOC,QAAQ,IAAI;AACjBd,IAAAA,GAAG,CAACe,GAAJ,CAAS,qBAAoBH,IAAK,UAASC,QAAS,EAApD,EACCG,IADD,CACMC,QAAQ,IAAI;AAChB,YAAM;AAAEC,QAAAA,IAAF;AAAQR,QAAAA;AAAR,UAAkBO,QAAQ,CAACE,IAAjC;AACAL,MAAAA,QAAQ,CAAC;AACLL,QAAAA,IAAI,EAAER,OAAO,CAACC,IADT;AAELkB,QAAAA,aAAa,EAAEF,IAFV;AAGLR,QAAAA;AAHK,OAAD,CAAR;AAKD,KARD,EASCW,KATD,CASOC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAXD;AAYD,GAbD;AAcD,CAfM;AAgBP,OAAO,MAAMG,aAAa,GAAG,CAACb,IAAD,EAAOC,QAAP,KAAoB;AAC/C,SAAOC,QAAQ,IAAI;AACjBd,IAAAA,GAAG,CAACe,GAAJ,CAAS,qBAAoBH,IAAK,UAASC,QAAS,EAApD,EACCG,IADD,CACMC,QAAQ,IAAI;AAChB,YAAM;AAAEC,QAAAA,IAAF;AAAQR,QAAAA;AAAR,UAAkBO,QAAQ,CAACE,IAAjC;AACAL,MAAAA,QAAQ,CAAC;AACLL,QAAAA,IAAI,EAAER,OAAO,CAACC,IADT;AAELwB,QAAAA,OAAO,EAAER,IAFJ;AAGLS,QAAAA,YAAY,EAAEjB;AAHT,OAAD,CAAR;AAKD,KARD,EASCW,KATD,CASOC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAXD;AAYD,GAbD;AAcD,CAfM","sourcesContent":["import api from '../services/api';\r\n//import history from '../services/history';\r\n\r\nconst ACTIONS = {\r\n  LIST: 'LIST',\r\n}\r\nconst INITIAL_STATE = {\r\n  suggests: [],\r\n  infosSuggest: []\r\n}\r\nexport const admReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.LIST:\r\n      return {...state, suggests: action.suggests, infos: action.infos}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport const listSuggest = (page, nOfItems) => {\r\n  return dispatch => {\r\n    api.get(`/adm/suggest?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n          type: ACTIONS.LIST,\r\n          infosSuggests: docs,\r\n          infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\nexport const listCompanies = (page, nOfItems) => {\r\n  return dispatch => {\r\n    api.get(`/adm/company?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n          type: ACTIONS.LIST,\r\n          company: docs,\r\n          infosCompany: infos\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}