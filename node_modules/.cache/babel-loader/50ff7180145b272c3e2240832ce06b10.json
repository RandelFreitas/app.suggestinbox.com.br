{"ast":null,"code":"import api from '../services/api';\nimport history from '../services/history';\nconst ACTIONS = {\n  //SUGGEST\n  LIST_SUGGESTS: 'LISTSUGGESTS',\n  FAVORITE: 'FAVORITE',\n  TOFILE: 'TOFILE',\n  //COMPANY\n  LIST_COMPANIES: 'LISTCOMPANIES',\n  BY_ID_COMPANY: 'BYIDCOMPANY',\n  UPDATE_COMPANY: 'UPDATECOMPANY',\n  ATV_MENU: 'ATVMENU',\n  CLEAN_COMPANY: 'CLEANCOMPANY',\n  ADD_COMPANY: 'ADDCOMPANY',\n  //USER\n  BY_ID_USER: 'BYIDUSER',\n  UPDATE_USER: 'UPDATEUSER'\n};\nconst INITIAL_STATE = {\n  //SUGGEST\n  suggests: [],\n  suggest: [],\n  suggestById: [],\n  infosSuggests: [],\n  //COMPANY\n  companies: [],\n  company: [],\n  infosCompanies: [],\n  companyById: [],\n  loadingCompany: false,\n  //USER\n  userById: [],\n  loadingUser: false\n};\nexport const admReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    //*********************SUGGESTS*********************\n    case ACTIONS.LIST_SUGGESTS:\n      return { ...state,\n        suggests: action.suggests,\n        infosSuggests: action.infosSuggests\n      };\n\n    case ACTIONS.FAVORITE:\n      const listUp = [...state.suggests];\n      listUp.forEach(suggest => {\n        if (suggest._id === action._id) {\n          suggest.favorite = true;\n        }\n      });\n      return { ...state,\n        suggests: listUp\n      };\n\n    case ACTIONS.TOFILE:\n      const listUpOut = [...state.suggests];\n      listUpOut.forEach(suggest => {\n        if (suggest._id === action._id) {\n          suggest.outlier = true;\n        }\n      });\n      return { ...state,\n        suggests: listUpOut\n      };\n    //*********************COMPANIES*********************\n\n    case ACTIONS.LIST_COMPANIES:\n      return { ...state,\n        companies: action.companies,\n        infosCompanies: action.infosCompanies\n      };\n\n    case ACTIONS.ADD_COMPANY:\n      return { ...state,\n        company: action.company\n      };\n\n    case ACTIONS.BY_ID_COMPANY:\n      return { ...state,\n        companyById: action.companyById,\n        loadingCompany: action.loadingCompany\n      };\n\n    case ACTIONS.UPDATE_COMPANY:\n      return state;\n\n    case ACTIONS.ATV_MENU:\n      const companyUp = { ...state.companyById\n      };\n\n      if (companyUp.menu) {\n        console.log(companyUp.menu);\n      } else {\n        console.log(companyUp.menu);\n      }\n\n      return { ...state,\n        companyById: companyUp\n      };\n\n    case ACTIONS.CLEAN_COMPANY:\n      return { ...state,\n        companyById: []\n      };\n    //*********************COMPANIES*********************\n\n    case ACTIONS.BY_ID_USER:\n      return { ...state,\n        userById: action.userById,\n        loadingUser: action.loadingUser\n      };\n\n    case ACTIONS.UPDATE_USER:\n      return state;\n    //DEFAULT\n\n    default:\n      return state;\n  }\n}; //*******************************************SUGGESTS*********************************************\n//LISTAR SUGGESTS\n\nexport const listSuggest = (page, nOfItems, idUrl) => {\n  return dispatch => {\n    api.get(`/adm/all-suggest/${idUrl}?page=${page}&limit=${nOfItems}`).then(Response => {\n      const {\n        docs,\n        infos\n      } = Response.data;\n      dispatch({\n        type: ACTIONS.LIST_SUGGESTS,\n        suggests: docs,\n        infosSuggests: infos\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; //FAVORITAR SUGGEST\n\nexport const favorite = suggest => {\n  return dispatch => {\n    api.put(`/adm/suggest/${suggest._id}`, suggest).then(Response => {\n      dispatch({\n        type: ACTIONS.FAVORITE,\n        id: suggest._id\n      });\n    });\n  };\n}; //ARQUIVAR SUGGEST\n\nexport const outlier = suggest => {\n  return dispatch => {\n    api.put(`/adm/suggest/${suggest._id}`, suggest).then(Response => {\n      dispatch({\n        type: ACTIONS.TOFILE,\n        id: suggest._id\n      });\n    });\n  };\n}; //*******************************************COMPANIES*********************************************\n//LISTAR COMPANIAS\n\nexport const listCompanies = (page, nOfItems) => {\n  return dispatch => {\n    api.get(`/adm/company?page=${page}&limit=${nOfItems}`).then(Response => {\n      const {\n        docs,\n        infos\n      } = Response.data;\n      dispatch({\n        type: ACTIONS.LIST_COMPANIES,\n        companies: docs,\n        infosCompanies: infos\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; //ADICIONAR COMPANY\n\nexport const addCompany = (company, id) => {\n  return dispatch => {\n    api.post('/adm/company', company).then(Response => {\n      dispatch({\n        type: ACTIONS.ADD_COMPANY,\n        company: Response.data\n      });\n    }, history.push(`/user`)).catch(error => {\n      console.log(error);\n    });\n  };\n}; //GET BY ID COMPANY\n\nexport const getCompanyById = id => {\n  return dispatch => {\n    api.get(`/adm/company/${id}`).then(Response => {\n      dispatch({\n        type: ACTIONS.BY_ID_COMPANY,\n        companyById: Response.data,\n        loadingCompany: true\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; //UPDATE COMPANY\n\nexport const updateCompany = (company, id, idUser) => {\n  return dispatch => {\n    api.put(`/adm/company/${id}`, company).then(Response => {\n      dispatch({\n        type: ACTIONS.UPDATE_COMPANY //company: Response.data\n\n      });\n    }, history.push(`/suggest/?${idUser}/?${id}?page=1&limit=25`)).catch(error => {\n      console.log(error);\n    });\n  };\n}; //ATIVAR MENU\n\nexport const atvMenu = company => {\n  return dispatch => {\n    api.put(`/adm/company/${company._id}`, company).then(Response => {\n      dispatch({\n        type: ACTIONS.ATV_MENU,\n        companyById: Response.data\n      });\n    });\n  };\n}; //LIMPAR CAMPOS COMPANY\n\nexport const cleanCompany = () => {\n  return {\n    type: ACTIONS.CLEAN_COMPANY\n  };\n}; //*******************************************USER*********************************************\n//GET BY ID USER\n\nexport const getUserById = id => {\n  return dispatch => {\n    api.get(`/adm/user/${id}`).then(Response => {\n      dispatch({\n        type: ACTIONS.BY_ID_USER,\n        userById: Response.data,\n        loadingUser: true\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; //UPDATE USER\n\nexport const updateUser = (user, id) => {\n  return dispatch => {\n    api.put(`/adm/user/${id}`, user).then(Response => {\n      dispatch({\n        type: ACTIONS.UPDATE_USER //user: Response.data\n\n      });\n    }, history.push(`/user/?${id}?page=1&limit=25`)).catch(error => {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/app.suggestinbox.com.br/src/store/admReducer.js"],"names":["api","history","ACTIONS","LIST_SUGGESTS","FAVORITE","TOFILE","LIST_COMPANIES","BY_ID_COMPANY","UPDATE_COMPANY","ATV_MENU","CLEAN_COMPANY","ADD_COMPANY","BY_ID_USER","UPDATE_USER","INITIAL_STATE","suggests","suggest","suggestById","infosSuggests","companies","company","infosCompanies","companyById","loadingCompany","userById","loadingUser","admReducer","state","action","type","listUp","forEach","_id","favorite","listUpOut","outlier","companyUp","menu","console","log","listSuggest","page","nOfItems","idUrl","dispatch","get","then","Response","docs","infos","data","catch","error","put","id","listCompanies","addCompany","post","push","getCompanyById","updateCompany","idUser","atvMenu","cleanCompany","getUserById","updateUser","user"],"mappings":"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","sourcesContent":["import api from '../services/api';\r\nimport history from '../services/history';\r\n\r\nconst ACTIONS = {\r\n  //SUGGEST\r\n  LIST_SUGGESTS: 'LISTSUGGESTS',\r\n  FAVORITE: 'FAVORITE',\r\n  TOFILE: 'TOFILE',\r\n  //COMPANY\r\n  LIST_COMPANIES: 'LISTCOMPANIES',\r\n  BY_ID_COMPANY: 'BYIDCOMPANY',\r\n  UPDATE_COMPANY: 'UPDATECOMPANY',\r\n  ATV_MENU: 'ATVMENU',\r\n  CLEAN_COMPANY: 'CLEANCOMPANY',\r\n  ADD_COMPANY: 'ADDCOMPANY',\r\n  //USER\r\n  BY_ID_USER: 'BYIDUSER',\r\n  UPDATE_USER: 'UPDATEUSER',\r\n}\r\nconst INITIAL_STATE = {\r\n  //SUGGEST\r\n  suggests: [],\r\n  suggest: [],\r\n  suggestById: [],\r\n  infosSuggests: [],\r\n  //COMPANY\r\n  companies: [],\r\n  company: [],\r\n  infosCompanies: [],\r\n  companyById: [],\r\n  loadingCompany: false,\r\n  //USER\r\n  userById: [],\r\n  loadingUser: false,\r\n}\r\nexport const admReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    //*********************SUGGESTS*********************\r\n    case ACTIONS.LIST_SUGGESTS:\r\n      return {...state, suggests: action.suggests, infosSuggests: action.infosSuggests}\r\n    case ACTIONS.FAVORITE:\r\n      const listUp = [...state.suggests]\r\n      listUp.forEach(suggest => {\r\n        if(suggest._id === action._id){\r\n          suggest.favorite = true;\r\n        }\r\n      })\r\n      return {...state, suggests: listUp}\r\n    case ACTIONS.TOFILE:\r\n      const listUpOut = [...state.suggests]\r\n      listUpOut.forEach(suggest => {\r\n        if(suggest._id === action._id){\r\n          suggest.outlier = true;\r\n        }\r\n      })\r\n      return {...state, suggests: listUpOut}\r\n    //*********************COMPANIES*********************\r\n    case ACTIONS.LIST_COMPANIES:\r\n      return {...state, companies: action.companies, infosCompanies: action.infosCompanies}\r\n    case ACTIONS.ADD_COMPANY:\r\n      return {...state, company: action.company}\r\n    case ACTIONS.BY_ID_COMPANY:\r\n      return {...state, companyById: action.companyById, loadingCompany: action.loadingCompany}\r\n    case ACTIONS.UPDATE_COMPANY:\r\n      return state;\r\n    case ACTIONS.ATV_MENU:\r\n      const companyUp = {...state.companyById}\r\n      if(companyUp.menu){\r\n\r\n        console.log(companyUp.menu)\r\n      }else{\r\n        console.log(companyUp.menu)\r\n      }\r\n      return {...state, companyById: companyUp };\r\n    case ACTIONS.CLEAN_COMPANY:\r\n      return {...state, companyById: []}\r\n    //*********************COMPANIES*********************\r\n    case ACTIONS.BY_ID_USER:\r\n      return {...state, userById: action.userById, loadingUser: action.loadingUser}\r\n    case ACTIONS.UPDATE_USER:\r\n      return state;\r\n    //DEFAULT\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//*******************************************SUGGESTS*********************************************\r\n//LISTAR SUGGESTS\r\nexport const listSuggest = (page, nOfItems, idUrl) => {\r\n  return dispatch => {\r\n    api.get(`/adm/all-suggest/${idUrl}?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_SUGGESTS,\r\n        suggests: docs,\r\n        infosSuggests: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//FAVORITAR SUGGEST\r\nexport const favorite = (suggest) => {\r\n  return dispatch => {\r\n    api.put(`/adm/suggest/${suggest._id}`, suggest )\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.FAVORITE,\r\n        id: suggest._id\r\n      })\r\n    })\r\n  }\r\n}\r\n//ARQUIVAR SUGGEST\r\nexport const outlier = (suggest) => {\r\n  return dispatch => {\r\n    api.put(`/adm/suggest/${suggest._id}`, suggest )\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.TOFILE,\r\n        id: suggest._id\r\n      })\r\n    })\r\n  }\r\n}\r\n//*******************************************COMPANIES*********************************************\r\n//LISTAR COMPANIAS\r\nexport const listCompanies = (page, nOfItems) => {\r\n  return dispatch => {\r\n    api.get(`/adm/company?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_COMPANIES,\r\n        companies: docs,\r\n        infosCompanies: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//ADICIONAR COMPANY\r\nexport const addCompany = (company, id) => {\r\n  return dispatch => {\r\n    api.post('/adm/company', company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ADD_COMPANY,\r\n        company: Response.data,\r\n      });\r\n    }, history.push(`/user`))\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//GET BY ID COMPANY\r\nexport const getCompanyById = (id) => {\r\n  return dispatch => {\r\n    api.get(`/adm/company/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_COMPANY,\r\n        companyById: Response.data,\r\n        loadingCompany: true,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n//UPDATE COMPANY\r\nexport const updateCompany = (company, id, idUser) => {\r\n  return dispatch => {\r\n    api.put(`/adm/company/${id}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_COMPANY,\r\n        //company: Response.data\r\n      })\r\n    }, history.push(`/suggest/?${idUser}/?${id}?page=1&limit=25`))\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n//ATIVAR MENU\r\nexport const atvMenu = (company) => {\r\n  return dispatch => {\r\n    api.put(`/adm/company/${company._id}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ATV_MENU,\r\n        companyById: Response.data\r\n      })\r\n    })\r\n  }\r\n}\r\n//LIMPAR CAMPOS COMPANY\r\nexport const cleanCompany = () => {\r\n  return {\r\n    type: ACTIONS.CLEAN_COMPANY,\r\n  }\r\n}\r\n//*******************************************USER*********************************************\r\n//GET BY ID USER\r\nexport const getUserById = (id) => {\r\n  return dispatch => {\r\n    api.get(`/adm/user/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_USER,\r\n        userById: Response.data,\r\n        loadingUser: true,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n//UPDATE USER\r\nexport const updateUser = (user, id) => {\r\n  return dispatch => {\r\n    api.put(`/adm/user/${id}`, user)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_USER,\r\n        //user: Response.data\r\n      })\r\n    }, history.push(`/user/?${id}?page=1&limit=25`))\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}