{"ast":null,"code":"import _slicedToArray from\"D:\\\\Randel\\\\PROJETO 2020\\\\SuggestInBox\\\\app.suggestinbox.com.br\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"D:\\\\Randel\\\\PROJETO 2020\\\\SuggestInBox\\\\app.suggestinbox.com.br\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import React,{useEffect,useState}from'react';import{connect}from'react-redux';import{Link}from'react-router-dom';import{bindActionCreators}from'redux';import PropTypes from'prop-types';import{Formik}from'formik';import NumberFormat from'react-number-format';import*as Yup from'yup';import{makeStyles}from'@material-ui/core/styles';import{Divider,Button,TextField,Card,Typography,Grid}from'@material-ui/core';import{getUserById,updateUser}from'../../../store/admReducer';var useStyles=makeStyles(function(theme){return{root:{flexGrow:1,marginBottom:8},button:{float:'right',margin:8},media:{margin:'auto',width:140,height:140},card:{marginBottom:10},center:{margin:'auto'},error:{color:'red',fontSize:12},grid:{justifyContent:'center',padding:8}};});var ZipFormatCustom=function ZipFormatCustom(props){var inputRef=props.inputRef,onChange=props.onChange,other=_objectWithoutProperties(props,[\"inputRef\",\"onChange\"]);return/*#__PURE__*/React.createElement(NumberFormat,Object.assign({},other,{getInputRef:inputRef,onValueChange:function onValueChange(values){onChange({target:{name:props.name,value:values.value}});},isNumericString:true,format:\"#####-###\"}));};var CpfFormatCustom=function CpfFormatCustom(props){var inputRef=props.inputRef,onChange=props.onChange,other=_objectWithoutProperties(props,[\"inputRef\",\"onChange\"]);return/*#__PURE__*/React.createElement(NumberFormat,Object.assign({},other,{getInputRef:inputRef,onValueChange:function onValueChange(values){onChange({target:{name:props.name,value:values.value}});},isNumericString:true,format:\"###.###.###-##\"}));};var PhoneFormatCustom=function PhoneFormatCustom(props){var inputRef=props.inputRef,onChange=props.onChange,other=_objectWithoutProperties(props,[\"inputRef\",\"onChange\"]);return/*#__PURE__*/React.createElement(NumberFormat,Object.assign({},other,{getInputRef:inputRef,onValueChange:function onValueChange(values){onChange({target:{name:props.name,value:values.value}});},isNumericString:true,format:\"(##) #########\"}));};var SetupUser=function SetupUser(props){var classes=useStyles();var userById=props.userById;var _useState=useState(window.location.href.split('/?')[1]),_useState2=_slicedToArray(_useState,1),idUrl=_useState2[0];var defaultFormShape={email:'',name:'',cpf:'',phone:'',address:{state:'',city:'',street:'',number:'',type:'',district:'',zip:'',obs:''}};useEffect(function(){props.getUserById(idUrl);},[]);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Formik,{initialValues:userById._id?userById:defaultFormShape,enableReinitialize:true,validationSchema:Yup.object({email:Yup.string().required('Email obrigatório!'),name:Yup.string().required('Nome obrigatório!'),cpf:Yup.string().required('Cpf obrigatório!'),phone:Yup.string().required('Telefone obrigatório!'),address:Yup.object({zip:Yup.string().required('Cep obrigatorio!'),street:Yup.string().required('Rua obrigatorio!'),district:Yup.string().required('Bairro obrigatorio!'),city:Yup.string().required('Cidade obrigatorio!'),state:Yup.string().required('Estado obrigatorio!'),number:Yup.string().required('Número obrigatorio!'),type:Yup.string().required('Número obrigatorio!'),obs:Yup.string().required('Número obrigatorio!')})}),onSubmit:function onSubmit(values){var name=values.name,email=values.email,phone=values.phone,cpf=values.cpf;var _values$address=values.address,state=_values$address.state,city=_values$address.city,street=_values$address.street,number=_values$address.number,type=_values$address.type,district=_values$address.district,zip=_values$address.zip,obs=_values$address.obs;var address={state:state,city:city,street:street,number:number,type:type,district:district,zip:zip,obs:obs};var userUpdate={name:name,email:email,cpf:cpf,phone:phone,address:address};props.updateUser(userUpdate,userById._id);}},function(formik){return/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:formik.handleSubmit},/*#__PURE__*/React.createElement(\"p\",{style:{margin:10}},\"Dados\"),/*#__PURE__*/React.createElement(Grid,{container:true},/*#__PURE__*/React.createElement(Grid,{container:true,item:true,spacing:1,className:classes.grid},/*#__PURE__*/React.createElement(Grid,{item:true,xs:5},/*#__PURE__*/React.createElement(TextField,Object.assign({variant:\"outlined\",label:\"Nome:\",margin:\"dense\",fullWidth:true,name:\"name\",inputProps:{maxLength:70},InputLabelProps:{shrink:true}},formik.getFieldProps('name'))),/*#__PURE__*/React.createElement(\"div\",null,formik.touched.name&&formik.errors.name?/*#__PURE__*/React.createElement(Typography,{className:classes.error},formik.errors.name):null)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:2},/*#__PURE__*/React.createElement(TextField,Object.assign({variant:\"outlined\",label:\"CPF:\",margin:\"dense\",fullWidth:true,name:\"cpf\",InputProps:{inputComponent:CpfFormatCustom},InputLabelProps:{shrink:true}},formik.getFieldProps('cpf'))),/*#__PURE__*/React.createElement(\"div\",null,formik.touched.cpf&&formik.errors.cpf?/*#__PURE__*/React.createElement(Typography,{className:classes.error},formik.errors.cpf):null)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:3},/*#__PURE__*/React.createElement(TextField,Object.assign({variant:\"outlined\",label:\"Email:\",margin:\"dense\",fullWidth:true,name:\"email\",inputProps:{maxLength:70},InputLabelProps:{shrink:true}},formik.getFieldProps('email'))),/*#__PURE__*/React.createElement(\"div\",null,formik.touched.email&&formik.errors.email?/*#__PURE__*/React.createElement(Typography,{className:classes.error},formik.errors.email):null)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:2},/*#__PURE__*/React.createElement(TextField,Object.assign({variant:\"outlined\",label:\"Telefone:\",margin:\"dense\",fullWidth:true,name:\"phone\",InputProps:{inputComponent:PhoneFormatCustom},InputLabelProps:{shrink:true}},formik.getFieldProps('phone'))),/*#__PURE__*/React.createElement(\"div\",null,formik.touched.phone&&formik.errors.phone?/*#__PURE__*/React.createElement(Typography,{className:classes.error},formik.errors.phone):null))),/*#__PURE__*/React.createElement(\"p\",{style:{margin:10}},\"Endere\\xE7o\"),/*#__PURE__*/React.createElement(Grid,{container:true,item:true,spacing:1,className:classes.grid},/*#__PURE__*/React.createElement(Grid,{item:true,xs:2},/*#__PURE__*/React.createElement(TextField,Object.assign({variant:\"outlined\",label:\"Cep:\",margin:\"dense\",fullWidth:true,name:\"address.zip\",InputProps:{inputComponent:ZipFormatCustom},InputLabelProps:{shrink:true}},formik.getFieldProps('address.zip'))),/*#__PURE__*/React.createElement(\"div\",null,formik.touched.address&&formik.errors.address?/*#__PURE__*/React.createElement(Typography,{className:classes.error},formik.errors.address.zip):null)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:4},/*#__PURE__*/React.createElement(TextField,Object.assign({variant:\"outlined\",label:\"Rua:\",margin:\"dense\",fullWidth:true,name:\"address.street\",inputProps:{maxLength:70},InputLabelProps:{shrink:true}},formik.getFieldProps('address.street'))),/*#__PURE__*/React.createElement(\"div\",null,formik.touched.address&&formik.errors.address?/*#__PURE__*/React.createElement(Typography,{className:classes.error},formik.errors.address.street):null)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:3},/*#__PURE__*/React.createElement(TextField,Object.assign({variant:\"outlined\",label:\"Bairro:\",margin:\"dense\",fullWidth:true,name:\"address.district\",inputProps:{maxLength:40},InputLabelProps:{shrink:true}},formik.getFieldProps('address.district'))),/*#__PURE__*/React.createElement(\"div\",null,formik.touched.address&&formik.errors.address?/*#__PURE__*/React.createElement(Typography,{className:classes.error},formik.errors.address.district):null)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:3},/*#__PURE__*/React.createElement(TextField,Object.assign({variant:\"outlined\",label:\"Cidade:\",margin:\"dense\",fullWidth:true,name:\"address.city\",inputProps:{maxLength:70},InputLabelProps:{shrink:true}},formik.getFieldProps('address.city'))),/*#__PURE__*/React.createElement(\"div\",null,formik.touched.address&&formik.errors.address?/*#__PURE__*/React.createElement(Typography,{className:classes.error},formik.errors.address.city):null)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:2},/*#__PURE__*/React.createElement(TextField,Object.assign({variant:\"outlined\",label:\"Estado:\",margin:\"dense\",fullWidth:true,name:\"address.state\",inputProps:{maxLength:30},InputLabelProps:{shrink:true}},formik.getFieldProps('address.state'))),/*#__PURE__*/React.createElement(\"div\",null,formik.touched.address&&formik.errors.address?/*#__PURE__*/React.createElement(Typography,{className:classes.error},formik.errors.address.state):null)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:2},/*#__PURE__*/React.createElement(TextField,Object.assign({variant:\"outlined\",label:\"N\\xFAmero:\",margin:\"dense\",fullWidth:true,name:\"address.number\",inputProps:{maxLength:6},InputLabelProps:{shrink:true}},formik.getFieldProps('address.number'))),/*#__PURE__*/React.createElement(\"div\",null,formik.touched.address&&formik.errors.address?/*#__PURE__*/React.createElement(Typography,{className:classes.error},formik.errors.address.number):null)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:2},/*#__PURE__*/React.createElement(TextField,Object.assign({variant:\"outlined\",label:\"Tipo:\",margin:\"dense\",fullWidth:true,name:\"address.type\",inputProps:{maxLength:20},InputLabelProps:{shrink:true}},formik.getFieldProps('address.type'))),/*#__PURE__*/React.createElement(\"div\",null,formik.touched.address&&formik.errors.address?/*#__PURE__*/React.createElement(Typography,{className:classes.error},formik.errors.address.type):null)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(TextField,Object.assign({variant:\"outlined\",label:\"Complemento:\",margin:\"dense\",fullWidth:true,name:\"address.obs\",inputProps:{maxLength:70},InputLabelProps:{shrink:true}},formik.getFieldProps('address.obs'))),/*#__PURE__*/React.createElement(\"div\",null,formik.touched.address&&formik.errors.address?/*#__PURE__*/React.createElement(Typography,{className:classes.error},formik.errors.address.obs):null))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(Button,{type:\"submit\",className:classes.button,variant:\"contained\",color:\"primary\"},\"Atualizar\"),/*#__PURE__*/React.createElement(Button,{className:classes.button,component:Link,to:\"/user/?\".concat(userById._id,\"?page=1&limit=25\"),variant:\"outlined\",color:\"primary\"},\"Cancelar\")))));}));};SetupUser.prototypes={userById:PropTypes.array.isRequired};var mapStateToProps=function mapStateToProps(state){return{userById:state.adm.userById};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return bindActionCreators({getUserById:getUserById,updateUser:updateUser},dispatch);};export default connect(mapStateToProps,mapDispatchToProps)(SetupUser);","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/app.suggestinbox.com.br/src/pages/User/SetupUser/index.js"],"names":["React","useEffect","useState","connect","Link","bindActionCreators","PropTypes","Formik","NumberFormat","Yup","makeStyles","Divider","Button","TextField","Card","Typography","Grid","getUserById","updateUser","useStyles","theme","root","flexGrow","marginBottom","button","float","margin","media","width","height","card","center","error","color","fontSize","grid","justifyContent","padding","ZipFormatCustom","props","inputRef","onChange","other","values","target","name","value","CpfFormatCustom","PhoneFormatCustom","SetupUser","classes","userById","window","location","href","split","idUrl","defaultFormShape","email","cpf","phone","address","state","city","street","number","type","district","zip","obs","_id","object","string","required","userUpdate","formik","handleSubmit","maxLength","shrink","getFieldProps","touched","errors","inputComponent","prototypes","array","isRequired","mapStateToProps","adm","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport NumberFormat from 'react-number-format';\r\nimport * as Yup from 'yup';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider, Button, TextField, Card, Typography, Grid} from '@material-ui/core';\r\nimport { getUserById, updateUser } from '../../../store/admReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 8\r\n  },\r\n  button: {\r\n    float: 'right',\r\n    margin: 8,\r\n  },\r\n  media: {\r\n    margin: 'auto',\r\n    width: 140,\r\n    height: 140,\r\n  },\r\n  card: {\r\n    marginBottom: 10,\r\n  },\r\n  center: {\r\n    margin: 'auto',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  grid: {\r\n    justifyContent: 'center',\r\n    padding: 8\r\n  }\r\n}));\r\n\r\nconst ZipFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='#####-###'\r\n    />\r\n  );\r\n}\r\n\r\nZipFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst CpfFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='###.###.###-##'\r\n    />\r\n  );\r\n}\r\n\r\nCpfFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst PhoneFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='(##) #########'\r\n    />\r\n  );\r\n}\r\n\r\nPhoneFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst SetupUser = (props) => {\r\n  const classes = useStyles();\r\n  const { userById } = props;\r\n\r\n  const [idUrl] = useState(window.location.href.split('/?')[1]);\r\n  const defaultFormShape = {\r\n    email: '',\r\n    name: '',\r\n    cpf: '',\r\n    phone: '',\r\n    address: {\r\n      state: '',\r\n      city: '',\r\n      street: '',\r\n      number: '',\r\n      type: '',\r\n      district: '',\r\n      zip: '',\r\n      obs: ''\r\n    },\r\n  };\r\n\r\n  useEffect(()=>{\r\n    props.getUserById(idUrl);\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <Formik \r\n        initialValues= {userById._id? userById : defaultFormShape}\r\n        enableReinitialize\r\n        validationSchema={Yup.object({\r\n          email: Yup.string()\r\n            .required('Email obrigatório!'),\r\n          name: Yup.string()\r\n            .required('Nome obrigatório!'),\r\n          cpf: Yup.string()\r\n            .required('Cpf obrigatório!'),\r\n          phone: Yup.string()\r\n            .required('Telefone obrigatório!'),\r\n          address: Yup.object({\r\n            zip: Yup.string()\r\n              .required('Cep obrigatorio!'),\r\n            street: Yup.string()\r\n              .required('Rua obrigatorio!'),\r\n            district: Yup.string()\r\n              .required('Bairro obrigatorio!'),\r\n            city: Yup.string()\r\n              .required('Cidade obrigatorio!'),\r\n            state: Yup.string()\r\n              .required('Estado obrigatorio!'),\r\n            number: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n            type: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n            obs: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n          }),\r\n        })}\r\n\r\n        onSubmit={(values) => {\r\n          const { name, email, phone, cpf } = values;\r\n          const { state, city, street, number, type, district, zip, obs } = values.address;\r\n          const address = {state, city, street, number, type, district, zip, obs};\r\n          const userUpdate = { name, email, cpf, phone, address };\r\n          props.updateUser(userUpdate, userById._id);\r\n        }}>\r\n        {formik => (\r\n          <Card >\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <p style={{margin: 10}}>Dados</p>\r\n              <Grid container>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={5}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Nome:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"name\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('name')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.name && formik.errors.name ? (\r\n                        <Typography className={classes.error}>{formik.errors.name}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"CPF:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"cpf\"\r\n                      InputProps={{inputComponent: CpfFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('cpf')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.cpf && formik.errors.cpf ? (\r\n                        <Typography className={classes.error}>{formik.errors.cpf}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Email:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"email\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('email')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.email && formik.errors.email ? (\r\n                        <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Telefone:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"phone\"\r\n                      InputProps={{inputComponent: PhoneFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('phone')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.phone && formik.errors.phone ? (\r\n                        <Typography className={classes.error}>{formik.errors.phone}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{margin: 10}}>Endereço</p>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cep:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.zip\"\r\n                      InputProps={{inputComponent: ZipFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.zip')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.zip}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Rua:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.street\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.street')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.street}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Bairro:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.district\"\r\n                      inputProps={{ maxLength: 40 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.district')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.district}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cidade:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.city\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.city')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.city}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Estado:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.state\"\r\n                      inputProps={{ maxLength: 30 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.state')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.state}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Número:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.number\"\r\n                      inputProps={{ maxLength: 6 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.number')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.number}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Tipo:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.type\"\r\n                      inputProps={{ maxLength: 20 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.type')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.type}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Complemento:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.obs\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.obs')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.obs}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Divider/>\r\n                  <Button type=\"submit\" className={classes.button} variant=\"contained\" color=\"primary\">\r\n                    Atualizar\r\n                  </Button>\r\n                  <Button className={classes.button} component={Link} to={`/user/?${userById._id}?page=1&limit=25`} variant=\"outlined\" color=\"primary\">\r\n                    Cancelar\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nSetupUser.prototypes = {\r\n  userById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userById: state.adm.userById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ getUserById, updateUser }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupUser);"]},"metadata":{},"sourceType":"module"}