{"ast":null,"code":"var _jsxFileName = \"D:\\\\Randel\\\\PROJETO 2020\\\\SuggestInBox\\\\app.suggestinbox.com.br\\\\src\\\\pages\\\\User\\\\SetupUser\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Divider, Button, TextField, Card, Typography, Grid } from '@material-ui/core';\nimport { getUserById, updateUser } from '../../../store/admReducer';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: 8\n  },\n  button: {\n    float: 'right',\n    margin: 8\n  },\n  media: {\n    margin: 'auto',\n    width: 140,\n    height: 140\n  },\n  card: {\n    marginBottom: 10\n  },\n  center: {\n    margin: 'auto'\n  },\n  error: {\n    color: 'red',\n    fontSize: 12\n  },\n  grid: {\n    justifyContent: 'center',\n    padding: 8\n  }\n}));\n\nconst SetupUser = props => {\n  const classes = useStyles();\n  const {\n    userById\n  } = props;\n  const [idUrl] = useState(window.location.href.split('/?')[1]);\n  const defaultFormShape = {\n    email: '',\n    name: '',\n    parentId: {\n      cpf: '',\n      phone: '',\n      address: {\n        state: '',\n        city: '',\n        street: '',\n        number: '',\n        type: '',\n        district: '',\n        zip: '',\n        obs: ''\n      }\n    }\n  };\n  useEffect(() => {\n    props.getUserById(idUrl);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: userById._id ? userById : defaultFormShape,\n    enableReinitialize: true,\n    validationSchema: Yup.object({\n      email: Yup.string().required('Email obrigatório!'),\n      name: Yup.string().required('Nome obrigatório!'),\n      parentId: Yup.object({\n        cpf: Yup.string().required('Cpf obrigatório!'),\n        phone: Yup.string().required('Telefone obrigatório!'),\n        address: Yup.object({\n          zip: Yup.string().required('Cep obrigatorio!'),\n          street: Yup.string().required('Rua obrigatorio!'),\n          district: Yup.string().required('Bairro obrigatorio!'),\n          city: Yup.string().required('Cidade obrigatorio!'),\n          state: Yup.string().required('Estado obrigatorio!'),\n          number: Yup.string().required('Número obrigatorio!')\n        })\n      })\n    }),\n    onSubmit: values => {\n      const {\n        email\n      } = values;\n      const {\n        name,\n        phone,\n        cpf\n      } = values.parentId;\n      const {\n        state,\n        city,\n        street,\n        number,\n        type,\n        district,\n        zip,\n        obs\n      } = values.parentId.address;\n      const address = {\n        state,\n        city,\n        street,\n        number,\n        type,\n        district,\n        zip,\n        obs\n      };\n      const userUpdate = {\n        name,\n        email,\n        cpf,\n        phone,\n        address\n      };\n      props.updateCompany(userUpdate, userById._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, formik => /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, \"Dados\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    spacing: 1,\n    className: classes.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Nome:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"name\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('name'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, formik.touched.name && formik.errors.name ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, formik.errors.name) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"CPF:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"cpf\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('parentId.cpf'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, formik.touched.parentId && formik.errors.parentId ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }, formik.errors.parentId.cpf) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Email:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"email\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('email'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, formik.touched.email && formik.errors.email ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  }, formik.errors.email) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Telefone:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"phone\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('parentId.phone'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, formik.touched.parentId && formik.errors.parentId ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, formik.errors.parentId.phone) : null))), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    spacing: 1,\n    className: classes.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Cep:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"parentId.address.zip\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('parentId.address.zip'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, formik.touched.parentId && formik.errors.parentId ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }, formik.errors.parentId.address.zip) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Rua:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"parentId.address.street\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('parentId.address.street'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, formik.touched.parentId && formik.errors.parentId ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  }, formik.errors.parentId.address.street) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Bairro:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"parentId.address.district\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('parentId.address.district'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  }, formik.touched.parentId && formik.errors.parentId ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 25\n    }\n  }, formik.errors.parentId.address.district) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Cidade:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"parentId.address.city\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('parentId.address.city'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }\n  }, formik.touched.parentId && formik.errors.parentId ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 25\n    }\n  }, formik.errors.parentId.address.city) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Estado:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"parentId.address.state\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('parentId.address.state'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 21\n    }\n  }, formik.touched.parentId && formik.errors.parentId ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 25\n    }\n  }, formik.errors.parentId.address.state) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"N\\xFAmero:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"parentId.address.number\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('parentId.address.number'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 21\n    }\n  }, formik.touched.parentId && formik.errors.parentId ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 25\n    }\n  }, formik.errors.parentId.address.number) : null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 19\n    }\n  }, \"Atualizar\"), /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    component: Link,\n    to: `/user/?${userById._id}?page=1&limit=25`,\n    variant: \"outlined\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 19\n    }\n  }, \"Cancelar\")))))));\n};\n\nSetupUser.prototypes = {\n  userById: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  userById: state.adm.userById\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  getUserById,\n  updateUser\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupUser);","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/app.suggestinbox.com.br/src/pages/User/SetupUser/index.js"],"names":["React","useEffect","useState","connect","Link","bindActionCreators","PropTypes","Formik","Yup","makeStyles","Divider","Button","TextField","Card","Typography","Grid","getUserById","updateUser","useStyles","theme","root","flexGrow","marginBottom","button","float","margin","media","width","height","card","center","error","color","fontSize","grid","justifyContent","padding","SetupUser","props","classes","userById","idUrl","window","location","href","split","defaultFormShape","email","name","parentId","cpf","phone","address","state","city","street","number","type","district","zip","obs","_id","object","string","required","values","userUpdate","updateCompany","formik","handleSubmit","shrink","getFieldProps","touched","errors","prototypes","array","isRequired","mapStateToProps","adm","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider, Button, TextField, Card, Typography, Grid} from '@material-ui/core';\r\nimport { getUserById, updateUser } from '../../../store/admReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 8\r\n  },\r\n  button: {\r\n    float: 'right',\r\n    margin: 8,\r\n  },\r\n  media: {\r\n    margin: 'auto',\r\n    width: 140,\r\n    height: 140,\r\n  },\r\n  card: {\r\n    marginBottom: 10,\r\n  },\r\n  center: {\r\n    margin: 'auto',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  grid: {\r\n    justifyContent: 'center',\r\n    padding: 8\r\n  }\r\n}));\r\n\r\nconst SetupUser = (props) => {\r\n  const classes = useStyles();\r\n  const { userById } = props;\r\n\r\n  const [idUrl] = useState(window.location.href.split('/?')[1]);\r\n  const defaultFormShape = {\r\n    email: '',\r\n    name: '',\r\n    parentId: {\r\n      cpf: '',\r\n      phone: '',\r\n      address: {\r\n        state: '',\r\n        city: '',\r\n        street: '',\r\n        number: '',\r\n        type: '',\r\n        district: '',\r\n        zip: '',\r\n        obs: ''\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(()=>{\r\n    props.getUserById(idUrl);\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <Formik \r\n        initialValues= {userById._id? userById : defaultFormShape}\r\n        enableReinitialize\r\n        validationSchema={Yup.object({\r\n          email: Yup.string()\r\n            .required('Email obrigatório!'),\r\n          name: Yup.string()\r\n            .required('Nome obrigatório!'),\r\n          parentId: Yup.object({\r\n            cpf: Yup.string()\r\n              .required('Cpf obrigatório!'),\r\n            phone: Yup.string()\r\n              .required('Telefone obrigatório!'),\r\n            address: Yup.object({\r\n              zip: Yup.string()\r\n                .required('Cep obrigatorio!'),\r\n              street: Yup.string()\r\n                .required('Rua obrigatorio!'),\r\n              district: Yup.string()\r\n                .required('Bairro obrigatorio!'),\r\n              city: Yup.string()\r\n                .required('Cidade obrigatorio!'),\r\n              state: Yup.string()\r\n                .required('Estado obrigatorio!'),\r\n              number: Yup.string()\r\n                .required('Número obrigatorio!'),\r\n            }),\r\n          }),\r\n        })}\r\n\r\n        onSubmit={(values) => {\r\n          const { email } = values;\r\n          const { name, phone, cpf } = values.parentId;\r\n          const { state, city, street, number, type, district, zip, obs } = values.parentId.address;\r\n          const address = {state, city, street, number, type, district, zip, obs};\r\n          const userUpdate = { name, email, cpf, phone, address };\r\n          props.updateCompany(userUpdate, userById._id);\r\n        }}>\r\n        {formik => (\r\n          <Card >\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <p style={{margin: 10}}>Dados</p>\r\n              <Grid container>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Nome:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"name\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('name')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.name && formik.errors.name ? (\r\n                        <Typography className={classes.error}>{formik.errors.name}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"CPF:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"cpf\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('parentId.cpf')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.parentId && formik.errors.parentId ? (\r\n                        <Typography className={classes.error}>{formik.errors.parentId.cpf}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Email:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"email\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('email')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.email && formik.errors.email ? (\r\n                        <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Telefone:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"phone\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('parentId.phone')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.parentId && formik.errors.parentId ? (\r\n                        <Typography className={classes.error}>{formik.errors.parentId.phone}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{margin: 10}}>Endereço</p>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cep:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"parentId.address.zip\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('parentId.address.zip')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.parentId && formik.errors.parentId ? (\r\n                        <Typography className={classes.error}>{formik.errors.parentId.address.zip}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Rua:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"parentId.address.street\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('parentId.address.street')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.parentId && formik.errors.parentId ? (\r\n                        <Typography className={classes.error}>{formik.errors.parentId.address.street}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Bairro:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"parentId.address.district\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('parentId.address.district')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.parentId && formik.errors.parentId ? (\r\n                        <Typography className={classes.error}>{formik.errors.parentId.address.district}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cidade:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"parentId.address.city\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('parentId.address.city')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.parentId && formik.errors.parentId ? (\r\n                        <Typography className={classes.error}>{formik.errors.parentId.address.city}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Estado:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"parentId.address.state\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('parentId.address.state')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.parentId && formik.errors.parentId ? (\r\n                        <Typography className={classes.error}>{formik.errors.parentId.address.state}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Número:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"parentId.address.number\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('parentId.address.number')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.parentId && formik.errors.parentId ? (\r\n                        <Typography className={classes.error}>{formik.errors.parentId.address.number}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Divider/>\r\n                  <Button type=\"submit\" className={classes.button} variant=\"contained\" color=\"primary\">\r\n                    Atualizar\r\n                  </Button>\r\n                  <Button className={classes.button} component={Link} to={`/user/?${userById._id}?page=1&limit=25`} variant=\"outlined\" color=\"primary\">\r\n                    Cancelar\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nSetupUser.prototypes = {\r\n  userById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userById: state.adm.userById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ getUserById, updateUser }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupUser);"]},"metadata":{},"sourceType":"module"}