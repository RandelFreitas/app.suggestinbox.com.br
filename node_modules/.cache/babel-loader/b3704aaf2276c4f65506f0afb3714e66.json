{"ast":null,"code":"import api from '../services/api';\nimport history from '../services/history';\nconst ACTIONS = {\n  LIST_COMPANIES: 'LISTCOMPANIES',\n  BY_ID_COMPANY: 'BYIDCOMPANY',\n  UPDATE_COMPANY: 'UPDATECOMPANY',\n  ATV_MENU: 'ATVMENU',\n  ATV_PROMO: 'ATVPROMO',\n  CLEAN_COMPANY: 'CLEANCOMPANY',\n  ADD_COMPANY: 'ADDCOMPANY'\n};\nconst INITIAL_STATE = {\n  companies: [],\n  infosCompanies: [],\n  companyById: [],\n  companyAtv: []\n};\nexport const companyReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LIST_COMPANIES:\n      return { ...state,\n        companies: action.companies,\n        infosCompanies: action.infosCompanies\n      };\n\n    case ACTIONS.ADD_COMPANY:\n      return { ...state,\n        companyById: action.companyById\n      };\n\n    case ACTIONS.BY_ID_COMPANY:\n      return { ...state,\n        companyById: action.companyById\n      };\n\n    case ACTIONS.UPDATE_COMPANY:\n      return state;\n\n    case ACTIONS.ATV_MENU:\n      return { ...state,\n        companyById: action.companyById\n      };\n\n    case ACTIONS.ATV_PROMO:\n      return { ...state,\n        companyById: action.companyById\n      };\n    //DEFAULT\n\n    default:\n      return state;\n  }\n}; //LISTAR COMPANIAS\n\nexport const listCompanies = (page, nOfItems) => {\n  return dispatch => {\n    api.get(`/adm/company?page=${page}&limit=${nOfItems}`).then(Response => {\n      const {\n        docs,\n        infos\n      } = Response.data;\n      dispatch({\n        type: ACTIONS.LIST_COMPANIES,\n        companies: docs,\n        infosCompanies: infos\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; //ADICIONAR COMPANY\n\nexport const addCompany = (company, id) => {\n  return dispatch => {\n    api.post('/adm/company', company).then(Response => {\n      dispatch({\n        type: ACTIONS.ADD_COMPANY,\n        companyById: Response.data\n      });\n    }, history.push(`/user`)).catch(error => {\n      console.log(error);\n    });\n  };\n}; //GET BY ID COMPANY\n\nexport const getCompanyById = id => {\n  return dispatch => {\n    api.get(`/adm/company/${id}`).then(Response => {\n      dispatch({\n        type: ACTIONS.BY_ID_COMPANY,\n        companyById: Response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; //UPDATE COMPANY\n\nexport const updateCompany = (company, id, idUser) => {\n  return dispatch => {\n    api.put(`/adm/company/${id}`, company).then(Response => {\n      dispatch({\n        type: ACTIONS.UPDATE_COMPANY //company: Response.data\n\n      });\n    }, history.push(`/suggest/?${idUser}/?${id}?page=1&limit=25`)).catch(error => {\n      console.log(error);\n    });\n  };\n}; //LIMPAR CAMPOS COMPANY\n\nexport const cleanCompany = () => {\n  return {\n    type: ACTIONS.CLEAN_COMPANY\n  };\n}; //*******************************************PROMO*********************************************\n//ATIVAR PROMO\n\nexport const atvPromo = company => {\n  return dispatch => {\n    api.put(`/adm/company/${company._id}`, company).then(Response => {\n      dispatch({\n        type: ACTIONS.ATV_PROMO,\n        companyById: company\n      });\n    });\n  };\n}; //*******************************************MENU*********************************************\n//ATIVAR MENU\n\nexport const atvMenu = company => {\n  return dispatch => {\n    api.put(`/adm/company/${company._id}`, company).then(Response => {\n      dispatch({\n        type: ACTIONS.ATV_MENU,\n        companyById: company\n      });\n    });\n  };\n};","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/app.suggestinbox.com.br/src/store/companyReducer.js"],"names":["api","history","ACTIONS","LIST_COMPANIES","BY_ID_COMPANY","UPDATE_COMPANY","ATV_MENU","ATV_PROMO","CLEAN_COMPANY","ADD_COMPANY","INITIAL_STATE","companies","infosCompanies","companyById","companyAtv","companyReducer","state","action","type","listCompanies","page","nOfItems","dispatch","get","then","Response","docs","infos","data","catch","error","console","log","addCompany","company","id","post","push","getCompanyById","updateCompany","idUser","put","cleanCompany","atvPromo","_id","atvMenu"],"mappings":"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","sourcesContent":["import api from '../services/api';\r\nimport history from '../services/history';\r\n\r\nconst ACTIONS = {\r\n  LIST_COMPANIES: 'LISTCOMPANIES',\r\n  BY_ID_COMPANY: 'BYIDCOMPANY',\r\n  UPDATE_COMPANY: 'UPDATECOMPANY',\r\n  ATV_MENU: 'ATVMENU',\r\n  ATV_PROMO: 'ATVPROMO',\r\n  CLEAN_COMPANY: 'CLEANCOMPANY',\r\n  ADD_COMPANY: 'ADDCOMPANY',\r\n}\r\nconst INITIAL_STATE = {\r\n  companies: [],\r\n  infosCompanies: [],\r\n  companyById: [],\r\n  companyAtv: [],\r\n}\r\nexport const companyReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.LIST_COMPANIES:\r\n      return {...state, companies: action.companies, infosCompanies: action.infosCompanies}\r\n    case ACTIONS.ADD_COMPANY:\r\n      return {...state, companyById: action.companyById}\r\n    case ACTIONS.BY_ID_COMPANY:\r\n      return {...state, companyById: action.companyById}\r\n    case ACTIONS.UPDATE_COMPANY:\r\n      return state;\r\n    case ACTIONS.ATV_MENU:\r\n      return {...state, companyById: action.companyById}\r\n    case ACTIONS.ATV_PROMO:\r\n      return {...state, companyById: action.companyById}\r\n    //DEFAULT\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//LISTAR COMPANIAS\r\nexport const listCompanies = (page, nOfItems) => {\r\n  return dispatch => {\r\n    api.get(`/adm/company?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_COMPANIES,\r\n        companies: docs,\r\n        infosCompanies: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//ADICIONAR COMPANY\r\nexport const addCompany = (company, id) => {\r\n  return dispatch => {\r\n    api.post('/adm/company', company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ADD_COMPANY,\r\n        companyById: Response.data,\r\n      });\r\n    }, history.push(`/user`))\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//GET BY ID COMPANY\r\nexport const getCompanyById = (id) => {\r\n  return dispatch => {\r\n    api.get(`/adm/company/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_COMPANY,\r\n        companyById: Response.data,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n//UPDATE COMPANY\r\nexport const updateCompany = (company, id, idUser) => {\r\n  return dispatch => {\r\n    api.put(`/adm/company/${id}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_COMPANY,\r\n        //company: Response.data\r\n      })\r\n    }, history.push(`/suggest/?${idUser}/?${id}?page=1&limit=25`))\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n//LIMPAR CAMPOS COMPANY\r\nexport const cleanCompany = () => {\r\n  return {\r\n    type: ACTIONS.CLEAN_COMPANY,\r\n  }\r\n}\r\n//*******************************************PROMO*********************************************\r\n//ATIVAR PROMO\r\nexport const atvPromo = (company) => {\r\n  return dispatch => {\r\n    api.put(`/adm/company/${company._id}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ATV_PROMO,\r\n        companyById: company\r\n      })\r\n    })\r\n  }\r\n}\r\n//*******************************************MENU*********************************************\r\n//ATIVAR MENU\r\nexport const atvMenu = (company) => {\r\n  return dispatch => {\r\n    api.put(`/adm/company/${company._id}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ATV_MENU,\r\n        companyById: company\r\n      })\r\n    })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}