{"ast":null,"code":"var _jsxFileName = \"D:\\\\Randel\\\\PROJETO 2020\\\\SuggestInBox\\\\SuggestInBoxFront\\\\src\\\\pages\\\\Client\\\\FormClient\\\\index.js\";\nimport React, { useState } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { submitSuggest } from '../../../store/clientReducer';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport NumberFormat from 'react-number-format';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '30ch'\n    }\n  }\n}));\n\nconst FormClient = props => {\n  const {\n    infos\n  } = props;\n  const classes = useStyles();\n  const [disab, setDisab] = useState(false);\n\n  const desabilitar = () => {\n    if (disab === false) {\n      setDisab(true);\n    } else {\n      setDisab(false);\n    }\n  };\n\n  const NumberFormatCustom = props => {\n    const {\n      inputRef,\n      onChange,\n      ...other\n    } = props;\n    return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n      getInputRef: inputRef,\n      onValueChange: values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value\n          }\n        });\n      },\n      thousandSeparator: true,\n      isNumericString: true,\n      prefix: \"$\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  const [values, setValues] = useState('');\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Telefone\",\n    value: values,\n    onChange: handleChange,\n    name: \"numberformat\",\n    id: \"formatted-numberformat-input\",\n    InputProps: {\n      inputComponent: NumberFormatCustom\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n};\n\nFormClient.prototypes = {\n  infos: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  infos: state.client.infos\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  submitSuggest\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormClient);","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/SuggestInBoxFront/src/pages/Client/FormClient/index.js"],"names":["React","useState","bindActionCreators","PropTypes","connect","submitSuggest","makeStyles","TextField","NumberFormat","useStyles","theme","root","margin","spacing","width","FormClient","props","infos","classes","disab","setDisab","desabilitar","NumberFormatCustom","inputRef","onChange","other","values","target","name","value","setValues","handleChange","event","inputComponent","prototypes","array","isRequired","mapStateToProps","state","client","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { submitSuggest } from '../../../store/clientReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '30ch',\r\n    },\r\n  },\r\n}));\r\n\r\nconst FormClient = (props) => {\r\n  const { infos } = props;\r\n  const classes = useStyles();\r\n  \r\n  const [ disab, setDisab] = useState(false);\r\n  const desabilitar = () =>{\r\n    if(disab === false){\r\n      setDisab(true);\r\n    }else{\r\n      setDisab(false);\r\n    }\r\n  }\r\n\r\n  const NumberFormatCustom = (props) => {\r\n    const { inputRef, onChange, ...other } = props;\r\n    return (\r\n      <NumberFormat\r\n        {...other}\r\n        getInputRef={inputRef}\r\n        onValueChange={(values) => {\r\n          onChange({\r\n            target: {\r\n              name: props.name,\r\n              value: values.value,\r\n            },\r\n          });\r\n        }}\r\n        thousandSeparator\r\n        isNumericString\r\n        prefix=\"$\"\r\n      />\r\n    );\r\n  }\r\n\r\n  const [values, setValues] = useState('');\r\n  const handleChange = (event) => {\r\n    setValues({...values, [event.target.name]: event.target.value});\r\n  };\r\n\r\n  return(\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <TextField id=\"standard-basic\" label=\"Nome\" />\r\n      <TextField label=\"Telefone\"\r\n        value={values}\r\n        onChange={handleChange}\r\n        name=\"numberformat\"\r\n        id=\"formatted-numberformat-input\"\r\n        InputProps={{inputComponent: NumberFormatCustom}}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nFormClient.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({submitSuggest}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormClient);"]},"metadata":{},"sourceType":"module"}