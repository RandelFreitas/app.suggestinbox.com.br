{"ast":null,"code":"var _jsxFileName = \"D:\\\\Randel\\\\PROJETO 2020\\\\SuggestInBox\\\\app.suggestinbox.com.br\\\\src\\\\pages\\\\User\\\\SetupCompany\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport NumberFormat from 'react-number-format';\nimport * as Yup from 'yup';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Divider, Button, TextField, Card, Typography, Grid } from '@material-ui/core';\nimport { addCompany, getCompanyById, updateCompany, cleanCompany } from '../../../store/admReducer';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: 8\n  },\n  button: {\n    float: 'right',\n    margin: 8\n  },\n  media: {\n    margin: 'auto',\n    width: 140,\n    height: 140\n  },\n  card: {\n    marginBottom: 10\n  },\n  center: {\n    margin: 'auto'\n  },\n  error: {\n    color: 'red',\n    fontSize: 12\n  },\n  grid: {\n    justifyContent: 'center',\n    padding: 8\n  }\n}));\n\nconst ZipFormatCustom = props => {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    isNumericString: true,\n    format: \"#####-###\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }));\n};\n\nZipFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nconst CnpjFormatCustom = props => {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    isNumericString: true,\n    format: \"##.###.###/####-##\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }));\n};\n\nCnpjFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nconst PhoneFormatCustom = props => {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    isNumericString: true,\n    format: \"(##) #########\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }));\n};\n\nPhoneFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nconst SetupCompany = props => {\n  const classes = useStyles();\n  const {\n    companyById\n  } = props;\n  const [idUser] = useState(window.location.href.split('/?')[1]);\n  const [idCompany] = useState(window.location.href.split('/?')[2]);\n  const defaultFormShape = {\n    name: '',\n    cnpj: '',\n    slogan: '',\n    history: '',\n    localization: '',\n    email: '',\n    phone: '',\n    address: {\n      state: '',\n      city: '',\n      street: '',\n      number: '',\n      type: '',\n      district: '',\n      zip: '',\n      obs: ''\n    }\n  };\n  useEffect(() => {\n    if (idCompany) {\n      props.getCompanyById(idCompany);\n    } else {\n      props.cleanCompany();\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: companyById._id ? companyById : defaultFormShape,\n    enableReinitialize: true,\n    validationSchema: Yup.object({\n      name: Yup.string().required('Nome obrigatório!'),\n      cnpj: Yup.string().required('Cnpj obrigatório!'),\n      slogan: Yup.string().required('Slogan obrigatório'),\n      history: Yup.string().required('História obrigatória'),\n      localization: Yup.string().required('Localização obrigatória'),\n      email: Yup.string().required('Email obrigatório!'),\n      phone: Yup.string().required('Telefone obrigatório!'),\n      address: Yup.object({\n        zip: Yup.string().required('Cep obrigatorio!'),\n        street: Yup.string().required('Rua obrigatorio!'),\n        district: Yup.string().required('Bairro obrigatorio!'),\n        city: Yup.string().required('Cidade obrigatorio!'),\n        state: Yup.string().required('Estado obrigatorio!'),\n        number: Yup.string().required('Número obrigatorio!')\n      })\n    }),\n    onSubmit: values => {\n      if (companyById._id) {\n        const {\n          name,\n          slogan,\n          history,\n          localization,\n          email,\n          cnpj,\n          phone\n        } = values;\n        const {\n          state,\n          city,\n          street,\n          number,\n          type,\n          district,\n          zip,\n          obs\n        } = values.address;\n        const address = {\n          state,\n          city,\n          street,\n          number,\n          type,\n          district,\n          zip,\n          obs\n        };\n        const companyUpdate = {\n          name,\n          slogan,\n          history,\n          localization,\n          email,\n          cnpj,\n          phone,\n          address\n        };\n        props.updateCompany(companyUpdate, companyById._id, idUser);\n      } else {\n        props.addCompany(values);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, formik => /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, \"Dados\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    spacing: 1,\n    className: classes.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Nome:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"name\",\n    inputProps: {\n      maxLength: 70\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('name'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }, formik.touched.name && formik.errors.name ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 25\n    }\n  }, formik.errors.name) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Slogan:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"slogan\",\n    inputProps: {\n      maxLength: 50\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('slogan'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  }, formik.touched.slogan && formik.errors.slogan ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 25\n    }\n  }, formik.errors.slogan) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Hist\\xF3ria:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"history\",\n    inputProps: {\n      maxLength: 250\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('history'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 21\n    }\n  }, formik.touched.history && formik.errors.history ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 25\n    }\n  }, formik.errors.history) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Localiza\\xE7\\xE3o:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"localization\",\n    inputProps: {\n      maxLength: 250\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('localization'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 21\n    }\n  }, formik.touched.localization && formik.errors.localization ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 25\n    }\n  }, formik.errors.localization) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Email:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"email\",\n    inputProps: {\n      maxLength: 70\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('email'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 21\n    }\n  }, formik.touched.email && formik.errors.email ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 25\n    }\n  }, formik.errors.email) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Telefone:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"phone\",\n    InputProps: {\n      inputComponent: PhoneFormatCustom\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('phone'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 21\n    }\n  }, formik.touched.phone && formik.errors.phone ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 25\n    }\n  }, formik.errors.phone) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"CNPJ:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"cnpj\",\n    InputProps: {\n      inputComponent: CnpjFormatCustom\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('cnpj'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 21\n    }\n  }, formik.touched.cnpj && formik.errors.cnpj ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 25\n    }\n  }, formik.errors.cnpj) : null))), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 17\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    spacing: 1,\n    className: classes.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Cep:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"address.zip\",\n    InputProps: {\n      inputComponent: ZipFormatCustom\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('address.zip'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 21\n    }\n  }, formik.touched.address && formik.errors.address ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 25\n    }\n  }, formik.errors.address.zip) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Rua:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"address.street\",\n    inputProps: {\n      maxLength: 70\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('address.street'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 21\n    }\n  }, formik.touched.address && formik.errors.address ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 25\n    }\n  }, formik.errors.address.street) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Bairro:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"address.district\",\n    inputProps: {\n      maxLength: 70\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('address.district'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 21\n    }\n  }, formik.touched.address && formik.errors.address ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 25\n    }\n  }, formik.errors.address.district) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Cidade:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"address.city\",\n    inputProps: {\n      maxLength: 70\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('address.city'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 21\n    }\n  }, formik.touched.address && formik.errors.address ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 25\n    }\n  }, formik.errors.address.city) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Estado:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"address.state\",\n    inputProps: {\n      maxLength: 30\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('address.state'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 21\n    }\n  }, formik.touched.address && formik.errors.address ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 25\n    }\n  }, formik.errors.address.state) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"N\\xFAmero:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"address.number\",\n    inputProps: {\n      maxLength: 10\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('address.number'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 21\n    }\n  }, formik.touched.address && formik.errors.address ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 25\n    }\n  }, formik.errors.address.number) : null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 19\n    }\n  }, companyById._id ? 'Atualizar' : 'Salvar'), /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    component: Link,\n    to: companyById._id ? `/suggest/?${idUser}/?${idCompany}?page=1&limit=25` : `/user/?${idUser}?page=1&limit=25`,\n    variant: \"outlined\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 19\n    }\n  }, \"Cancelar\")))))));\n};\n\nSetupCompany.prototypes = {\n  companyById: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  companyById: state.adm.companyById\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  addCompany,\n  getCompanyById,\n  updateCompany,\n  cleanCompany\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupCompany);","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/app.suggestinbox.com.br/src/pages/User/SetupCompany/index.js"],"names":["React","useEffect","useState","connect","Link","bindActionCreators","PropTypes","Formik","NumberFormat","Yup","makeStyles","Divider","Button","TextField","Card","Typography","Grid","addCompany","getCompanyById","updateCompany","cleanCompany","useStyles","theme","root","flexGrow","marginBottom","button","float","margin","media","width","height","card","center","error","color","fontSize","grid","justifyContent","padding","ZipFormatCustom","props","inputRef","onChange","other","values","target","name","value","propTypes","func","isRequired","string","CnpjFormatCustom","PhoneFormatCustom","SetupCompany","classes","companyById","idUser","window","location","href","split","idCompany","defaultFormShape","cnpj","slogan","history","localization","email","phone","address","state","city","street","number","type","district","zip","obs","_id","object","required","companyUpdate","formik","handleSubmit","maxLength","shrink","getFieldProps","touched","errors","inputComponent","prototypes","array","mapStateToProps","adm","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport NumberFormat from 'react-number-format';\r\nimport * as Yup from 'yup';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider, Button, TextField, Card, Typography, Grid} from '@material-ui/core';\r\nimport { addCompany, getCompanyById, updateCompany, cleanCompany } from '../../../store/admReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 8\r\n  },\r\n  button: {\r\n    float: 'right',\r\n    margin: 8,\r\n  },\r\n  media: {\r\n    margin: 'auto',\r\n    width: 140,\r\n    height: 140,\r\n  },\r\n  card: {\r\n    marginBottom: 10,\r\n  },\r\n  center: {\r\n    margin: 'auto',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  grid: {\r\n    justifyContent: 'center',\r\n    padding: 8\r\n  }\r\n}));\r\n\r\nconst ZipFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='#####-###'\r\n    />\r\n  );\r\n}\r\n\r\nZipFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst CnpjFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='##.###.###/####-##'\r\n    />\r\n  );\r\n}\r\n\r\nCnpjFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst PhoneFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='(##) #########'\r\n    />\r\n  );\r\n}\r\n\r\nPhoneFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst SetupCompany = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n\r\n  const [idUser] = useState(window.location.href.split('/?')[1]);\r\n  const [idCompany] = useState(window.location.href.split('/?')[2]);\r\n  const defaultFormShape = {\r\n    name: '',\r\n    cnpj: '',\r\n    slogan: '',\r\n    history: '',\r\n    localization: '',\r\n    email: '',\r\n    phone: '',\r\n    address: {\r\n      state: '',\r\n      city: '',\r\n      street: '',\r\n      number: '',\r\n      type: '',\r\n      district: '',\r\n      zip: '',\r\n      obs: ''\r\n    },\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(idCompany){\r\n      props.getCompanyById(idCompany);\r\n    }else{\r\n      props.cleanCompany();\r\n    }\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <Formik \r\n        initialValues= {companyById._id? companyById : defaultFormShape}\r\n        enableReinitialize\r\n        validationSchema={Yup.object({\r\n          name: Yup.string()\r\n            .required('Nome obrigatório!'),\r\n          cnpj: Yup.string()\r\n            .required('Cnpj obrigatório!'),\r\n          slogan: Yup.string()\r\n            .required('Slogan obrigatório'),\r\n          history: Yup.string()\r\n            .required('História obrigatória'),\r\n          localization: Yup.string()\r\n            .required('Localização obrigatória'),\r\n          email: Yup.string()\r\n            .required('Email obrigatório!'),\r\n          phone: Yup.string()\r\n            .required('Telefone obrigatório!'),\r\n          address: Yup.object({\r\n            zip: Yup.string()\r\n              .required('Cep obrigatorio!'),\r\n            street: Yup.string()\r\n              .required('Rua obrigatorio!'),\r\n            district: Yup.string()\r\n              .required('Bairro obrigatorio!'),\r\n            city: Yup.string()\r\n              .required('Cidade obrigatorio!'),\r\n            state: Yup.string()\r\n              .required('Estado obrigatorio!'),\r\n            number: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n          }),\r\n        })}\r\n\r\n        onSubmit={(values) => {\r\n          if(companyById._id){\r\n            const { name, slogan, history, localization, email, cnpj, phone } = values;\r\n            const { state, city, street, number, type, district, zip, obs } = values.address;\r\n            const address = {state, city, street, number, type, district, zip, obs};\r\n            const companyUpdate = { name, slogan, history, localization, email, cnpj, phone, address };\r\n            props.updateCompany(companyUpdate, companyById._id, idUser);\r\n          }else{\r\n            props.addCompany(values);\r\n          }\r\n        }}>\r\n        {formik => (\r\n          <Card >\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <p style={{margin: 10}}>Dados</p>\r\n              <Grid container>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Nome:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"name\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('name')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.name && formik.errors.name ? (\r\n                        <Typography className={classes.error}>{formik.errors.name}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Slogan:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"slogan\"\r\n                      inputProps={{ maxLength: 50 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('slogan')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.slogan && formik.errors.slogan ? (\r\n                        <Typography className={classes.error}>{formik.errors.slogan}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"História:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"history\"\r\n                      inputProps={{ maxLength: 250 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('history')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.history && formik.errors.history ? (\r\n                        <Typography className={classes.error}>{formik.errors.history}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Localização:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"localization\"\r\n                      inputProps={{ maxLength: 250 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('localization')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.localization && formik.errors.localization ? (\r\n                        <Typography className={classes.error}>{formik.errors.localization}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Email:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"email\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('email')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.email && formik.errors.email ? (\r\n                        <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Telefone:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"phone\"\r\n                      InputProps={{inputComponent: PhoneFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('phone')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.phone && formik.errors.phone ? (\r\n                        <Typography className={classes.error}>{formik.errors.phone}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"CNPJ:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"cnpj\"\r\n                      InputProps={{inputComponent: CnpjFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('cnpj')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.cnpj && formik.errors.cnpj ? (\r\n                        <Typography className={classes.error}>{formik.errors.cnpj}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{margin: 10}}>Endereço</p>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cep:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.zip\"\r\n                      InputProps={{inputComponent: ZipFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.zip')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.zip}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Rua:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.street\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.street')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.street}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Bairro:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.district\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.district')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.district}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cidade:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.city\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.city')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.city}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Estado:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.state\"\r\n                      inputProps={{ maxLength: 30 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.state')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.state}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Número:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.number\"\r\n                      inputProps={{ maxLength: 10 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.number')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.number}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Divider/>\r\n                  <Button type=\"submit\" className={classes.button} variant=\"contained\" color=\"primary\">\r\n                    {companyById._id? 'Atualizar': 'Salvar'}\r\n                  </Button>\r\n                  <Button className={classes.button} component={Link} \r\n                          to={companyById._id? `/suggest/?${idUser}/?${idCompany}?page=1&limit=25` : `/user/?${idUser}?page=1&limit=25`} variant=\"outlined\" color=\"primary\">\r\n                    Cancelar\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nSetupCompany.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.adm.companyById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ addCompany, getCompanyById, updateCompany, cleanCompany }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupCompany);"]},"metadata":{},"sourceType":"module"}