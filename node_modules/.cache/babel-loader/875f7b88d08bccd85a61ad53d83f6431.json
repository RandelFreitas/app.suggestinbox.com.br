{"ast":null,"code":"var _jsxFileName = \"D:\\\\Randel\\\\PROJETO 2020\\\\SuggestInBox\\\\app.suggestinbox.com.br\\\\src\\\\pages\\\\User\\\\SetupCompany\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport NumberFormat from 'react-number-format';\nimport * as Yup from 'yup';\nimport QRCode from 'qrcode.react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { showProgress, hideProgress } from '../../../store/messageReducer';\nimport MessageDialog from '../../../components/Dialog';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Divider, Button, TextField, Card, Typography, Grid } from '@material-ui/core';\nimport { addCompany, getCompanyById, updateCompany, cleanCompany } from '../../../store/companyReducer';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: 8\n  },\n  qrCode: {\n    textAlign: 'center',\n    maxWidth: '200px',\n    margin: '15px'\n  },\n  button: {\n    float: 'right',\n    margin: 8\n  },\n  buttonQr: {\n    margin: '5px',\n    padding: '5px',\n    fontSize: '12px',\n    width: '90px'\n  },\n  buttonPhoto: {\n    margin: '5px',\n    padding: '5px',\n    fontSize: '12px',\n    width: '110px'\n  },\n  media: {\n    margin: 'auto',\n    width: 140,\n    height: 140\n  },\n  cardMain: {\n    marginBottom: '10px'\n  },\n  card: {\n    marginBottom: 10\n  },\n  sectionImg: {\n    justifyContent: 'center'\n  },\n  photo: {\n    marginBottom: '5px',\n    width: 128,\n    height: 128\n  },\n  center: {\n    margin: 'auto'\n  },\n  error: {\n    color: 'red',\n    fontSize: 12\n  },\n  grid: {\n    justifyContent: 'center',\n    padding: 8\n  },\n  hide: {\n    display: 'none'\n  },\n  qrCodeTable: {\n    textAlign: 'center',\n    maxWidth: '300px',\n    margin: '15px'\n  },\n  nTable: {\n    width: '90px'\n  },\n  title: {\n    margin: '15px'\n  }\n}));\n\nconst ZipFormatCustom = props => {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    isNumericString: true,\n    format: \"#####-###\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }));\n};\n\nZipFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nconst CnpjFormatCustom = props => {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    isNumericString: true,\n    format: \"##.###.###/####-##\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }));\n};\n\nCnpjFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nconst PhoneFormatCustom = props => {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    isNumericString: true,\n    format: \"(##) #########\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }));\n};\n\nPhoneFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nconst SetupCompany = props => {\n  const classes = useStyles();\n  const {\n    companyById\n  } = props;\n  const [idUser] = useState(window.location.href.split('?')[1]);\n  const [idCompany] = useState(window.location.href.split('?')[2]);\n  const defaultFormShape = {\n    name: '',\n    cnpj: '',\n    slogan: '',\n    history: '',\n    localization: '',\n    email: '',\n    phone: '',\n    address: {\n      state: '',\n      city: '',\n      street: '',\n      number: '',\n      type: '',\n      district: '',\n      zip: '',\n      obs: ''\n    }\n  };\n  const [nTable, setNTable] = useState(0);\n\n  const tableChange = event => {\n    setNTable(event.target.value);\n  };\n\n  useEffect(() => {\n    if (idCompany) {\n      props.getCompanyById(idCompany);\n    } else {\n      props.cleanCompany();\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.cardMain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.sectionImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.qrCode,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.photo,\n    image: \"/assets/logoBar.png\",\n    title: \"Contemplative Reptile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    accept: \"image/*\",\n    className: classes.input,\n    style: {\n      display: 'none'\n    },\n    id: \"raised-button-file\",\n    multiple: true,\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, \"Foto perfil\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"raised-button-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonPhoto,\n    variant: \"outlined\",\n    component: \"span\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  }, \"Alterar Foto\"))), /*#__PURE__*/React.createElement(Grid, {\n    className: idCompany ? classes.qrCode : classes.hide,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(QRCode, {\n    value: `https://app.suggestinbox.com.br/client/?${idCompany}?table=0`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, \"QR Code geral\"), /*#__PURE__*/React.createElement(Button, {\n    rel: \"noopener noreferrer\",\n    className: classes.buttonQr,\n    target: \"_blank\",\n    href: `http://app.suggestinbox.com.br/client/?${idCompany}?table=0`,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, \"Ver Perfil\"), /*#__PURE__*/React.createElement(Button, {\n    rel: \"noopener noreferrer\",\n    className: classes.buttonQr,\n    target: \"_blank\",\n    href: `http://app.suggestinbox.com.br/client/?${idCompany}?table=0`,\n    variant: \"outlined\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, \"Imprimir\")), /*#__PURE__*/React.createElement(Grid, {\n    className: idCompany ? classes.qrCodeTable : classes.hide,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(QRCode, {\n    value: `https://app.suggestinbox.com.br/client/?${idCompany}?table=${nTable}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, \"QR Code por mesa\"), /*#__PURE__*/React.createElement(TextField, {\n    className: classes.nTable,\n    id: \"standard-number\",\n    label: \"N\\xBA da mesa\",\n    type: \"number\",\n    value: nTable,\n    onChange: tableChange,\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    rel: \"noopener noreferrer\",\n    className: classes.buttonQr,\n    target: \"_blank\",\n    href: `http://app.suggestinbox.com.br/client/?${idCompany}?table=${nTable}`,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }, \"Ver Perfil\"), /*#__PURE__*/React.createElement(Button, {\n    rel: \"noopener noreferrer\",\n    className: classes.buttonQr,\n    target: \"_blank\",\n    href: `localhost:3000/client/?${idCompany}?table=0`,\n    variant: \"outlined\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, \"Imprimir\")))), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: idCompany ? companyById : defaultFormShape,\n    enableReinitialize: true,\n    validationSchema: Yup.object({\n      name: Yup.string().required('Nome obrigatório!'),\n      cnpj: Yup.string().required('Cnpj obrigatório!'),\n      slogan: Yup.string().required('Slogan obrigatório'),\n      history: Yup.string().required('História obrigatória'),\n      localization: Yup.string().required('Localização obrigatória'),\n      email: Yup.string().required('Email obrigatório!'),\n      phone: Yup.string().required('Telefone obrigatório!'),\n      address: Yup.object({\n        zip: Yup.string().required('Cep obrigatorio!'),\n        street: Yup.string().required('Rua obrigatorio!'),\n        district: Yup.string().required('Bairro obrigatorio!'),\n        city: Yup.string().required('Cidade obrigatorio!'),\n        state: Yup.string().required('Estado obrigatorio!'),\n        number: Yup.string().required('Número obrigatorio!')\n      })\n    }),\n    onSubmit: values => {\n      if (companyById._id) {\n        const {\n          name,\n          slogan,\n          history,\n          localization,\n          email,\n          cnpj,\n          phone\n        } = values;\n        const {\n          state,\n          city,\n          street,\n          number,\n          type,\n          district,\n          zip,\n          obs\n        } = values.address;\n        const address = {\n          state,\n          city,\n          street,\n          number,\n          type,\n          district,\n          zip,\n          obs\n        };\n        const companyUpdate = {\n          name,\n          slogan,\n          history,\n          localization,\n          email,\n          cnpj,\n          phone,\n          address\n        };\n        props.updateCompany(companyUpdate, companyById._id, idUser);\n      } else {\n        props.addCompany(values, idUser);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }\n  }, formik => /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 15\n    }\n  }, \"Dados da companhia\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    spacing: 1,\n    className: classes.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Nome:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"name\",\n    inputProps: {\n      maxLength: 70\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('name'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 21\n    }\n  }, formik.touched.name && formik.errors.name ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 25\n    }\n  }, formik.errors.name) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Slogan:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"slogan\",\n    inputProps: {\n      maxLength: 50\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('slogan'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 21\n    }\n  }, formik.touched.slogan && formik.errors.slogan ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 25\n    }\n  }, formik.errors.slogan) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Hist\\xF3ria:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"history\",\n    inputProps: {\n      maxLength: 250\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('history'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 21\n    }\n  }, formik.touched.history && formik.errors.history ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 25\n    }\n  }, formik.errors.history) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Localiza\\xE7\\xE3o:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"localization\",\n    inputProps: {\n      maxLength: 250\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('localization'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 21\n    }\n  }, formik.touched.localization && formik.errors.localization ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 25\n    }\n  }, formik.errors.localization) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Email:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"email\",\n    inputProps: {\n      maxLength: 70\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('email'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 21\n    }\n  }, formik.touched.email && formik.errors.email ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 25\n    }\n  }, formik.errors.email) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Telefone:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"phone\",\n    InputProps: {\n      inputComponent: PhoneFormatCustom\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('phone'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 21\n    }\n  }, formik.touched.phone && formik.errors.phone ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 25\n    }\n  }, formik.errors.phone) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"CNPJ:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"cnpj\",\n    InputProps: {\n      inputComponent: CnpjFormatCustom\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('cnpj'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 21\n    }\n  }, formik.touched.cnpj && formik.errors.cnpj ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 25\n    }\n  }, formik.errors.cnpj) : null))), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 17\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    spacing: 1,\n    className: classes.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Cep:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"address.zip\",\n    InputProps: {\n      inputComponent: ZipFormatCustom\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('address.zip'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 21\n    }\n  }, formik.touched.address && formik.errors.address ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 25\n    }\n  }, formik.errors.address.zip) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Rua:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"address.street\",\n    inputProps: {\n      maxLength: 70\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('address.street'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 21\n    }\n  }, formik.touched.address && formik.errors.address ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 25\n    }\n  }, formik.errors.address.street) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Bairro:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"address.district\",\n    inputProps: {\n      maxLength: 70\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('address.district'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 21\n    }\n  }, formik.touched.address && formik.errors.address ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 25\n    }\n  }, formik.errors.address.district) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Cidade:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"address.city\",\n    inputProps: {\n      maxLength: 70\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('address.city'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 21\n    }\n  }, formik.touched.address && formik.errors.address ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 25\n    }\n  }, formik.errors.address.city) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"Estado:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"address.state\",\n    inputProps: {\n      maxLength: 30\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('address.state'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 21\n    }\n  }, formik.touched.address && formik.errors.address ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 25\n    }\n  }, formik.errors.address.state) : null)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    label: \"N\\xFAmero:\",\n    margin: \"dense\",\n    fullWidth: true,\n    name: \"address.number\",\n    inputProps: {\n      maxLength: 10\n    },\n    InputLabelProps: {\n      shrink: true\n    }\n  }, formik.getFieldProps('address.number'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 21\n    }\n  }, formik.touched.address && formik.errors.address ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 25\n    }\n  }, formik.errors.address.number) : null))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 19\n    }\n  }, idCompany ? 'Atualizar' : 'Salvar'), /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    component: Link,\n    to: idCompany ? `/suggest/?${idUser}/?${idCompany}?page=1&limit=25` : `/user/?${idUser}?page=1&limit=25`,\n    variant: \"outlined\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 19\n    }\n  }, \"Cancelar\")))))));\n};\n\nSetupCompany.prototypes = {\n  companyById: PropTypes.array.isRequired,\n  openDialog: PropTypes.array.isRequired,\n  message: PropTypes.array.isRequired,\n  progress: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  companyById: state.company.companyById,\n  openDialog: state.message.showMessage,\n  message: state.message.message,\n  progress: state.message.progress\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  addCompany,\n  getCompanyById,\n  updateCompany,\n  cleanCompany,\n  showProgress,\n  hideProgress\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupCompany);","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/app.suggestinbox.com.br/src/pages/User/SetupCompany/index.js"],"names":["React","useEffect","useState","connect","Link","bindActionCreators","PropTypes","Formik","NumberFormat","Yup","QRCode","CircularProgress","showProgress","hideProgress","MessageDialog","CardMedia","makeStyles","Divider","Button","TextField","Card","Typography","Grid","addCompany","getCompanyById","updateCompany","cleanCompany","useStyles","theme","root","flexGrow","marginBottom","qrCode","textAlign","maxWidth","margin","button","float","buttonQr","padding","fontSize","width","buttonPhoto","media","height","cardMain","card","sectionImg","justifyContent","photo","center","error","color","grid","hide","display","qrCodeTable","nTable","title","ZipFormatCustom","props","inputRef","onChange","other","values","target","name","value","propTypes","func","isRequired","string","CnpjFormatCustom","PhoneFormatCustom","SetupCompany","classes","companyById","idUser","window","location","href","split","idCompany","defaultFormShape","cnpj","slogan","history","localization","email","phone","address","state","city","street","number","type","district","zip","obs","setNTable","tableChange","event","input","shrink","object","required","_id","companyUpdate","formik","handleSubmit","maxLength","getFieldProps","touched","errors","inputComponent","prototypes","array","openDialog","message","progress","mapStateToProps","company","showMessage","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":[" import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport NumberFormat from 'react-number-format';\r\nimport * as Yup from 'yup';\r\nimport QRCode from 'qrcode.react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { showProgress, hideProgress } from '../../../store/messageReducer';\r\nimport MessageDialog from '../../../components/Dialog';\r\n\r\n\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider, Button, TextField, Card, Typography, Grid} from '@material-ui/core';\r\nimport { addCompany, getCompanyById, updateCompany, cleanCompany } from '../../../store/companyReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 8\r\n  },\r\n  qrCode:{\r\n    textAlign: 'center',\r\n    maxWidth: '200px',\r\n    margin: '15px'\r\n  },\r\n  button: {\r\n    float: 'right',\r\n    margin: 8,\r\n  },\r\n  buttonQr: {\r\n    margin: '5px',\r\n    padding: '5px',\r\n    fontSize: '12px',\r\n    width: '90px'\r\n  },\r\n  buttonPhoto:{\r\n    margin: '5px',\r\n    padding: '5px',\r\n    fontSize: '12px',\r\n    width: '110px'\r\n  },\r\n  media: {\r\n    margin: 'auto',\r\n    width: 140,\r\n    height: 140,\r\n  },\r\n  cardMain: {\r\n    marginBottom: '10px'\r\n  },\r\n  card: {\r\n    marginBottom: 10,\r\n  },\r\n  sectionImg: {\r\n    justifyContent: 'center'\r\n  },\r\n  photo: {\r\n    marginBottom: '5px',\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  center: {\r\n    margin: 'auto',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  grid: {\r\n    justifyContent: 'center',\r\n    padding: 8\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  qrCodeTable: {\r\n    textAlign: 'center',\r\n    maxWidth: '300px',\r\n    margin: '15px'\r\n  },\r\n  nTable: {\r\n    width: '90px'\r\n  },\r\n  title: {\r\n    margin: '15px'\r\n  }\r\n}));\r\n\r\nconst ZipFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='#####-###'\r\n    />\r\n  );\r\n}\r\n\r\nZipFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst CnpjFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='##.###.###/####-##'\r\n    />\r\n  );\r\n}\r\n\r\nCnpjFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst PhoneFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='(##) #########'\r\n    />\r\n  );\r\n}\r\n\r\nPhoneFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst SetupCompany = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n\r\n  const [idUser] = useState(window.location.href.split('?')[1]);\r\n  const [idCompany] = useState(window.location.href.split('?')[2]);\r\n\r\n  const defaultFormShape = {\r\n    name: '',\r\n    cnpj: '',\r\n    slogan: '',\r\n    history: '',\r\n    localization: '',\r\n    email: '',\r\n    phone: '',\r\n    address: {\r\n      state: '',\r\n      city: '',\r\n      street: '',\r\n      number: '',\r\n      type: '',\r\n      district: '',\r\n      zip: '',\r\n      obs: ''\r\n    },\r\n  };\r\n  \r\n  const [ nTable, setNTable ] = useState(0);\r\n  const tableChange = (event) => {\r\n    setNTable(event.target.value);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(idCompany){\r\n      props.getCompanyById(idCompany);\r\n    }else{\r\n      props.cleanCompany();\r\n    }\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.cardMain}>\r\n        <Grid container className={classes.sectionImg}>\r\n          <Grid className={classes.qrCode} item>\r\n            <CardMedia\r\n              className={classes.photo}\r\n              image=\"/assets/logoBar.png\"\r\n              title=\"Contemplative Reptile\"\r\n            />\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              style={{ display: 'none' }}\r\n              id=\"raised-button-file\"\r\n              multiple\r\n              type=\"file\"\r\n            />\r\n            <Typography className={classes.title}>Foto perfil</Typography>\r\n            <label htmlFor=\"raised-button-file\">\r\n              <Button className={classes.buttonPhoto} variant=\"outlined\" component=\"span\" color=\"primary\">\r\n                Alterar Foto\r\n              </Button>\r\n            </label>\r\n          </Grid>\r\n          <Grid className={idCompany?  classes.qrCode : classes.hide} item>\r\n            <QRCode value={`https://app.suggestinbox.com.br/client/?${idCompany}?table=0`}/>\r\n            <Typography className={classes.title}>QR Code geral</Typography>\r\n            <Button rel=\"noopener noreferrer\" className={classes.buttonQr} target=\"_blank\" href={`http://app.suggestinbox.com.br/client/?${idCompany}?table=0`} variant=\"contained\" color=\"primary\">\r\n              Ver Perfil\r\n            </Button>\r\n            <Button rel=\"noopener noreferrer\" className={classes.buttonQr} target=\"_blank\" href={`http://app.suggestinbox.com.br/client/?${idCompany}?table=0`} variant=\"outlined\" color=\"primary\">\r\n              Imprimir\r\n            </Button>\r\n          </Grid>\r\n          <Grid className={idCompany?  classes.qrCodeTable : classes.hide} item>\r\n            <QRCode value={`https://app.suggestinbox.com.br/client/?${idCompany}?table=${nTable}`}/>\r\n            <Typography className={classes.title}>QR Code por mesa</Typography>\r\n            <TextField\r\n              className={classes.nTable}\r\n              id=\"standard-number\"\r\n              label=\"Nº da mesa\"\r\n              type=\"number\"\r\n              value={nTable}\r\n              onChange={tableChange}\r\n              size=\"small\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <Button rel=\"noopener noreferrer\" className={classes.buttonQr} target=\"_blank\" href={`http://app.suggestinbox.com.br/client/?${idCompany}?table=${nTable}`} variant=\"contained\" color=\"primary\">\r\n              Ver Perfil\r\n            </Button>\r\n            <Button rel=\"noopener noreferrer\" className={classes.buttonQr} target=\"_blank\" href={`localhost:3000/client/?${idCompany}?table=0`} variant=\"outlined\" color=\"primary\">\r\n              Imprimir\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n\r\n      <Formik \r\n        initialValues= {idCompany? companyById : defaultFormShape}\r\n        enableReinitialize\r\n        validationSchema={Yup.object({\r\n          name: Yup.string()\r\n            .required('Nome obrigatório!'),\r\n          cnpj: Yup.string()\r\n            .required('Cnpj obrigatório!'),\r\n          slogan: Yup.string()\r\n            .required('Slogan obrigatório'),\r\n          history: Yup.string()\r\n            .required('História obrigatória'),\r\n          localization: Yup.string()\r\n            .required('Localização obrigatória'),\r\n          email: Yup.string()\r\n            .required('Email obrigatório!'),\r\n          phone: Yup.string()\r\n            .required('Telefone obrigatório!'),\r\n          address: Yup.object({\r\n            zip: Yup.string()\r\n              .required('Cep obrigatorio!'),\r\n            street: Yup.string()\r\n              .required('Rua obrigatorio!'),\r\n            district: Yup.string()\r\n              .required('Bairro obrigatorio!'),\r\n            city: Yup.string()\r\n              .required('Cidade obrigatorio!'),\r\n            state: Yup.string()\r\n              .required('Estado obrigatorio!'),\r\n            number: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n          }),\r\n        })}\r\n\r\n        onSubmit={(values) => {\r\n          if(companyById._id){\r\n            const { name, slogan, history, localization, email, cnpj, phone } = values;\r\n            const { state, city, street, number, type, district, zip, obs } = values.address;\r\n            const address = {state, city, street, number, type, district, zip, obs};\r\n            const companyUpdate = { name, slogan, history, localization, email, cnpj, phone, address };\r\n            props.updateCompany(companyUpdate, companyById._id, idUser);\r\n          }else{\r\n            props.addCompany(values, idUser);\r\n          }\r\n        }}>\r\n        {formik => (\r\n          <Card >\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <p style={{margin: 10}}>Dados da companhia</p>\r\n              <Grid container>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Nome:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"name\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('name')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.name && formik.errors.name ? (\r\n                        <Typography className={classes.error}>{formik.errors.name}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Slogan:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"slogan\"\r\n                      inputProps={{ maxLength: 50 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('slogan')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.slogan && formik.errors.slogan ? (\r\n                        <Typography className={classes.error}>{formik.errors.slogan}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"História:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"history\"\r\n                      inputProps={{ maxLength: 250 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('history')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.history && formik.errors.history ? (\r\n                        <Typography className={classes.error}>{formik.errors.history}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Localização:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"localization\"\r\n                      inputProps={{ maxLength: 250 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('localization')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.localization && formik.errors.localization ? (\r\n                        <Typography className={classes.error}>{formik.errors.localization}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Email:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"email\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('email')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.email && formik.errors.email ? (\r\n                        <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Telefone:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"phone\"\r\n                      InputProps={{inputComponent: PhoneFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('phone')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.phone && formik.errors.phone ? (\r\n                        <Typography className={classes.error}>{formik.errors.phone}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"CNPJ:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"cnpj\"\r\n                      InputProps={{inputComponent: CnpjFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('cnpj')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.cnpj && formik.errors.cnpj ? (\r\n                        <Typography className={classes.error}>{formik.errors.cnpj}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{margin: 10}}>Endereço</p>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cep:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.zip\"\r\n                      InputProps={{inputComponent: ZipFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.zip')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.zip}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Rua:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.street\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.street')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.street}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Bairro:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.district\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.district')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.district}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cidade:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.city\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.city')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.city}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Estado:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.state\"\r\n                      inputProps={{ maxLength: 30 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.state')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.state}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Número:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.number\"\r\n                      inputProps={{ maxLength: 10 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.number')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.number}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Divider/>\r\n                  <Button type=\"submit\" className={classes.button} variant=\"contained\" color=\"primary\">\r\n                    {idCompany? 'Atualizar': 'Salvar'}\r\n                  </Button>\r\n                  <Button className={classes.button} component={Link} \r\n                    to={idCompany? `/suggest/?${idUser}/?${idCompany}?page=1&limit=25` : `/user/?${idUser}?page=1&limit=25`} variant=\"outlined\" color=\"primary\">\r\n                    Cancelar\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nSetupCompany.prototypes = {\r\n  companyById: PropTypes.array.isRequired,\r\n  openDialog: PropTypes.array.isRequired,\r\n  message: PropTypes.array.isRequired,\r\n  progress: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n  openDialog: state.message.showMessage,\r\n  message: state.message.message,\r\n  progress: state.message.progress\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ \r\n    addCompany, \r\n    getCompanyById, \r\n    updateCompany, \r\n    cleanCompany, \r\n    showProgress, \r\n    hideProgress \r\n  }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupCompany);"]},"metadata":{},"sourceType":"module"}