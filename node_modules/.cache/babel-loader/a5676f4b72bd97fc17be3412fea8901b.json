{"ast":null,"code":"var _jsxFileName = \"D:\\\\Randel\\\\PROJETO 2020\\\\SuggestInBox\\\\SuggestInBoxFront\\\\src\\\\components\\\\ResetPassword\\\\index.js\";\nimport React, { useCallback, useState } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport history from '../../services/history';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { reset } from '../../store/authReducer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  error: {\n    color: 'red',\n    fontSize: 12\n  },\n  link: {\n    fontSize: 15\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst Reset = props => {\n  const classes = useStyles();\n  const [disableSubmit, setDisableSubmit] = useState(true);\n  const [open, setOpen] = React.useState(false);\n  const [token] = useState(window.location.href.split('/?$')[1]);\n  const [email] = useState(window.location.href.split('/?$')[2]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    history.push('/login');\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      password: ''\n    },\n    validationSchema: Yup.object({\n      password: Yup.string().required('Senha nÃ£o confere')\n    }),\n    onSubmit: values => {\n      const json = {\n        password: values.password,\n        token: token,\n        email: email\n      };\n      console.log(json); //props.reset(values);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Senha recuperada com sucesso!\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Ok\")))), /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    className: classes.appBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"SuggestInBox\"))), /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Recuperar senha\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    type: \"password\",\n    name: \"password\",\n    margin: \"normal\",\n    fullWidth: true,\n    label: \"Senha\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, formik.touched.password && formik.errors.password ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, formik.errors.password) : null), /*#__PURE__*/React.createElement(ReCAPTCHA, {\n    sitekey: \"6Lf2OKoZAAAAADMySEr-aZsfTDc1bc3bXjqHVlig\",\n    onChange: useCallback(() => setDisableSubmit(false)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: handleClickOpen,\n    disabled: disableSubmit,\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onBlur: formik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, \"Enviar link para login\")))));\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  reset\n}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(Reset);","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/SuggestInBoxFront/src/components/ResetPassword/index.js"],"names":["React","useCallback","useState","bindActionCreators","connect","ReCAPTCHA","history","Yup","useFormik","Container","makeStyles","Avatar","LockOutlinedIcon","Typography","Button","TextField","reset","AppBar","Toolbar","Dialog","DialogActions","DialogContent","DialogContentText","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","error","color","fontSize","link","submit","Reset","props","classes","disableSubmit","setDisableSubmit","open","setOpen","token","window","location","href","split","email","handleClickOpen","handleClose","push","formik","initialValues","password","validationSchema","object","string","required","onSubmit","values","json","console","log","appBar","handleSubmit","handleChange","handleBlur","touched","errors","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useCallback, useState} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport history from '../../services/history';\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { reset } from '../../store/authReducer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  link: {\r\n    fontSize: 15 \r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Reset = (props) => {\r\n  const classes = useStyles();\r\n  const [disableSubmit, setDisableSubmit] = useState(true);\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const [ token ] = useState(window.location.href.split('/?$')[1]);\r\n  const [ email ] = useState(window.location.href.split('/?$')[2]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    history.push('/login');\r\n  };\r\n\r\n  const formik = useFormik ({\r\n    initialValues: { password: ''},\r\n    validationSchema: Yup.object({\r\n      password: Yup.string()\r\n        .required('Senha nÃ£o confere')\r\n      }),\r\n      onSubmit: values => {\r\n        const json = {\r\n          password: values.password,\r\n          token: token,\r\n          email: email\r\n        }\r\n        console.log(json);\r\n        //props.reset(values);\r\n      },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              Senha recuperada com sucesso!\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n              Ok\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n        <Typography variant=\"h6\" noWrap>\r\n          SuggestInBox\r\n        </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Recuperar senha\r\n          </Typography> \r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"password\" \r\n              name=\"password\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Senha\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.password} \r\n            />\r\n            <div>\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <Typography className={classes.error}>{formik.errors.password}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <ReCAPTCHA sitekey=\"6Lf2OKoZAAAAADMySEr-aZsfTDc1bc3bXjqHVlig\" onChange={useCallback(() => setDisableSubmit(false))} />\r\n            <Button type=\"submit\" onClick={handleClickOpen} disabled={disableSubmit} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} onBlur={formik.handleBlur}>\r\n              Enviar link para login\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({reset}, dispatch);\r\n\r\nexport default connect(null, mapDispatchToProps)(Reset);"]},"metadata":{},"sourceType":"module"}