{"ast":null,"code":"var _jsxFileName = \"D:\\\\Randel\\\\PROJETO 2020\\\\SuggestInBox\\\\app.suggestinbox.com.br\\\\src\\\\pages\\\\User\\\\Suggest\\\\Menu\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { atvMenu, getCompanyById } from '../../../../store/admReducer';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from \"@material-ui/core/Switch\";\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nconst useStyles = makeStyles(theme => ({\n  button: {\n    marginTop: '25px'\n  }\n}));\n\nconst Menu = props => {\n  const classes = useStyles();\n  const {\n    companyById\n  } = props;\n  const {\n    menu\n  } = props.companyById;\n  console.log(companyById);\n  const [idCompany] = useState(window.location.href.split('/?')[1]);\n  const [idUser] = useState(window.location.href.split('/?')[2]);\n\n  const atvMenu = companyById => {\n    if (companyById.menu) {\n      companyById.menu = false;\n      return props.atvMenu(companyById, idCompany);\n    } else {\n      companyById.menu = true;\n      return props.atvMenu(companyById, idCompany);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Card\\xE1pio / Cat\\xE1logo\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: menu,\n      onChange: () => atvMenu(companyById),\n      name: \"checkedA\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }),\n    label: \"Ativar/Desativar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Criar\"))));\n};\n\nMenu.prototypes = {\n  companyById: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  companyById: state.adm.companyById\n});\n\nconst mapsDispatchToProps = dispatch => bindActionCreators({\n  atvMenu,\n  getCompanyById\n}, dispatch);\n\nexport default connect(mapStateToProps, mapsDispatchToProps)(Menu);","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/app.suggestinbox.com.br/src/pages/User/Suggest/Menu/index.js"],"names":["React","useState","useEffect","Link","PropTypes","bindActionCreators","connect","atvMenu","getCompanyById","makeStyles","Switch","FormGroup","FormControlLabel","Typography","Grid","Button","useStyles","theme","button","marginTop","Menu","props","classes","companyById","menu","console","log","idCompany","window","location","href","split","idUser","prototypes","array","isRequired","mapStateToProps","state","adm","mapsDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { atvMenu, getCompanyById } from '../../../../store/admReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  button: {\r\n    marginTop: '25px',\r\n  },\r\n}));\r\n\r\nconst Menu = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n  const { menu } = props.companyById;\r\n  console.log(companyById);\r\n\r\n  const [ idCompany ] = useState(window.location.href.split('/?')[1]);\r\n  const [ idUser ] = useState(window.location.href.split('/?')[2]);\r\n\r\n  const atvMenu = (companyById) => {\r\n    if(companyById.menu){\r\n      companyById.menu = false;\r\n      return props.atvMenu(companyById, idCompany);\r\n    }else{\r\n      companyById.menu = true;\r\n      return props.atvMenu(companyById, idCompany);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Cardápio / Catálogo</Typography>\r\n      <Grid container>\r\n        <Grid item>\r\n          <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={menu}\r\n                onChange={()=>atvMenu(companyById)}\r\n                name=\"checkedA\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Ativar/Desativar\"\r\n          />\r\n          </FormGroup>\r\n          <Button className={classes.button} variant=\"contained\" color=\"primary\">\r\n            Criar\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nMenu.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.adm.companyById,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({atvMenu, getCompanyById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Menu);"]},"metadata":{},"sourceType":"module"}