{"ast":null,"code":"var _jsxFileName = \"D:\\\\Randel\\\\PROJETO 2020\\\\SuggestInBox\\\\app.suggestinbox.com.br\\\\src\\\\pages\\\\User\\\\Suggest\\\\Promo\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { atvCompany, getCompanyById } from '../../../../store/companyReducer';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from \"@material-ui/core/Switch\";\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  button: {\n    marginTop: '25px'\n  },\n  hide: {\n    display: 'none'\n  },\n  buttonAtv: {\n    margin: '15px 0'\n  }\n}));\n\nconst Promo = props => {\n  const classes = useStyles();\n  const {\n    companyById\n  } = props;\n  const [promo, setPromo] = useState({\n    check: false\n  });\n  useEffect(() => {\n    setPromo({\n      check: companyById.promo\n    });\n  }, [companyById.setPromo]);\n\n  const atvSuggest = companyById => {\n    if (companyById.promo) {\n      companyById.promo = false;\n      setPromo({\n        check: companyById.promo\n      });\n      return props.atvCompany(companyById);\n    } else {\n      companyById.promo = true;\n      setPromo({\n        check: companyById.promo\n      });\n      return props.atvCompany(companyById);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Promo\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: promo.check ? promo.check : false,\n      onClick: () => atvSuggest(companyById),\n      name: \"checkedA\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }),\n    label: \"Ativar/Desativar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })))));\n};\n\nPromo.prototypes = {\n  companyById: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  companyById: state.company.companyById\n});\n\nconst mapsDispatchToProps = dispatch => bindActionCreators({\n  atvCompany,\n  getCompanyById\n}, dispatch);\n\nexport default connect(mapStateToProps, mapsDispatchToProps)(Promo);","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/app.suggestinbox.com.br/src/pages/User/Suggest/Promo/index.js"],"names":["React","useState","useEffect","PropTypes","bindActionCreators","connect","atvCompany","getCompanyById","makeStyles","Switch","FormGroup","FormControlLabel","Typography","Grid","useStyles","theme","button","marginTop","hide","display","buttonAtv","margin","Promo","props","classes","companyById","promo","setPromo","check","atvSuggest","prototypes","array","isRequired","mapStateToProps","state","company","mapsDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { atvCompany, getCompanyById } from '../../../../store/companyReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  button: {\r\n    marginTop: '25px',\r\n  },\r\n  hide: {\r\n    display: 'none'\r\n  },\r\n  buttonAtv: {\r\n    margin: '15px 0'\r\n  }\r\n}));\r\n\r\nconst Promo = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n  const [ promo, setPromo ] = useState({\r\n    check: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    setPromo({check: companyById.promo});\r\n  },[companyById.setPromo])\r\n\r\n  const atvSuggest = (companyById) => {\r\n    if(companyById.promo){\r\n      companyById.promo = false;\r\n      setPromo({check: companyById.promo});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.promo = true;\r\n      setPromo({check: companyById.promo});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Promoção</Typography>\r\n      <Grid container>\r\n        <Grid item >\r\n          <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={promo.check? promo.check: false}\r\n                onClick={()=>atvSuggest(companyById)}\r\n                name=\"checkedA\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Ativar/Desativar\"\r\n          />\r\n          </FormGroup>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nPromo.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({atvCompany, getCompanyById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Promo);"]},"metadata":{},"sourceType":"module"}