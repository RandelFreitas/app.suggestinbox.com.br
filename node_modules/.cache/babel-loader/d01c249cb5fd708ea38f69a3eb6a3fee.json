{"ast":null,"code":"var _jsxFileName = \"D:\\\\Randel\\\\PROJETO 2020\\\\SuggestInBox\\\\app.suggestinbox.com.br\\\\src\\\\pages\\\\Client\\\\MenuClient\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { getMenu } from '../../../store/clientReducer';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: 'auto',\n      width: '100%'\n    }\n  },\n  photo: {\n    margin: '0 auto',\n    marginBottom: '10px',\n    marginTop: '20px',\n    width: 128,\n    height: 128\n  },\n  center: {\n    textAlign: 'center',\n    margin: 'auto',\n    marginBottom: '20px'\n  },\n  button: {\n    marginBottom: \"20px\"\n  },\n  hide: {\n    display: 'none'\n  }\n}));\n\nconst MenuClient = props => {\n  const classes = useStyles();\n  const {\n    menu,\n    sectionMenu,\n    itemMenu\n  } = props;\n  const [companyId] = useState(window.location.href.split('?')[1]);\n  useEffect(() => {\n    props.getMenu(companyId);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, sectionMenu.map(section => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: section._id,\n      role: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, section.type), section.itemMenu.map(item => {\n      /*#__PURE__*/\n      React.createElement(TableCell, {\n        key: item._id,\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 23\n        }\n      }, item.name);\n    }));\n  }))))));\n};\n\nMenuClient.prototypes = {\n  infos: PropTypes.array.isRequired,\n  idTable: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  infos: state.client.infos,\n  idTable: state.client.idTable,\n  menu: state.client.menu,\n  sectionMenu: state.client.sectionMenu,\n  itemMenu: state.client.itemMenu\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  getMenu\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuClient);","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/app.suggestinbox.com.br/src/pages/Client/MenuClient/index.js"],"names":["React","useState","useEffect","PropTypes","bindActionCreators","connect","getMenu","makeStyles","Table","TableBody","TableCell","TableContainer","TableRow","Paper","useStyles","theme","root","margin","width","photo","marginBottom","marginTop","height","center","textAlign","button","hide","display","MenuClient","props","classes","menu","sectionMenu","itemMenu","companyId","window","location","href","split","map","section","_id","type","item","name","prototypes","infos","array","isRequired","idTable","mapStateToProps","state","client","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJ,aAAS;AACPC,MAAAA,MAAM,EAAE,MADD;AAEPC,MAAAA,KAAK,EAAE;AAFA;AADL,GADiC;AAOvCC,EAAAA,KAAK,EAAE;AACLF,IAAAA,MAAM,EAAE,QADH;AAELG,IAAAA,YAAY,EAAE,MAFT;AAGLC,IAAAA,SAAS,EAAE,MAHN;AAILH,IAAAA,KAAK,EAAE,GAJF;AAKLI,IAAAA,MAAM,EAAE;AALH,GAPgC;AAcvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE,QADL;AAENP,IAAAA,MAAM,EAAE,MAFF;AAGNG,IAAAA,YAAY,EAAE;AAHR,GAd+B;AAmBvCK,EAAAA,MAAM,EAAE;AACNL,IAAAA,YAAY,EAAE;AADR,GAnB+B;AAsBvCM,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL;AAtBiC,CAAZ,CAAD,CAA5B;;AA2BA,MAAMC,UAAU,GAAIC,KAAD,IAAU;AAC3B,QAAMC,OAAO,GAAGhB,SAAS,EAAzB;AACA,QAAM;AAAEiB,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA;AAArB,MAAkCJ,KAAxC;AAEA,QAAM,CAACK,SAAD,IAAcjC,QAAQ,CAACkC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,CAAD,CAA5B;AAEApC,EAAAA,SAAS,CAAC,MAAM;AACd2B,IAAAA,KAAK,CAACvB,OAAN,CAAc4B,SAAd;AACD,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,YAAY,MAAnB;AAAoB,kBAAW,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIF,WAAW,CAACO,GAAZ,CAAgBC,OAAO,IAAI;AAC3B,wBACE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,OAAO,CAACC,GAAvB;AAA4B,MAAA,IAAI,EAAC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BD,OAAO,CAACE,IAAnC,CADF,EAEGF,OAAO,CAACP,QAAR,CAAiBM,GAAjB,CAAqBI,IAAI,IAAI;AAC5B;AAAA,0BAAC,SAAD;AAAW,QAAA,GAAG,EAAEA,IAAI,CAACF,GAArB;AAA0B,QAAA,KAAK,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0CE,IAAI,CAACC,IAA/C;AACD,KAFA,CAFH,CADF;AAQD,GATC,CADJ,CADF,CADF,CADF,CADF,CADF;AAsBD,CAhCD;;AAkCAhB,UAAU,CAACiB,UAAX,GAAwB;AACtBC,EAAAA,KAAK,EAAE3C,SAAS,CAAC4C,KAAV,CAAgBC,UADD;AAEtBC,EAAAA,OAAO,EAAE9C,SAAS,CAAC4C,KAAV,CAAgBC;AAFH,CAAxB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCL,EAAAA,KAAK,EAAEK,KAAK,CAACC,MAAN,CAAaN,KADY;AAEhCG,EAAAA,OAAO,EAAEE,KAAK,CAACC,MAAN,CAAaH,OAFU;AAGhClB,EAAAA,IAAI,EAAEoB,KAAK,CAACC,MAAN,CAAarB,IAHa;AAIhCC,EAAAA,WAAW,EAAEmB,KAAK,CAACC,MAAN,CAAapB,WAJM;AAKhCC,EAAAA,QAAQ,EAAEkB,KAAK,CAACC,MAAN,CAAanB;AALS,CAAL,CAA7B;;AAQA,MAAMoB,kBAAkB,GAAGC,QAAQ,IACjClD,kBAAkB,CAAC;AAACE,EAAAA;AAAD,CAAD,EAAYgD,QAAZ,CADpB;;AAGA,eAAejD,OAAO,CAAC6C,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CzB,UAA7C,CAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { getMenu } from '../../../store/clientReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: 'auto',\r\n      width: '100%',\r\n    },\r\n  },\r\n  photo: {\r\n    margin: '0 auto',\r\n    marginBottom: '10px',\r\n    marginTop: '20px',\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    margin: 'auto',\r\n    marginBottom: '20px',\r\n  },\r\n  button: {\r\n    marginBottom: \"20px\"\r\n  },\r\n  hide: {\r\n    display: 'none'\r\n  }\r\n}));\r\n\r\nconst MenuClient = (props) =>{\r\n  const classes = useStyles();\r\n  const { menu, sectionMenu, itemMenu } = props;\r\n\r\n  const [companyId] = useState(window.location.href.split('?')[1]);\r\n\r\n  useEffect(() => {\r\n    props.getMenu(companyId);\r\n  },[])\r\n\r\n  return(\r\n    <div>\r\n      <Paper>\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableBody>\r\n              { sectionMenu.map(section => {\r\n                return (\r\n                  <TableRow key={section._id} role=\"checkbox\">\r\n                    <TableCell align='center'>{section.type}</TableCell>\r\n                    {section.itemMenu.map(item => {\r\n                      <TableCell key={item._id} align='center'>{item.name}</TableCell>\r\n                    })}\r\n                  </TableRow>\r\n                )\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nMenuClient.prototypes = {\r\n  infos: PropTypes.array.isRequired,\r\n  idTable: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos,\r\n  idTable: state.client.idTable,\r\n  menu: state.client.menu,\r\n  sectionMenu: state.client.sectionMenu,\r\n  itemMenu: state.client.itemMenu\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({getMenu}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuClient);"]},"metadata":{},"sourceType":"module"}