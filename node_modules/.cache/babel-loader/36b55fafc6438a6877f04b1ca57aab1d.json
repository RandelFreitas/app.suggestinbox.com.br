{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\Randel\\\\PROJETO 2020\\\\SuggestInBox\\\\app.suggestinbox.com.br\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\Randel\\\\PROJETO 2020\\\\SuggestInBox\\\\app.suggestinbox.com.br\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";import{getToken}from\"./auth\";var api=axios.create({baseURL:\"http://api.suggestinbox.com.br\"//baseURL: \"http://localhost:3001\"\n});api.interceptors.request.use(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(config){var token;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:token=getToken();if(token){config.headers.Authorization=\"Bearer \".concat(token);}return _context.abrupt(\"return\",config);case 3:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());export default api;","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/app.suggestinbox.com.br/src/services/api.js"],"names":["axios","getToken","api","create","baseURL","interceptors","request","use","config","token","headers","Authorization"],"mappings":"mXAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,QAAzB,CAEA,GAAMC,CAAAA,GAAG,CAAGF,KAAK,CAACG,MAAN,CAAa,CACvBC,OAAO,CAAE,gCACT;AAFuB,CAAb,CAAZ,CAKAF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,0FAA6B,iBAAMC,MAAN,4HACrBC,KADqB,CACbR,QAAQ,EADK,CAE3B,GAAIQ,KAAJ,CAAW,CACTD,MAAM,CAACE,OAAP,CAAeC,aAAf,kBAAyCF,KAAzC,EACD,CAJ0B,gCAKpBD,MALoB,wDAA7B,gEAQA,cAAeN,CAAAA,GAAf","sourcesContent":["import axios from \"axios\";\r\nimport { getToken } from \"./auth\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://api.suggestinbox.com.br\"\r\n  //baseURL: \"http://localhost:3001\"\r\n});\r\n\r\napi.interceptors.request.use(async config => {\r\n  const token = getToken();\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport default api;"]},"metadata":{},"sourceType":"module"}