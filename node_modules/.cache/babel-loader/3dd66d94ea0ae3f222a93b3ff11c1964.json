{"ast":null,"code":"import api from '../services/api';\nimport history from '../services/history';\nconst ACTIONS = {\n  LIST_USERS: 'LISTUSERS',\n  BY_ID_USER: 'BYIDUSER',\n  UPDATE_USER: 'UPDATEUSER'\n};\nconst INITIAL_STATE = {\n  users: [],\n  userById: [],\n  userUp: [],\n  infosUsers: []\n};\nexport const userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.BY_ID_USER:\n      return { ...state,\n        userById: action.userById\n      };\n\n    case ACTIONS.UPDATE_USER:\n      return { ...state,\n        user: action.user\n      };\n\n    default:\n      return state;\n  }\n}; //LISTAR TODOS USUÁRIOS\n\nexport const listUser = (page, nOfItems) => {\n  return dispatch => {\n    api.get(`/adm/user?page=${page}&limit=${nOfItems}`).then(Response => {\n      const {\n        docs,\n        infos\n      } = Response.data;\n      dispatch({\n        type: ACTIONS.LIST_USERS,\n        users: docs,\n        infosUsers: infos\n      });\n    }).catch(error => {\n      console.log(\"error\");\n    });\n  };\n}; //GET BY ID USER\n\nexport const getUserById = id => {\n  return dispatch => {\n    api.get(`/adm/user/${id}`).then(Response => {\n      dispatch({\n        type: ACTIONS.BY_ID_USER,\n        userById: Response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; //UPDATE USER\n\nexport const updateUser = (user, id) => {\n  return dispatch => {\n    api.put(`/adm/user/${id}`, user).then(Response => {\n      dispatch({\n        type: ACTIONS.UPDATE_USER,\n        userUp: Response.data\n      });\n    }, history.push(`/user/?${id}?page=1&limit=25`)).catch(error => {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/app.suggestinbox.com.br/src/store/userReducer.js"],"names":["api","history","ACTIONS","LIST_USERS","BY_ID_USER","UPDATE_USER","INITIAL_STATE","users","userById","userUp","infosUsers","userReducer","state","action","type","user","listUser","page","nOfItems","dispatch","get","then","Response","docs","infos","data","catch","error","console","log","getUserById","id","updateUser","put","push"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,iBAAhB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,UAAU,EAAE,WADE;AAEdC,EAAAA,UAAU,EAAE,UAFE;AAGdC,EAAAA,WAAW,EAAE;AAHC,CAAhB;AAKA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,MAAM,EAAE,EAHY;AAIpBC,EAAAA,UAAU,EAAE;AAJQ,CAAtB;AAMA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,aAAT,EAAwBO,MAAxB,KAAmC;AAC5D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKZ,OAAO,CAACE,UAAb;AACE,aAAO,EAAC,GAAGQ,KAAJ;AAAWJ,QAAAA,QAAQ,EAAEK,MAAM,CAACL;AAA5B,OAAP;;AACF,SAAKN,OAAO,CAACG,WAAb;AACE,aAAO,EAAC,GAAGO,KAAJ;AAAWG,QAAAA,IAAI,EAAEF,MAAM,CAACE;AAAxB,OAAP;;AACF;AACE,aAAOH,KAAP;AANJ;AAQD,CATM,C,CAUP;;AACA,OAAO,MAAMI,QAAQ,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AAC1C,SAAOC,QAAQ,IAAI;AACjBnB,IAAAA,GAAG,CAACoB,GAAJ,CAAS,kBAAiBH,IAAK,UAASC,QAAS,EAAjD,EACCG,IADD,CACMC,QAAQ,IAAI;AAChB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,QAAQ,CAACG,IAAjC;AACAN,MAAAA,QAAQ,CAAC;AACPL,QAAAA,IAAI,EAAEZ,OAAO,CAACC,UADP;AAEPI,QAAAA,KAAK,EAAEgB,IAFA;AAGPb,QAAAA,UAAU,EAAEc;AAHL,OAAD,CAAR;AAKD,KARD,EASCE,KATD,CASOC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAXD;AAYD,GAbD;AAcD,CAfM,C,CAgBP;;AACA,OAAO,MAAMC,WAAW,GAAIC,EAAD,IAAQ;AACjC,SAAOZ,QAAQ,IAAI;AACjBnB,IAAAA,GAAG,CAACoB,GAAJ,CAAS,aAAYW,EAAG,EAAxB,EACCV,IADD,CACMC,QAAQ,IAAI;AAChBH,MAAAA,QAAQ,CAAC;AACPL,QAAAA,IAAI,EAAEZ,OAAO,CAACE,UADP;AAEPI,QAAAA,QAAQ,EAAEc,QAAQ,CAACG;AAFZ,OAAD,CAAR;AAID,KAND,EAOCC,KAPD,CAOOC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KATD;AAUD,GAXD;AAYD,CAbM,C,CAcP;;AACA,OAAO,MAAMK,UAAU,GAAG,CAACjB,IAAD,EAAOgB,EAAP,KAAc;AACtC,SAAOZ,QAAQ,IAAI;AACjBnB,IAAAA,GAAG,CAACiC,GAAJ,CAAS,aAAYF,EAAG,EAAxB,EAA2BhB,IAA3B,EACCM,IADD,CACMC,QAAQ,IAAI;AAChBH,MAAAA,QAAQ,CAAC;AACPL,QAAAA,IAAI,EAAEZ,OAAO,CAACG,WADP;AAEPI,QAAAA,MAAM,EAAEa,QAAQ,CAACG;AAFV,OAAD,CAAR;AAID,KAND,EAMGxB,OAAO,CAACiC,IAAR,CAAc,UAASH,EAAG,kBAA1B,CANH,EAOCL,KAPD,CAOOC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KATD;AAUD,GAXD;AAYD,CAbM","sourcesContent":["import api from '../services/api';\r\nimport history from '../services/history';\r\n\r\nconst ACTIONS = {\r\n  LIST_USERS: 'LISTUSERS',\r\n  BY_ID_USER: 'BYIDUSER',\r\n  UPDATE_USER: 'UPDATEUSER',\r\n}\r\nconst INITIAL_STATE = {\r\n  users: [],\r\n  userById: [],\r\n  userUp: [],\r\n  infosUsers: [],\r\n}\r\nexport const userReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.BY_ID_USER:\r\n      return {...state, userById: action.userById}\r\n    case ACTIONS.UPDATE_USER:\r\n      return {...state, user: action.user}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//LISTAR TODOS USUÁRIOS\r\nexport const listUser = (page, nOfItems) => {\r\n  return dispatch => {\r\n    api.get(`/adm/user?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_USERS,\r\n        users: docs,\r\n        infosUsers: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(\"error\");\r\n    });\r\n  }\r\n}\r\n//GET BY ID USER\r\nexport const getUserById = (id) => {\r\n  return dispatch => {\r\n    api.get(`/adm/user/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_USER,\r\n        userById: Response.data,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n//UPDATE USER\r\nexport const updateUser = (user, id) => {\r\n  return dispatch => {\r\n    api.put(`/adm/user/${id}`, user)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_USER,\r\n        userUp: Response.data\r\n      })\r\n    }, history.push(`/user/?${id}?page=1&limit=25`))\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}