{"ast":null,"code":"import api from '../services/api';\nimport history from '../services/history';\nconst ACTIONS = {\n  //SUGGEST\n  LIST_SUGGESTS: 'LISTSUGGESTS',\n  FAVORITE: 'FAVORITE',\n  TOFILE: 'TOFILE',\n  //COMPANY\n  LIST_COMPANIES: 'LISTCOMPANIES',\n  BY_ID_COMPANY: 'BYIDCOMPANY',\n  UPDATE_COMPANY: 'UPDATECOMPANY',\n  ATV_MENU: 'ATVMENU',\n  ATV_PROMO: 'ATVPROMO',\n  CLEAN_COMPANY: 'CLEANCOMPANY',\n  ADD_COMPANY: 'ADDCOMPANY'\n};\nconst INITIAL_STATE = {\n  //SUGGEST\n  suggests: [],\n  suggest: [],\n  suggestById: [],\n  infosSuggests: [],\n  //COMPANY\n  companies: [],\n  company: [],\n  infosCompanies: [],\n  companyById: [],\n  companyAtv: []\n};\nexport const companyReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    //*********************SUGGESTS*********************\n    case ACTIONS.LIST_SUGGESTS:\n      return { ...state,\n        suggests: action.suggests,\n        infosSuggests: action.infosSuggests\n      };\n\n    case ACTIONS.FAVORITE:\n      const listUp = [...state.suggests];\n      listUp.forEach(suggest => {\n        if (suggest._id === action._id) {\n          suggest.favorite = true;\n        }\n      });\n      return { ...state,\n        suggests: listUp\n      };\n\n    case ACTIONS.TOFILE:\n      const listUpOut = [...state.suggests];\n      listUpOut.forEach(suggest => {\n        if (suggest._id === action._id) {\n          suggest.outlier = true;\n        }\n      });\n      return { ...state,\n        suggests: listUpOut\n      };\n    //*********************COMPANIES*********************\n\n    case ACTIONS.LIST_COMPANIES:\n      return { ...state,\n        companies: action.companies,\n        infosCompanies: action.infosCompanies\n      };\n\n    case ACTIONS.ADD_COMPANY:\n      return { ...state,\n        company: action.company\n      };\n\n    case ACTIONS.BY_ID_COMPANY:\n      return { ...state,\n        companyById: action.companyById\n      };\n\n    case ACTIONS.UPDATE_COMPANY:\n      return state;\n\n    case ACTIONS.ATV_MENU:\n      return { ...state,\n        companyById: action.companyById\n      };\n\n    case ACTIONS.ATV_PROMO:\n      return { ...state,\n        companyById: action.companyById\n      };\n    //DEFAULT\n\n    default:\n      return state;\n  }\n}; //*******************************************SUGGESTS*********************************************\n//LISTAR SUGGESTS\n\nexport const listSuggest = (page, nOfItems, idUrl) => {\n  return dispatch => {\n    api.get(`/adm/all-suggest/${idUrl}?page=${page}&limit=${nOfItems}`).then(Response => {\n      const {\n        docs,\n        infos\n      } = Response.data;\n      dispatch({\n        type: ACTIONS.LIST_SUGGESTS,\n        suggests: docs,\n        infosSuggests: infos\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; //FAVORITAR SUGGEST\n\nexport const favorite = suggest => {\n  return dispatch => {\n    api.put(`/adm/suggest/${suggest._id}`, suggest).then(Response => {\n      dispatch({\n        type: ACTIONS.FAVORITE,\n        id: suggest._id\n      });\n    });\n  };\n}; //ARQUIVAR SUGGEST\n\nexport const outlier = suggest => {\n  return dispatch => {\n    api.put(`/adm/suggest/${suggest._id}`, suggest).then(Response => {\n      dispatch({\n        type: ACTIONS.TOFILE,\n        id: suggest._id\n      });\n    });\n  };\n}; //*******************************************COMPANIES*********************************************\n//LISTAR COMPANIAS\n\nexport const listCompanies = (page, nOfItems) => {\n  return dispatch => {\n    api.get(`/adm/company?page=${page}&limit=${nOfItems}`).then(Response => {\n      const {\n        docs,\n        infos\n      } = Response.data;\n      dispatch({\n        type: ACTIONS.LIST_COMPANIES,\n        companies: docs,\n        infosCompanies: infos\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; //ADICIONAR COMPANY\n\nexport const addCompany = (company, id) => {\n  return dispatch => {\n    api.post('/adm/company', company).then(Response => {\n      dispatch({\n        type: ACTIONS.ADD_COMPANY,\n        company: Response.data\n      });\n    }, history.push(`/user`)).catch(error => {\n      console.log(error);\n    });\n  };\n}; //GET BY ID COMPANY\n\nexport const getCompanyById = id => {\n  return dispatch => {\n    api.get(`/adm/company/${id}`).then(Response => {\n      dispatch({\n        type: ACTIONS.BY_ID_COMPANY,\n        companyById: Response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; //UPDATE COMPANY\n\nexport const updateCompany = (company, id, idUser) => {\n  return dispatch => {\n    api.put(`/adm/company/${id}`, company).then(Response => {\n      dispatch({\n        type: ACTIONS.UPDATE_COMPANY //company: Response.data\n\n      });\n    }, history.push(`/suggest/?${idUser}/?${id}?page=1&limit=25`)).catch(error => {\n      console.log(error);\n    });\n  };\n}; //LIMPAR CAMPOS COMPANY\n\nexport const cleanCompany = () => {\n  return {\n    type: ACTIONS.CLEAN_COMPANY\n  };\n}; //*******************************************PROMO*********************************************\n//ATIVAR PROMO\n\nexport const atvPromo = company => {\n  return dispatch => {\n    api.put(`/adm/company/${company._id}`, company).then(Response => {\n      dispatch({\n        type: ACTIONS.ATV_PROMO,\n        companyById: company\n      });\n    });\n  };\n}; //*******************************************MENU*********************************************\n//ATIVAR MENU\n\nexport const atvMenu = company => {\n  return dispatch => {\n    api.put(`/adm/company/${company._id}`, company).then(Response => {\n      dispatch({\n        type: ACTIONS.ATV_MENU,\n        companyById: company\n      });\n    });\n  };\n};","map":{"version":3,"sources":["D:/Randel/PROJETO 2020/SuggestInBox/app.suggestinbox.com.br/src/store/companyReducer.js"],"names":["api","history","ACTIONS","LIST_SUGGESTS","FAVORITE","TOFILE","LIST_COMPANIES","BY_ID_COMPANY","UPDATE_COMPANY","ATV_MENU","ATV_PROMO","CLEAN_COMPANY","ADD_COMPANY","INITIAL_STATE","suggests","suggest","suggestById","infosSuggests","companies","company","infosCompanies","companyById","companyAtv","companyReducer","state","action","type","listUp","forEach","_id","favorite","listUpOut","outlier","listSuggest","page","nOfItems","idUrl","dispatch","get","then","Response","docs","infos","data","catch","error","console","log","put","id","listCompanies","addCompany","post","push","getCompanyById","updateCompany","idUser","cleanCompany","atvPromo","atvMenu"],"mappings":"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","sourcesContent":["import api from '../services/api';\r\nimport history from '../services/history';\r\n\r\nconst ACTIONS = {\r\n  //SUGGEST\r\n  LIST_SUGGESTS: 'LISTSUGGESTS',\r\n  FAVORITE: 'FAVORITE',\r\n  TOFILE: 'TOFILE',\r\n  //COMPANY\r\n  LIST_COMPANIES: 'LISTCOMPANIES',\r\n  BY_ID_COMPANY: 'BYIDCOMPANY',\r\n  UPDATE_COMPANY: 'UPDATECOMPANY',\r\n  ATV_MENU: 'ATVMENU',\r\n  ATV_PROMO: 'ATVPROMO',\r\n  CLEAN_COMPANY: 'CLEANCOMPANY',\r\n  ADD_COMPANY: 'ADDCOMPANY',\r\n}\r\nconst INITIAL_STATE = {\r\n  //SUGGEST\r\n  suggests: [],\r\n  suggest: [],\r\n  suggestById: [],\r\n  infosSuggests: [],\r\n  //COMPANY\r\n  companies: [],\r\n  company: [],\r\n  infosCompanies: [],\r\n  companyById: [],\r\n  companyAtv: [],\r\n}\r\nexport const companyReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    //*********************SUGGESTS*********************\r\n    case ACTIONS.LIST_SUGGESTS:\r\n      return {...state, suggests: action.suggests, infosSuggests: action.infosSuggests}\r\n    case ACTIONS.FAVORITE:\r\n      const listUp = [...state.suggests]\r\n      listUp.forEach(suggest => {\r\n        if(suggest._id === action._id){\r\n          suggest.favorite = true;\r\n        }\r\n      })\r\n      return {...state, suggests: listUp}\r\n    case ACTIONS.TOFILE:\r\n      const listUpOut = [...state.suggests]\r\n      listUpOut.forEach(suggest => {\r\n        if(suggest._id === action._id){\r\n          suggest.outlier = true;\r\n        }\r\n      })\r\n      return {...state, suggests: listUpOut}\r\n    //*********************COMPANIES*********************\r\n    case ACTIONS.LIST_COMPANIES:\r\n      return {...state, companies: action.companies, infosCompanies: action.infosCompanies}\r\n    case ACTIONS.ADD_COMPANY:\r\n      return {...state, company: action.company}\r\n    case ACTIONS.BY_ID_COMPANY:\r\n      return {...state, companyById: action.companyById}\r\n    case ACTIONS.UPDATE_COMPANY:\r\n      return state;\r\n    case ACTIONS.ATV_MENU:\r\n      return {...state, companyById: action.companyById}\r\n    case ACTIONS.ATV_PROMO:\r\n      return {...state, companyById: action.companyById}\r\n    //DEFAULT\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//*******************************************SUGGESTS*********************************************\r\n//LISTAR SUGGESTS\r\nexport const listSuggest = (page, nOfItems, idUrl) => {\r\n  return dispatch => {\r\n    api.get(`/adm/all-suggest/${idUrl}?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_SUGGESTS,\r\n        suggests: docs,\r\n        infosSuggests: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//FAVORITAR SUGGEST\r\nexport const favorite = (suggest) => {\r\n  return dispatch => {\r\n    api.put(`/adm/suggest/${suggest._id}`, suggest )\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.FAVORITE,\r\n        id: suggest._id\r\n      })\r\n    })\r\n  }\r\n}\r\n//ARQUIVAR SUGGEST\r\nexport const outlier = (suggest) => {\r\n  return dispatch => {\r\n    api.put(`/adm/suggest/${suggest._id}`, suggest )\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.TOFILE,\r\n        id: suggest._id\r\n      })\r\n    })\r\n  }\r\n}\r\n//*******************************************COMPANIES*********************************************\r\n//LISTAR COMPANIAS\r\nexport const listCompanies = (page, nOfItems) => {\r\n  return dispatch => {\r\n    api.get(`/adm/company?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_COMPANIES,\r\n        companies: docs,\r\n        infosCompanies: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//ADICIONAR COMPANY\r\nexport const addCompany = (company, id) => {\r\n  return dispatch => {\r\n    api.post('/adm/company', company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ADD_COMPANY,\r\n        company: Response.data,\r\n      });\r\n    }, history.push(`/user`))\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//GET BY ID COMPANY\r\nexport const getCompanyById = (id) => {\r\n  return dispatch => {\r\n    api.get(`/adm/company/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_COMPANY,\r\n        companyById: Response.data,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n//UPDATE COMPANY\r\nexport const updateCompany = (company, id, idUser) => {\r\n  return dispatch => {\r\n    api.put(`/adm/company/${id}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_COMPANY,\r\n        //company: Response.data\r\n      })\r\n    }, history.push(`/suggest/?${idUser}/?${id}?page=1&limit=25`))\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n//LIMPAR CAMPOS COMPANY\r\nexport const cleanCompany = () => {\r\n  return {\r\n    type: ACTIONS.CLEAN_COMPANY,\r\n  }\r\n}\r\n//*******************************************PROMO*********************************************\r\n//ATIVAR PROMO\r\nexport const atvPromo = (company) => {\r\n  return dispatch => {\r\n    api.put(`/adm/company/${company._id}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ATV_PROMO,\r\n        companyById: company\r\n      })\r\n    })\r\n  }\r\n}\r\n//*******************************************MENU*********************************************\r\n//ATIVAR MENU\r\nexport const atvMenu = (company) => {\r\n  return dispatch => {\r\n    api.put(`/adm/company/${company._id}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ATV_MENU,\r\n        companyById: company\r\n      })\r\n    })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}