{"version":3,"sources":["pages/Client/AtentionClient/index.module.css","pages/Client/ConfirmClient/index.module.css","pages/Client/AboutClient/index.module.css","Site/index.js","pages/Client/MainClient/index.js","services/api.js","services/auth.js","services/history.js","store/clientReducer.js","pages/Client/FormClient/index.js","pages/Client/MenuClient/index.js","pages/Client/AtentionClient/index.js","pages/Client/AboutClient/index.js","pages/Client/ConfirmClient/index.js","pages/Client/routesClient.js","pages/Client/index.js","store/messageReducer.js","store/authReducer.js","store/admReducer.js","pages/User/Companies/index.js","pages/User/SetupUser/index.js","pages/User/SetupCompany/index.js","pages/User/routesUser.js","pages/User/index.js","pages/User/Suggest/Suggests/index.js","pages/User/Suggest/Promo/index.js","pages/User/Suggest/Menu/index.js","pages/User/Suggest/Finances/index.js","pages/User/Suggest/routesUser.js","pages/User/Suggest/index.js","pages/Adm/routesAdm.js","pages/Adm/index.js","components/Dialog/index.js","components/Login/index.js","components/Fogot/index.js","components/ResetPassword/index.js","routes.js","App.js","store/index.js","index.js","pages/Client/MenuClient/index.module.css"],"names":["module","exports","Site","href","alt","src","width","height","useStyles","makeStyles","theme","root","margin","center","textAlign","marginBottom","button","hidden","display","MainClient","props","infos","classes","className","name","slogan","Button","component","Link","to","_id","variant","color","menu","tables","prototypes","PropTypes","array","isRequired","connect","state","client","api","axios","create","baseURL","interceptors","request","use","a","config","token","localStorage","getItem","headers","Authorization","history","createBrowserHistory","ACTIONS","INITIAL_STATE","suggest","getInfo","id","dispatch","get","then","Response","type","data","catch","error","console","log","submitSuggest","recommends","post","companyId","push","background","span","unknown","fontSize","alignItems","minHeight","stars","padding","NumberFormatCustom","inputRef","onChange","other","getInputRef","onValueChange","values","target","value","isNumericString","format","FormClient","useState","window","location","split","checked","setChecked","activeStep","setActiveStep","Set","skipped","setSkipped","steps","phone","opinion","setValues","handleChange","event","checkChange","onSubmit","preventDefault","Stepper","Step","StepLabel","step","TextField","label","disabled","inputProps","maxLength","InputProps","inputComponent","FormControlLabel","Typography","size","control","Checkbox","Box","mb","borderColor","FormLabel","Rating","defaultValue","icon","emptyIcon","FormControl","RadioGroup","row","aria-label","Radio","labelPlacement","multiline","rows","rowsMax","getStepContent","buttons","onClick","prevActiveStep","length","newSkipped","has","delete","bindActionCreators","MenuClient","styles","wrap","section","htmlFor","grid","content","description","ten","AtentionClient","link","idUrl","useEffect","localization","map","title","frameBorder","aria-hidden","tabIndex","ConfirmClient","cupom","RoutesApp","exact","path","AboutClient","poth","img","links","labelLink","appBar","top","bottom","grow","flexGrow","list","justifyContent","paddingTop","Client","React","setState","toggleDrawer","open","role","onKeyDown","List","ListItem","ListItemIcon","ListItemText","primary","Divider","CssBaseline","AppBar","position","Toolbar","IconButton","edge","menuButton","Drawer","onClose","message","showMessage","progress","hideMessage","showProgress","AUTH","FOGOT","email","user","auth","login","setItem","JSON","stringify","fogot","reset","logout","removeItem","suggests","suggestById","infosSuggests","companies","company","infosCompanies","companyById","loadingCompany","userById","loadingUser","listSuggest","page","nOfItems","docs","favorite","put","outlier","listCompanies","addCompany","getCompanyById","updateCompany","idUser","cleanCompany","getUserById","updateUser","item","spacing","palette","text","secondary","Companies","nOfPages","pages","setPage","mapCompanies","Fragment","Grid","key","md","sm","xs","Card","CardActionArea","CardContent","noWrap","address","city","CardActions","container","Pagination","count","adm","float","media","card","ZipFormatCustom","CpfFormatCustom","PhoneFormatCustom","SetupUser","initialValues","cpf","street","number","district","zip","obs","enableReinitialize","validationSchema","Yup","required","userUpdate","formik","handleSubmit","style","fullWidth","InputLabelProps","shrink","getFieldProps","touched","errors","SetupCompany","idCompany","cnpj","companyUpdate","RoutesUser","toolbar","paddingRight","textDecoration","paddingBottom","profile","appBarSpacer","mixins","overflow","User","Container","maxWidth","createMuiTheme","main","Suggest","setNoOfItems","Date","selectedDate","setSelectedDate","FormHelperText","Select","MenuItem","utils","DateFnsUtils","disableToolbar","date","KeyboardButtonProps","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","hover","parseISO","createdAt","timeZone","precision","readOnly","favoriteUpdate","outlierUpdate","Promo","checkedA","Switch","Menu","Finances","toolbarIcon","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","marginRight","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","paper","flexDirection","fixedHeight","avatar","backgroundColor","MainSuggest","setOpen","clsx","Avatar","parseFloat","toFixed","nStars","RoutesAppSuggest","match","useRouteMatch","url","Adm","openDialog","Dialog","DialogTitle","DialogContent","DialogActions","marginTop","submit","disableSubmit","setDisableSubmit","useFormik","password","max","onBlur","handleBlur","sitekey","CircularProgress","setProgress","passwordConfirmation","matches","oneOf","PrivateRoute","Component","rest","render","pathname","from","Routes","Login","Fogot","Reset","App","mainReducer","combineReducers","action","listUp","forEach","listUpOut","RESET","store","applyMiddleware","thunk","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0f66ed72.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"AtentionClient_center__1d0UE\",\"suggest\":\"AtentionClient_suggest__3xmOK\",\"link\":\"AtentionClient_link__2Qdae\",\"buttons\":\"AtentionClient_buttons__APISf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"ConfirmClient_center__DxxVk\",\"link\":\"ConfirmClient_link__1PO4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"AboutClient_center__11y1g\",\"map\":\"AboutClient_map___W6Q6\"};","import React from 'react';\r\n\r\nconst Site = () => {\r\n  return(\r\n    <div>\r\n      <header>\r\n        <div>\r\n          <nav>\r\n            <a href='/'>LOGO  |</a>\r\n            <ul>\r\n              <li><a href='/'>SOBRE</a></li>\r\n              <li><a href='/'>SOLUÇÕES</a></li>\r\n              <li><a href='/'>CONTATO</a></li>\r\n              <li><a href='/'>ARTIGOS</a></li>\r\n            </ul>\r\n          </nav>\r\n          <div>\r\n            <img alt='face' src='./assets/facebook.svg'/>\r\n            <img alt='insta' src='./assets/instagram.svg'/>\r\n            <img alt='youtube' src='./assets/youtube.svg'/>\r\n            <button>Login</button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <section>\r\n        <div>\r\n          <div>\r\n            <h2>Qual a pessoa mais importante para seu negócio?</h2>\r\n            <span>Se a sua resposta foi cliente, temos uma ótima notícia para você...</span>\r\n          </div>\r\n          <img width='304' height='294' alt='logo' src='./assets/cliente-2.png'></img>\r\n        </div>\r\n      </section>\r\n      \r\n      <section>\r\n        <div>\r\n          <img width='300' height='160' alt='satisfaction' src='./assets/satisfaction.png'></img>\r\n          <div>\r\n            <h2>Qual a pessoa mais importante para seu negócio?</h2>\r\n            <span>Se a sua resposta foi cliente, temos uma ótima notícia para você...</span>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <div>\r\n          \r\n        </div>\r\n      </section>\r\n      <section>\r\n        <div>\r\n          \r\n        </div>\r\n      </section>\r\n      <footer>\r\n        <div>\r\n          Rodape\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Site;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: 'auto',\r\n      width: '100%',\r\n    },\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    margin: 'auto',\r\n    marginBottom: '20px',\r\n  },\r\n  button: {\r\n    marginBottom: \"20px\"\r\n  },\r\n  hidden: {\r\n    display: 'none'\r\n  }\r\n}));\r\n\r\nconst MainClient = (props) => {\r\n  const { infos } = props;\r\n  const classes = useStyles();\r\n\r\n  return(\r\n    <div className={classes.root}>\r\n      <div className={classes.center}>\r\n        <h3>{infos.name}</h3>\r\n        <p>{infos.slogan}</p>\r\n      </div>\r\n      <Button className={classes.button} component={Link} to={`/client/opiniao/?${infos._id}`} variant=\"contained\" color=\"primary\">\r\n        Dar opinião\r\n      </Button>\r\n      <Button className={props.infos.menu? classes.button : classes.hidden} \r\n              component={Link} to={`/client/opiniao/?${infos._id}`} \r\n              variant=\"contained\" color=\"primary\">\r\n        Cardápio online\r\n      </Button>\r\n      <Button className={props.infos.tables? classes.button : classes.hidden} \r\n              component={Link} to={`/client/opiniao/?${infos._id}`} \r\n              variant=\"contained\" color=\"primary\">\r\n        Chamar garçom\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nMainClient.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nexport default connect(mapStateToProps)(MainClient);","import axios from \"axios\";\r\nimport { getToken } from \"./auth\";\r\n\r\nconst api = axios.create({\r\n  //baseURL: \"https://api.suggestinbox.com.br\"\r\n  baseURL: \"http://localhost:3001\"\r\n});\r\n\r\napi.interceptors.request.use(async config => {\r\n  const token = getToken();\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport default api;","export const TOKEN_KEY = \"@token\";\r\nexport const INFOS = \"@infos\";\r\n\r\nexport const isAuthenticated = () => localStorage.getItem(TOKEN_KEY) !== null;\r\n\r\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\r\nexport const getInfos = () => localStorage.getItem(INFOS);\r\n\r\nexport const setInfosLocalStorage = (token, infos) => {\r\n  localStorage.setItem(TOKEN_KEY, token);\r\n  localStorage.setItem(INFOS, JSON.stringify(infos));\r\n};\r\nexport const setTokenLocalStorage = (token) => {\r\n  localStorage.setItem(TOKEN_KEY, token);\r\n};\r\nexport const logoutUser = () => {\r\n  localStorage.removeItem(TOKEN_KEY);\r\n  localStorage.removeItem(INFOS);  \r\n};","import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","import api from '../services/api';\r\nimport history from \"../services/history\";\r\n\r\nconst ACTIONS = {\r\n  INFOS: 'INFOS',\r\n  ADD: 'ADD_SUGGEST'\r\n}\r\nconst INITIAL_STATE = {\r\n  infos:[],\r\n  suggest:[]\r\n}\r\nexport const clientReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.INFOS:\r\n      return {...state, infos: action.infos}\r\n    case ACTIONS.ADD:\r\n      return {...state, suggest: action.suggest}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//OBTER INFOS DA COMPANIA\r\nexport const getInfo = (id) => {\r\n  return dispatch => {\r\n    api.get(`/client/company/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.INFOS,\r\n        infos: Response.data,\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//ENVIAR SUGGEST\r\nexport const submitSuggest = (suggest) => {\r\n  if(suggest.recommends === 'y'){\r\n    suggest.recommends = true;\r\n  }else{\r\n    suggest.recommends = false;\r\n  }\r\n  return dispatch => {\r\n    api.post(`/client/company/${suggest.companyId}`, suggest)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ADD,\r\n        suggest: Response.data,\r\n      });\r\n    }, history.push(`/client/opiniao/sucesso/?${suggest.companyId}`))\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { submitSuggest } from '../../../store/clientReducer'\r\nimport { connect } from 'react-redux';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport Star from '@material-ui/icons/Star';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: 'auto',\r\n      width: '100%',\r\n      background: '#fafafa',\r\n    },\r\n  },\r\n  name: {\r\n    textAlign: 'center',\r\n  },\r\n  span: {  \r\n    textAlign: 'center'\r\n  },\r\n  unknown: {\r\n    fontSize: \"12px\",\r\n  },\r\n  center: {\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    minHeight: '150px'\r\n  },\r\n  stars: {\r\n    padding: '28px',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    minHeight: '150px'\r\n  },\r\n  recommends: {\r\n    padding: '28px',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    minHeight: '150px'\r\n  },\r\n  button: {\r\n    margin: '8px',\r\n    marginBottom: '20px'\r\n  }\r\n}));\r\n\r\nconst NumberFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='(##) #########'\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst FormClient = (props) => {\r\n  const classes = useStyles();\r\n  const { infos } = props;\r\n  const [companyId] = useState(window.location.href.split('/?')[1]);\r\n  const [checked, setChecked] = useState(false);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [skipped, setSkipped] = useState(new Set());\r\n  const steps = [\"\", \"\", \"\", \"\"];\r\n\r\n  const isStepSkipped = (step) => {\r\n    return skipped.has(step);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const [values, setValues] = useState({\r\n    name: '',\r\n    phone: '',\r\n    stars: 0,\r\n    opinion: '',\r\n    recommends: '',\r\n    companyId\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    switch(event.target.value){\r\n      case '1':\r\n        setValues({...values, [event.target.name]: 1 });\r\n        break;\r\n      case '2':\r\n        setValues({...values, [event.target.name]: 2 });\r\n        break;\r\n      case '3':\r\n        setValues({...values, [event.target.name]: 3 });\r\n        break;\r\n      case '4':\r\n        setValues({...values, [event.target.name]: 4 });\r\n        break;\r\n      case '5':\r\n        setValues({...values, [event.target.name]: 5 });\r\n        break;\r\n      default:\r\n        setValues({...values, [event.target.name]: event.target.value });\r\n        break;\r\n    }\r\n  };\r\n  const checkChange = (event) => {\r\n    setValues({name: '', phone: ''});\r\n    setChecked(event.target.checked);\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    props.submitSuggest(values);\r\n  }\r\n\r\n  function getStepContent(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <div className={classes.center}>\r\n            <TextField\r\n              label=\"Nome\"\r\n              disabled={checked}\r\n              value={values.name} \r\n              onChange={handleChange}\r\n              name=\"name\"\r\n              id=\"standard-basic\"\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <TextField\r\n              label=\"Telefone\"\r\n              disabled={checked}\r\n              value={values.phone}\r\n              onChange={handleChange}\r\n              name=\"phone\"\r\n              id=\"formatted-numberformat-input\"\r\n              InputProps={{inputComponent: NumberFormatCustom}}\r\n            />\r\n            <FormControlLabel\r\n            label={<Typography className={classes.unknown}>Desejo não me identificar</Typography>}\r\n            size=\"small\"\r\n            control={<Checkbox color=\"primary\" onChange={checkChange} name=\"checked\" />}\r\n          />\r\n          </div>\r\n        );\r\n      case 1:\r\n        return (\r\n          <div className={classes.stars}>\r\n            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n              <FormLabel component=\"legend\">Toque para classificar</FormLabel>\r\n              <Rating\r\n                name=\"stars\"\r\n                onChange={handleChange}\r\n                defaultValue={0}\r\n                value={values.stars}\r\n                icon={<Star fontSize=\"large\" />}\r\n                emptyIcon={<StarBorderIcon fontSize=\"large\" />}\r\n              />\r\n            </Box>\r\n          </div>\r\n        );\r\n      case 2:\r\n        return (\r\n          <div className={classes.recommends}>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\">Nos recomendaria?</FormLabel>\r\n              <RadioGroup onChange={handleChange} value={values.recommends} row aria-label=\"position\" name=\"recommends\">\r\n                <FormControlLabel\r\n                  value=\"y\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Sim\"\r\n                  name=\"recommends\"\r\n                  labelPlacement=\"bottom\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"n\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Não\"\r\n                  name=\"recommends\"\r\n                  labelPlacement=\"bottom\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </div>\r\n        );\r\n      case 3:\r\n        return (\r\n          <div className={classes.center}>\r\n            <TextField\r\n            label=\"Deixe sua opinião\"\r\n            multiline\r\n            rows={4}\r\n            rowsMax={7}\r\n            variant=\"outlined\"\r\n            value={values.opinion} \r\n            onChange={handleChange}\r\n            name=\"opinion\"\r\n            id=\"text-basic\" \r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return (\r\n          <div>\r\n            ok\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <h3 className={classes.name}>{props.infos.name}</h3>\r\n      <p className={classes.name}>{props.infos.slogan}</p>\r\n      <form className={classes.root} onSubmit={handleSubmit}>\r\n        <Stepper activeStep={activeStep}>\r\n          <Step>\r\n            <StepLabel/>\r\n          </Step>\r\n          <Step>\r\n            <StepLabel/>\r\n          </Step>\r\n          <Step>\r\n            <StepLabel/>\r\n          </Step>\r\n          <Step>\r\n            <StepLabel/>\r\n          </Step>\r\n        </Stepper>\r\n        <div className={classes.center}>\r\n          {getStepContent(activeStep)}\r\n          <div className={classes.buttons}>\r\n            <Button variant=\"contained\" disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n              Voltar\r\n            </Button>\r\n            {activeStep === steps.length? (\r\n              <Button className={classes.button} variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                Enviar\r\n              </Button>\r\n            ) : (\r\n              <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length -1 ? \"Enviar\" : \"Próximo\"}\r\n              </Button>)\r\n            }\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nFormClient.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({submitSuggest}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormClient);","import React from 'react';\r\nimport styles from './index.module.css';\r\n\r\nconst MenuClient = () =>{\r\n  return(\r\n    <div className={styles.wrap}>\r\n      <div className={styles.section}>\r\n        <h3>Cardápio</h3>\r\n        <div className={styles.wrap}>\r\n          <label className={styles.name}>Seção: </label>\r\n          <select htmlFor='section'>\r\n            <option value='comida'>Comida</option>\r\n            <option value='bebida'>Bebida</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className={styles.grid}>\r\n          <div className={styles.content}>\r\n            <p className={styles.name}>Baião de dois</p>\r\n            <p className={styles.description}>(Arroz e feijao)</p>\r\n          </div>\r\n          <div className={styles.value}>\r\n            <p className={styles.name}>R$ 15,00</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.ten}>\r\n        <span>Cobramos 10% de taxa de serviço</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenuClient;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst AtentionClient = (props) => {\r\n  const { infos } = props;\r\n\r\n  return(\r\n    <div className={styles.center}>\r\n      <h2>Chamado enviado!</h2>\r\n      <p>Chegaremos assim que possível.</p>\r\n      <p className={styles.suggest}>Enquanto isso você pode ver nosso cardápio online no botão abaixo:</p>\r\n      <div className={styles.buttons}>\r\n          <Link className={styles.link} to={`/client/cardapio/?${infos._id}`}>Ver cadápio online</Link>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAtentionClient.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nexport default connect(mapStateToProps)(AtentionClient);","import React, { useState, useEffect} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport styles from './index.module.css';\r\nimport { getInfo } from '../../../store/clientReducer';\r\n\r\nconst AboutClient = (props) => {\r\n  const { infos } = props;\r\n  const [ idUrl ] = useState(window.location.href.split('/?')[1]);\r\n\r\n  useEffect(()=> {\r\n    console.log(idUrl);\r\n  },[idUrl]);\r\n\r\n  return (\r\n    <div className={styles.center}>\r\n      <h3>{infos.name}</h3>\r\n      <p>{infos.history}</p>\r\n      <h4>Localização</h4>\r\n      <p>{infos.localization}</p>\r\n      <iframe className={styles.map} title='mapa' src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d63695.95624351804!2d-38.560086091509596!3d-3.810670390317004!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x7c74e4a78a20565%3A0xce1304c86cef7da7!2sR.%20A%20-%20Passar%C3%A9%2C%20Fortaleza%20-%20CE%2C%2060810-670!5e0!3m2!1spt-BR!2sbr!4v1595268668224!5m2!1spt-BR!2sbr\" width=\"250\" height=\"200\" frameBorder=\"0\" aria-hidden=\"false\" tabIndex=\"0\"/>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({getInfo}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AboutClient);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.css';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ConfirmClient = (props) => {\r\n  const { infos } = props;\r\n\r\n  return (\r\n    <div className={styles.center}>\r\n      <h3>Obrigado pela sua opinião!</h3>\r\n      <p>Parabéns vocês ganhou uma caipirinha na sua proxima visita!</p>\r\n      <div className={styles.cupom}>\r\n        <h4>Cupom: 49FBA</h4>\r\n        <p>Cupom disponível em 24h.</p>\r\n      </div>\r\n      <Link className={styles.link} to={`/client/?${infos._id}`}>Voltar ao inicio</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nConfirmClient.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nexport default connect(mapStateToProps)(ConfirmClient);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport MainClient from './MainClient';\r\nimport FormClient from './FormClient';\r\nimport MenuClient from './MenuClient';\r\nimport AtentionClient from './AtentionClient';\r\nimport AboutClient from './AboutClient';\r\nimport ConfirmClient from './ConfirmClient';\r\n\r\nconst RoutesApp = () => (\r\n  <Switch>\r\n    <Route exact path='/client' component={MainClient}/>\r\n    <Route exact path='/client/opiniao' component={FormClient}/>\r\n    <Route exact path='/client/opiniao/sucesso' component={ConfirmClient}/>\r\n    <Route exact path='/client/atencao' component={AtentionClient}/>\r\n    <Route exact path='/client/sobrenos' component={AboutClient}/>\r\n    <Route exact poth='/client/cardapio' component={MenuClient}/>\r\n  </Switch>\r\n)\r\n\r\nexport default RoutesApp;","import React, { useState, useEffect} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport RoutesClient from './routesClient';\r\nimport { getInfo } from '../../store/clientReducer';\r\nimport history from '../../services/history';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport MarkunreadMailboxIcon from '@material-ui/icons/MarkunreadMailbox';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  img:{\r\n    padding: '10px'\r\n  },\r\n  menu: {\r\n    height: '25px'\r\n  },\r\n  links:{\r\n    margin: 'auto'\r\n  },\r\n  labelLink:{\r\n    padding: '10px',\r\n  },\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  list: {\r\n    width: 200,\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  content: {\r\n    width: '275px',\r\n    margin: 'auto',\r\n    paddingTop: '30px'\r\n  },\r\n}));\r\n\r\nconst Client = (props) => {\r\n  const { infos } = props;\r\n  const [ idUrl ] = useState(window.location.href.split('/?')[1]);\r\n  const [state, setState] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if(idUrl){\r\n      props.getInfo(idUrl);\r\n    }else{\r\n      history.push('/');\r\n    }\r\n  },[idUrl]);\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    setState(open);\r\n  };\r\n\r\n  const list = (\r\n    <div className={classes.list} onClick={toggleDrawer(false)} role=\"presentation\" onKeyDown={toggleDrawer(false)}>\r\n      <List>\r\n        <ListItem button component={Link} to={`/client/?${infos._id}`}>\r\n          <ListItemIcon><HomeIcon/></ListItemIcon>\r\n          <ListItemText primary='Início'/>\r\n        </ListItem>\r\n        <Divider/>\r\n        <ListItem button component={Link} to={`/client/sobrenos/?${infos._id}`}>\r\n          <ListItemIcon><InfoIcon/></ListItemIcon>\r\n          <ListItemText primary='Sobre nós'/>\r\n        </ListItem>\r\n        <Divider/>\r\n        <ListItem button component={Link} to='/'>\r\n          <ListItemIcon><MarkunreadMailboxIcon/></ListItemIcon>\r\n          <ListItemText primary='Sobre o SuggestInBox' />\r\n        </ListItem>\r\n        <Divider/>\r\n      </List>\r\n    </div>\r\n  )\r\n  return(\r\n    <div>\r\n      <CssBaseline />\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton onClick={toggleDrawer(true)} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Drawer open={state} onClose={toggleDrawer(false)}>\r\n            {list}\r\n          </Drawer>\r\n          <Typography variant=\"button\" className={classes.links}>\r\n            <Button color=\"inherit\" component={Link} to={`/client/?${infos._id}`}>SuggestInBox</Button>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.content}>\r\n        <RoutesClient/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nClient.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({getInfo}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Client);","const INITIAL_STATE = {\r\n  message: '',\r\n  showMessage: false,\r\n  progress: true\r\n}\r\nexport const ACTIONS = {\r\n  SHOW_MESSAGE: 'SHOW_MESSAGE',\r\n  HIDE_MESSAGE: 'HIDE_MESSAGE',\r\n  HIDE_PROGRESS: 'HIDE_PROGRESS',\r\n  SHOW_PROGRESS: 'SHOW_PROGRESS'\r\n}\r\nexport const messageReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.SHOW_MESSAGE:\r\n      return {...state, message: action.message, showMessage: true}\r\n    case ACTIONS.HIDE_MESSAGE:\r\n      return {...state, message: '', showMessage: false, progress: true}\r\n    case ACTIONS.SHOW_PROGRESS:\r\n      return {...state, progress: false}\r\n    case ACTIONS.HIDE_PROGRESS:\r\n      return {...state, progress: true}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//MOSTAR MENSAGEM CAPTURADA DAS REQUESTS\r\nexport const showMessage = (message) => {\r\n  return{\r\n    type: ACTIONS.SHOW_MESSAGE,\r\n    message: message\r\n  }\r\n}\r\n//FECHAR MENSAGENS\r\nexport const hideMessage = () => {\r\n  return {\r\n    type: ACTIONS.HIDE_MESSAGE\r\n  }\r\n}\r\n//PROGRESS DA REQUISIÇÃO\r\nexport const showProgress = () => {\r\n  return {\r\n    type: ACTIONS.SHOW_PROGRESS\r\n  }\r\n}\r\n//FECHAR PROGRESSO\r\nexport const hideProgress = () => {\r\n  return {\r\n    type: ACTIONS.HIDE_MESSAGE\r\n  }\r\n}","import api from '../services/api';\r\nimport history from '../services/history';\r\nimport { setInfosLocalStorage, logoutUser } from '../services/auth';\r\nimport { showMessage } from './messageReducer';\r\n\r\nconst ACTIONS = {\r\n  AUTH: 'AUTH',\r\n  FOGOT: 'FOGOT'\r\n}\r\nconst INITIAL_STATE = {\r\n  infos:[],\r\n  email:[],\r\n  user:[],\r\n}\r\nexport const authReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.AUTH:\r\n      return {...state, infos: action.infos}\r\n    case ACTIONS.FOGOT:\r\n      return {...state, email: action.email}\r\n    case ACTIONS.RESET:\r\n      return {...state, user: action.user}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//AUTENTICAÇÃO\r\nexport const auth = (login) => {\r\n  return dispatch => {\r\n    api.post('/auth', login)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.AUTH,\r\n        infos: Response.data,\r\n      }); \r\n      if(!Response.data.token){\r\n        dispatch(\r\n          showMessage(\"Senha ou email inválidos!\")\r\n        )\r\n      }else{\r\n        setInfosLocalStorage(Response.data.token, Response.data.user);\r\n        history.push(`/user/?${Response.data.user._id}?page=1&limit=25`);\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servidor indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )}\r\n    )\r\n  }\r\n}\r\n//ESQUECI SENHA\r\nexport const fogot = (email) => {\r\n  return dispatch => {\r\n    api.post('/auth/fogot', email)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.FOGOT,\r\n        email: Response.data,\r\n      });\r\n      if(!Response.data.email){\r\n        dispatch(\r\n          showMessage(\"Usuario não encontrado!\")\r\n        )\r\n      }else{\r\n        history.push('/login');\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servidor indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )}\r\n    );\r\n  }\r\n}\r\n//RESET SENHA\r\nexport const reset = (user) => {\r\n  return dispatch => {\r\n    api.post('/auth/reset_password', user)\r\n    .then(Response => {\r\n      dispatch({\r\n          type: ACTIONS.FOGOT,\r\n          user: Response.data,\r\n      });\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Serviço indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )}\r\n    );\r\n  }\r\n}\r\n//LOGOUT\r\nexport const logout = () =>{\r\n  logoutUser();\r\n  history.push(`/login`);\r\n}","import api from '../services/api';\r\nimport history from '../services/history';\r\n\r\nconst ACTIONS = {\r\n  //SUGGEST\r\n  LIST_SUGGESTS: 'LISTSUGGESTS',\r\n  FAVORITE: 'FAVORITE',\r\n  TOFILE: 'TOFILE',\r\n  //COMPANY\r\n  LIST_COMPANIES: 'LISTCOMPANIES',\r\n  BY_ID_COMPANY: 'BYIDCOMPANY',\r\n  UPDATE_COMPANY: 'UPDATECOMPANY',\r\n  CLEAN_COMPANY: 'CLEANCOMPANY',\r\n  ADD_COMPANY: 'ADDCOMPANY',\r\n  //USER\r\n  BY_ID_USER: 'BYIDUSER',\r\n  UPDATE_USER: 'UPDATEUSER',\r\n}\r\nconst INITIAL_STATE = {\r\n  //SUGGEST\r\n  suggests: [],\r\n  suggest: [],\r\n  suggestById: [],\r\n  infosSuggests: [],\r\n  //COMPANY\r\n  companies: [],\r\n  company: [],\r\n  infosCompanies: [],\r\n  companyById: [],\r\n  loadingCompany: false,\r\n  //USER\r\n  userById: [],\r\n  loadingUser: false,\r\n}\r\nexport const admReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    //*********************SUGGESTS*********************\r\n    case ACTIONS.LIST_SUGGESTS:\r\n      return {...state, suggests: action.suggests, infosSuggests: action.infosSuggests}\r\n    case ACTIONS.FAVORITE:\r\n      const listUp = [...state.suggests]\r\n      listUp.forEach(suggest => {\r\n        if(suggest._id === action._id){\r\n          suggest.favorite = true;\r\n        }\r\n      })\r\n      return {...state, suggests: listUp}\r\n    case ACTIONS.TOFILE:\r\n      const listUpOut = [...state.suggests]\r\n      listUpOut.forEach(suggest => {\r\n        if(suggest._id === action._id){\r\n          suggest.outlier = true;\r\n        }\r\n      })\r\n      return {...state, suggests: listUpOut}\r\n    //*********************COMPANIES*********************\r\n    case ACTIONS.LIST_COMPANIES:\r\n      return {...state, companies: action.companies, infosCompanies: action.infosCompanies}\r\n    case ACTIONS.ADD_COMPANY:\r\n      return {...state, company: action.company}\r\n    case ACTIONS.BY_ID_COMPANY:\r\n      return {...state, companyById: action.companyById, loadingCompany: action.loadingCompany}\r\n    case ACTIONS.UPDATE_COMPANY:\r\n      return state;\r\n    case ACTIONS.CLEAN_COMPANY:\r\n      return {...state, companyById: []}\r\n    //*********************COMPANIES*********************\r\n    case ACTIONS.BY_ID_USER:\r\n      return {...state, userById: action.userById, loadingUser: action.loadingUser}\r\n    case ACTIONS.UPDATE_USER:\r\n      return state;\r\n    //DEFAULT\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//*******************************************SUGGESTS*********************************************\r\n//LISTAR SUGGESTS\r\nexport const listSuggest = (page, nOfItems, idUrl) => {\r\n  return dispatch => {\r\n    api.get(`/adm/all-suggest/${idUrl}?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_SUGGESTS,\r\n        suggests: docs,\r\n        infosSuggests: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//FAVORITAR SUGGEST\r\nexport const favorite = (suggest) => {\r\n  return dispatch => {\r\n    api.put(`/adm/suggest/${suggest._id}`, suggest )\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.FAVORITE,\r\n        id: suggest._id\r\n      })\r\n    })\r\n  }\r\n}\r\n//ARQUIVAR SUGGEST\r\nexport const outlier = (suggest) => {\r\n  return dispatch => {\r\n    api.put(`/adm/suggest/${suggest._id}`, suggest )\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.TOFILE,\r\n        id: suggest._id\r\n      })\r\n    })\r\n  }\r\n}\r\n//*******************************************COMPANIES*********************************************\r\n//LISTAR COMPANIAS\r\nexport const listCompanies = (page, nOfItems) => {\r\n  return dispatch => {\r\n    api.get(`/adm/company?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_COMPANIES,\r\n        companies: docs,\r\n        infosCompanies: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//ADICIONAR COMPANY\r\nexport const addCompany = (company, id) => {\r\n  return dispatch => {\r\n    api.post('/adm/company', company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ADD_COMPANY,\r\n        company: Response.data,\r\n      });\r\n    }, history.push(`/user`))\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//GET BY ID COMPANY\r\nexport const getCompanyById = (id) => {\r\n  return dispatch => {\r\n    api.get(`/adm/company/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_COMPANY,\r\n        companyById: Response.data,\r\n        loadingCompany: true,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n//UPDATE COMPANY\r\nexport const updateCompany = (company, id, idUser) => {\r\n  return dispatch => {\r\n    api.put(`/adm/company/${id}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_COMPANY,\r\n        //company: Response.data\r\n      })\r\n    }, history.push(`/suggest/?${idUser}/?${id}`))\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n//LIMPAR CAMPOS COMPANY\r\nexport const cleanCompany = () => {\r\n  return {\r\n    type: ACTIONS.CLEAN_COMPANY,\r\n  }\r\n}\r\n//*******************************************USER*********************************************\r\n//GET BY ID USER\r\nexport const getUserById = (id) => {\r\n  return dispatch => {\r\n    api.get(`/adm/user/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_USER,\r\n        userById: Response.data,\r\n        loadingUser: true,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n//UPDATE USER\r\nexport const updateUser = (user, id) => {\r\n  return dispatch => {\r\n    api.put(`/adm/user/${id}`, user)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_USER,\r\n        //user: Response.data\r\n      })\r\n    }, history.push(`/user/?${id}?page=1&limit=25`))\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { listCompanies } from '../../../store/admReducer' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  item: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  center: {\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    margin: '20px'\r\n  },\r\n  button: {\r\n    margin: '15px'\r\n  }\r\n}));\r\n\r\nconst Companies = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { companies, infosCompanies } = props;\r\n  const [ idUrl ] = useState(window.location.href.split('/?')[1].split('?')[0]);\r\n  const nOfPages = infosCompanies.pages;\r\n  const [page, setPage] = useState(1);\r\n  const [nOfItems, setNoOfItems] = useState(10);\r\n\r\n  useEffect(() => {\r\n    props.listCompanies(page, nOfItems);\r\n  },[page, nOfItems]);\r\n\r\n  const handleChange=(event, value)=>{\r\n    setPage(value);\r\n  }\r\n  const handleNofItems=(event)=>{\r\n    setNoOfItems(event.target.value);\r\n    setPage(1);\r\n  }\r\n\r\n  const mapCompanies = (\r\n    <React.Fragment>\r\n      {companies.map( company => {\r\n          return(\r\n            <Grid key={company._id} item md={4} sm={6} xs={12}>\r\n              <div className={classes.item}>  \r\n                <Card>\r\n                  <CardActionArea component={Link} to={`/suggest/?${idUrl}/?${company._id}?page=${page}&limit=${nOfItems}`}>\r\n                    <CardContent>\r\n                      <Typography noWrap variant=\"h5\" component=\"h2\">\r\n                        {company.name}\r\n                      </Typography>\r\n                      <Typography noWrap variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {company.address.city} - {company.address.state}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                  <CardActions className={classes.center}>\r\n                    <Button component={Link} to={`/suggest/?${idUrl}/?${company._id}?page=${page}&limit=${nOfItems}`} variant=\"contained\" color=\"primary\">\r\n                      Gerenciar\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </div>\r\n            </Grid>\r\n          )})\r\n        }\r\n    </React.Fragment>\r\n  )\r\n\r\n  return(\r\n    <div className={classes.root}>\r\n      <Typography className={classes.center} variant=\"h5\" component=\"h2\">Estabelecimentos</Typography>\r\n      <Button className={classes.button} component={Link} to={`/user/setup-company/?${idUrl}`} variant=\"contained\" color=\"primary\">\r\n        Adicionar Estabelecimento\r\n      </Button>\r\n      <Grid container item xs={12} spacing={3}>\r\n        {mapCompanies}\r\n      </Grid>\r\n      <Grid className={classes.center} container item xs={12} spacing={3}>\r\n        <Box component=\"span\">\r\n          <Pagination\r\n            count={nOfPages}\r\n            page={page}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nCompanies.prototypes = {\r\n  companies: PropTypes.array.isRequired,\r\n  infosCompanies: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companies: state.adm.companies,\r\n  infosCompanies: state.adm.infosCompanies,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({listCompanies}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Companies);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport NumberFormat from 'react-number-format';\r\nimport * as Yup from 'yup';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider, Button, TextField, Card, Typography, Grid} from '@material-ui/core';\r\nimport { getUserById, updateUser } from '../../../store/admReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 8\r\n  },\r\n  button: {\r\n    float: 'right',\r\n    margin: 8,\r\n  },\r\n  media: {\r\n    margin: 'auto',\r\n    width: 140,\r\n    height: 140,\r\n  },\r\n  card: {\r\n    marginBottom: 10,\r\n  },\r\n  center: {\r\n    margin: 'auto',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  grid: {\r\n    justifyContent: 'center',\r\n    padding: 8\r\n  }\r\n}));\r\n\r\nconst ZipFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='#####-###'\r\n    />\r\n  );\r\n}\r\n\r\nZipFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst CpfFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='###.###.###-##'\r\n    />\r\n  );\r\n}\r\n\r\nCpfFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst PhoneFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='(##) #########'\r\n    />\r\n  );\r\n}\r\n\r\nPhoneFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst SetupUser = (props) => {\r\n  const classes = useStyles();\r\n  const { userById } = props;\r\n\r\n  const [idUrl] = useState(window.location.href.split('/?')[1]);\r\n  const defaultFormShape = {\r\n    email: '',\r\n    name: '',\r\n    cpf: '',\r\n    phone: '',\r\n    address: {\r\n      state: '',\r\n      city: '',\r\n      street: '',\r\n      number: '',\r\n      type: '',\r\n      district: '',\r\n      zip: '',\r\n      obs: ''\r\n    },\r\n  };\r\n\r\n  useEffect(()=>{\r\n    props.getUserById(idUrl);\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <Formik \r\n        initialValues= {userById._id? userById : defaultFormShape}\r\n        enableReinitialize\r\n        validationSchema={Yup.object({\r\n          email: Yup.string()\r\n            .required('Email obrigatório!'),\r\n          name: Yup.string()\r\n            .required('Nome obrigatório!'),\r\n          cpf: Yup.string()\r\n            .required('Cpf obrigatório!'),\r\n          phone: Yup.string()\r\n            .required('Telefone obrigatório!'),\r\n          address: Yup.object({\r\n            zip: Yup.string()\r\n              .required('Cep obrigatorio!'),\r\n            street: Yup.string()\r\n              .required('Rua obrigatorio!'),\r\n            district: Yup.string()\r\n              .required('Bairro obrigatorio!'),\r\n            city: Yup.string()\r\n              .required('Cidade obrigatorio!'),\r\n            state: Yup.string()\r\n              .required('Estado obrigatorio!'),\r\n            number: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n            type: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n            obs: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n          }),\r\n        })}\r\n\r\n        onSubmit={(values) => {\r\n          const { name, email, phone, cpf } = values;\r\n          const { state, city, street, number, type, district, zip, obs } = values.address;\r\n          const address = {state, city, street, number, type, district, zip, obs};\r\n          const userUpdate = { name, email, cpf, phone, address };\r\n          props.updateUser(userUpdate, userById._id);\r\n        }}>\r\n        {formik => (\r\n          <Card >\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <p style={{margin: 10}}>Dados</p>\r\n              <Grid container>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={5}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Nome:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"name\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('name')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.name && formik.errors.name ? (\r\n                        <Typography className={classes.error}>{formik.errors.name}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"CPF:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"cpf\"\r\n                      InputProps={{inputComponent: CpfFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('cpf')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.cpf && formik.errors.cpf ? (\r\n                        <Typography className={classes.error}>{formik.errors.cpf}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Email:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"email\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('email')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.email && formik.errors.email ? (\r\n                        <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Telefone:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"phone\"\r\n                      InputProps={{inputComponent: PhoneFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('phone')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.phone && formik.errors.phone ? (\r\n                        <Typography className={classes.error}>{formik.errors.phone}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{margin: 10}}>Endereço</p>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cep:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.zip\"\r\n                      InputProps={{inputComponent: ZipFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.zip')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.zip}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Rua:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.street\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.street')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.street}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Bairro:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.district\"\r\n                      inputProps={{ maxLength: 40 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.district')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.district}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cidade:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.city\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.city')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.city}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Estado:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.state\"\r\n                      inputProps={{ maxLength: 30 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.state')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.state}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Número:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.number\"\r\n                      inputProps={{ maxLength: 6 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.number')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.number}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Tipo:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.type\"\r\n                      inputProps={{ maxLength: 20 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.type')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.type}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Complemento:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.obs\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.obs')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.obs}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Divider/>\r\n                  <Button type=\"submit\" className={classes.button} variant=\"contained\" color=\"primary\">\r\n                    Atualizar\r\n                  </Button>\r\n                  <Button className={classes.button} component={Link} to={`/user/?${userById._id}?page=1&limit=25`} variant=\"outlined\" color=\"primary\">\r\n                    Cancelar\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nSetupUser.prototypes = {\r\n  userById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userById: state.adm.userById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ getUserById, updateUser }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupUser);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider, Button, TextField, Card, Typography, Grid} from '@material-ui/core';\r\nimport { addCompany, getCompanyById, updateCompany, cleanCompany } from '../../../store/admReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 8\r\n  },\r\n  button: {\r\n    float: 'right',\r\n    margin: 8,\r\n  },\r\n  media: {\r\n    margin: 'auto',\r\n    width: 140,\r\n    height: 140,\r\n  },\r\n  card: {\r\n    marginBottom: 10,\r\n  },\r\n  center: {\r\n    margin: 'auto',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  grid: {\r\n    justifyContent: 'center',\r\n    padding: 8\r\n  }\r\n}));\r\n\r\nconst SetupCompany = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n\r\n  const [idUser] = useState(window.location.href.split('/?')[1]);\r\n  const [idCompany] = useState(window.location.href.split('/?')[2]);\r\n  const defaultFormShape = {\r\n    name: '',\r\n    cnpj: '',\r\n    slogan: '',\r\n    history: '',\r\n    localization: '',\r\n    email: '',\r\n    phone: '',\r\n    address: {\r\n      state: '',\r\n      city: '',\r\n      street: '',\r\n      number: '',\r\n      type: '',\r\n      district: '',\r\n      zip: '',\r\n      obs: ''\r\n    },\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(idCompany){\r\n      props.getCompanyById(idCompany);\r\n    }else{\r\n      props.cleanCompany();\r\n    }\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <Formik \r\n        initialValues= {companyById._id? companyById : defaultFormShape}\r\n        enableReinitialize\r\n        validationSchema={Yup.object({\r\n          name: Yup.string()\r\n            .required('Nome obrigatório!'),\r\n          cnpj: Yup.string()\r\n            .required('Cnpj obrigatório!'),\r\n          slogan: Yup.string()\r\n            .required('Slogan obrigatório'),\r\n          history: Yup.string()\r\n            .required('História obrigatória'),\r\n          localization: Yup.string()\r\n            .required('Localização obrigatória'),\r\n          email: Yup.string()\r\n            .required('Email obrigatório!'),\r\n          phone: Yup.string()\r\n            .required('Telefone obrigatório!'),\r\n          address: Yup.object({\r\n            zip: Yup.string()\r\n              .required('Cep obrigatorio!'),\r\n            street: Yup.string()\r\n              .required('Rua obrigatorio!'),\r\n            district: Yup.string()\r\n              .required('Bairro obrigatorio!'),\r\n            city: Yup.string()\r\n              .required('Cidade obrigatorio!'),\r\n            state: Yup.string()\r\n              .required('Estado obrigatorio!'),\r\n            number: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n          }),\r\n        })}\r\n\r\n        onSubmit={(values) => {\r\n          if(companyById._id){\r\n            const { name, slogan, history, localization, email, cnpj, phone } = values;\r\n            const { state, city, street, number, type, district, zip, obs } = values.address;\r\n            const address = {state, city, street, number, type, district, zip, obs};\r\n            const companyUpdate = { name, slogan, history, localization, email, cnpj, phone, address };\r\n            props.updateCompany(companyUpdate, companyById._id, idUser);\r\n          }else{\r\n            props.addCompany(values);\r\n          }\r\n        }}>\r\n        {formik => (\r\n          <Card >\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <p style={{margin: 10}}>Dados</p>\r\n              <Grid container>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Nome:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"name\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('name')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.name && formik.errors.name ? (\r\n                        <Typography className={classes.error}>{formik.errors.name}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Slogan:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"slogan\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('slogan')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.slogan && formik.errors.slogan ? (\r\n                        <Typography className={classes.error}>{formik.errors.slogan}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"História:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"history\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('history')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.history && formik.errors.history ? (\r\n                        <Typography className={classes.error}>{formik.errors.history}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Localização:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"localization\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('localization')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.localization && formik.errors.localization ? (\r\n                        <Typography className={classes.error}>{formik.errors.localization}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Email:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"email\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('email')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.email && formik.errors.email ? (\r\n                        <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Telefone:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"phone\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('phone')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.phone && formik.errors.phone ? (\r\n                        <Typography className={classes.error}>{formik.errors.phone}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"CNPJ:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"cnpj\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('cnpj')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.cnpj && formik.errors.cnpj ? (\r\n                        <Typography className={classes.error}>{formik.errors.cnpj}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{margin: 10}}>Endereço</p>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cep:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.zip\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.zip')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.zip}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Rua:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.street\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.street')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.street}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Bairro:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.district\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.district')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.district}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cidade:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.city\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.city')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.city}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Estado:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.state\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.state')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.state}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Número:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.number\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.number')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.number}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Divider/>\r\n                  <Button type=\"submit\" className={classes.button} variant=\"contained\" color=\"primary\">\r\n                    {companyById._id? 'Atualizar': 'Salvar'}\r\n                  </Button>\r\n                  <Button className={classes.button} component={Link} \r\n                          to={companyById._id? `/suggest/?${idUser}/?${idCompany}?page=1&limit=25` : `/user/?${idUser}?page=1&limit=25`} variant=\"outlined\" color=\"primary\">\r\n                    Cancelar\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nSetupCompany.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.adm.companyById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ addCompany, getCompanyById, updateCompany, cleanCompany }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupCompany);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Companies from './Companies';\r\nimport SetupUser from './SetupUser';\r\nimport SetupCompany from './SetupCompany';\r\n\r\nconst RoutesUser = () => {\r\n  return(\r\n    <Switch>\r\n      <Route exact path='/user' component={Companies}/>\r\n      <Route exact path='/user/setup' component={SetupUser}/>\r\n      <Route exact path='/user/setup-company' component={SetupCompany}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default RoutesUser;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../store/authReducer';\r\nimport { getUserById } from '../../store/admReducer';\r\nimport PropTypes from 'prop-types';\r\nimport RoutesUser from './routesUser';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textDecoration: 'none',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  profile: {\r\n    paddingRight: 17\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n}));\r\n\r\nconst User = (props) => {\r\n  const classes = useStyles();\r\n  const [ idUser ] = useState(window.location.href.split('/?')[1]);\r\n  const { userById } = props;\r\n  \r\n  useEffect(() => {\r\n    props.getUserById(idUser);\r\n  },[]);\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\">\r\n          <Toolbar className={classes.toolbar}>\r\n            <Typography component={Link} to={`/user/?${userById._id}?page=1&limit=25`} variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              SuggestInBox\r\n            </Typography>\r\n            <div className={classes.profile}>{userById.name}</div>\r\n            <IconButton component={Link} to={`/user/setup/?${userById._id}`} color=\"inherit\">\r\n              <SettingsIcon/>\r\n            </IconButton>\r\n            <IconButton onClick={props.logout} color=\"inherit\">\r\n              <ExitToAppIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid>\r\n              <RoutesUser />\r\n            </Grid>\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUser.prototypes = {\r\n  userById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userById: state.adm.userById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({logout, getUserById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(User);","import React, { useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { listSuggest, favorite, outlier } from '../../../../store/admReducer';\r\nimport { parseISO } from 'date-fns';\r\nimport { format } from 'date-fns-tz';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Box from '@material-ui/core/Box';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport { IconButton } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    secondary:{\r\n      main: '#FFB701'\r\n    }\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  center: {\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    margin: '20px'\r\n  },\r\n}));\r\n\r\nconst Suggest = (props) => {\r\n  const classes = useStyles();\r\n  const {suggests, infosSuggests} = props;\r\n  const nOfPages = infosSuggests.pages;\r\n  const [page, setPage] = useState(1);\r\n  const [nOfItems, setNoOfItems] = useState(25);\r\n  const [ idCompany ] = useState(window.location.href.split('/?')[2]);\r\n\r\n  useEffect(() => {\r\n    props.listSuggest(page, nOfItems, idCompany);\r\n  },[page, nOfItems]);\r\n\r\n  const handleChange=(event, value)=>{\r\n    setPage(value);\r\n  }\r\n  const handleNofItems=(event)=>{\r\n    setNoOfItems(event.target.value);\r\n    setPage(1);\r\n  }\r\n  const favoriteUpdate = (suggest) => {\r\n    if(suggest.favorite){\r\n      suggest.favorite = false;\r\n      return props.favorite(suggest)\r\n    }else{\r\n      suggest.favorite = true;\r\n      return props.favorite(suggest)\r\n    }\r\n  }\r\n  const outlierUpdate = (suggest) => {\r\n    if(suggest.outlier){\r\n      suggest.outlier = false;\r\n      return props.outlier(suggest)\r\n    }else{\r\n      suggest.outlier = true;\r\n      return props.outlier(suggest)\r\n    }\r\n  }\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Suggestões</Typography>\r\n       <div>\r\n        <FormControl>\r\n          <FormHelperText>Número por página:</FormHelperText>\r\n          <Select\r\n            value={nOfItems}\r\n            onChange={handleNofItems}\r\n            inputProps={{ 'aria-label': 'Without label' }}>\r\n            <MenuItem value={10}>10</MenuItem>\r\n            <MenuItem value={25}>25</MenuItem>\r\n            <MenuItem value={50}>50</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            format=\"MM/dd/yyyy\"\r\n            margin=\"normal\"\r\n            id=\"date-picker-inline\"\r\n            label=\"Date picker inline\"\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </div>\r\n      <Paper>\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align='center'>Data</TableCell>\r\n                <TableCell align='center'>Nome</TableCell>\r\n                <TableCell align='center'>Telefone</TableCell>\r\n                <TableCell align='center'>Avaliação</TableCell>\r\n                <TableCell align='center'>Recomenda</TableCell>\r\n                <TableCell align='center'>Opinião</TableCell>\r\n                <TableCell align='center'/>\r\n                <TableCell align='center'/>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <MuiThemeProvider theme={theme}>\r\n                { suggests.map( suggest => {\r\n                  return (\r\n                    <TableRow hover key={suggest._id} role=\"checkbox\" tabIndex={-1}>\r\n                      <TableCell align='center'>{format(parseISO(suggest.createdAt), 'dd/MM/yyyy HH:mm', {timeZone: 'America/Sao_Paulo'} )}</TableCell>\r\n                      <TableCell align='center'>{suggest.name}</TableCell>\r\n                      <TableCell align='center'>{suggest.phone}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <Rating name=\"read-only\" size=\"small\" value={suggest.stars? suggest.stars: 0} precision={0.5} readOnly/>\r\n                      </TableCell>\r\n                      <TableCell align='center'>{suggest.recommends? (<CheckIcon/>) : (<CloseIcon/>)}</TableCell>\r\n                      <TableCell align='center'>{suggest.opinion}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <IconButton onClick={() => favoriteUpdate(suggest)}>\r\n                          {suggest.favorite? (<StarIcon color='secondary'/>):(<StarBorderIcon/>)}\r\n                        </IconButton>\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <IconButton onClick={() => outlierUpdate(suggest)}>\r\n                          {suggest.outlier? (<DeleteOutlineIcon color=\"disabled\"/>):(<DeleteOutlineIcon/>)}\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )\r\n                })}\r\n              </MuiThemeProvider>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Grid className={classes.center} container item xs={12} spacing={3}>\r\n          <Box component=\"span\">\r\n            <Pagination\r\n              count={nOfPages}\r\n              page={page}\r\n              onChange={handleChange}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nSuggest.prototypes = {\r\n  suggest: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  suggests: state.adm.suggests,\r\n  infosSuggests: state.adm.infosSuggests,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({listSuggest, favorite, outlier}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Suggest);","import React, {useState} from 'react';\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst Promo = () => {\r\n  const [state, setState] = useState({\r\n    checkedA: false,\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  return(\r\n    <div>\r\n      <Switch\r\n        checked={state.checkedA}\r\n        onChange={handleChange}\r\n        name=\"checkedA\"\r\n        color=\"primary\"\r\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Promo;","import React, {useState} from 'react';\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst Menu = () => {\r\n  const [state, setState] = useState({\r\n    checkedA: false,\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  return(\r\n    <div>\r\n      <Switch\r\n        checked={state.checkedA}\r\n        onChange={handleChange}\r\n        name=\"checkedA\"\r\n        color=\"primary\"\r\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\n\r\nconst Finances = () => {\r\n  return(\r\n    <div>\r\n      FINANÇAS EM DESENVOLVIMENTO\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Finances;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Suggest from './Suggests';\r\nimport Promo from './Promo';\r\nimport Menu from './Menu';\r\nimport Finances from './Finances';\r\nimport SetupCompany from '../SetupCompany';\r\n\r\nconst RoutesUser = () => {\r\n  return(\r\n    <Switch>\r\n      <Route exact path='/suggest' component={Suggest}/>\r\n      <Route exact path='/suggest/promo' component={Promo}/>\r\n      <Route exact path='/suggest/cardapio' component={Menu}/>\r\n      <Route exact path='/suggest/finances' component={Finances}/>\r\n      <Route exact path='/suggest/setup-company' component={SetupCompany}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default RoutesUser;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../../store/authReducer';\r\nimport { getCompanyById, getUserById } from '../../../store/admReducer';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\n\r\nimport RoutesUser from './routesUser';\r\n\r\nconst drawerWidth = 210;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textDecoration: 'none',\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  icon: {\r\n    textDecoration: 'none',\r\n    color: 'white',\r\n  },\r\n  profile: {\r\n    paddingRight: 17\r\n  },\r\n  avatar: {\r\n    backgroundColor: '#f50057',\r\n    textAlign: 'center',\r\n  },\r\n  card:{\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nconst MainSuggest = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n  const { stars, name } = companyById;\r\n  const [ idUser ] = useState(window.location.href.split('/?')[1]);\r\n  const [ idCompany ] = useState(window.location.href.split('/?')[2].split('?')[0]);\r\n\r\n  useEffect(() => {\r\n    if(idCompany){\r\n      props.getCompanyById(idCompany);\r\n    }\r\n  },[]);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component={Link} to={`/suggest/?${idUser}/?${idCompany}?page=1&limit=25`} variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                SuggestInBox\r\n            </Typography>\r\n            <div component={Link} to='/user' className={classes.profile}>{companyById.name}</div>\r\n            <IconButton component={Link} to={`/suggest/setup-company/?${idUser}/?${idCompany}`} color=\"inherit\">\r\n              <SettingsIcon/>\r\n            </IconButton>\r\n            <IconButton onClick={props.logout} color=\"inherit\">\r\n              <ExitToAppIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer variant=\"permanent\" classes={{paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)}} open={open}>\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            <div>      \r\n              <Card className={classes.card}>\r\n                <div>\r\n                  <IconButton component={Link} to={`/suggest/setup-company/?${idUser}/?${idCompany}`} color=\"inherit\">\r\n                    <Avatar className={classes.avatar}>{name? name.split('', 1): \"...\"}</Avatar>\r\n                  </IconButton>\r\n                  <Typography hidden={!open}>{companyById.name}</Typography>\r\n                </div>\r\n                <CardContent hidden={!open}>\r\n                  <Typography variant=\"h3\" color=\"textSecondary\" component=\"p\">\r\n                    {parseFloat(companyById.stars).toFixed(1)}\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\" component=\"p\">\r\n                    {companyById.nStars} classificações\r\n                  </Typography>\r\n                  <Rating name=\"read-only\" value={stars? stars: 0} precision={0.5} readOnly/>\r\n                </CardContent>\r\n              </Card>\r\n              <ListItem button component={Link} to={`/suggest/?${idUser}/?${idCompany}?page=1&limit=25`}>\r\n                <ListItemIcon>\r\n                  <AssessmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Sugestões\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/promo/?${idUser}/?${idCompany}`}>\r\n                <ListItemIcon>\r\n                  <EmojiEmotionsIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Promoções\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/cardapio/?${idUser}/?${idCompany}`}>\r\n                <ListItemIcon>\r\n                  <MenuBookIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Cardapio\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/finances/?${idUser}/?${idCompany}`}>\r\n                <ListItemIcon>\r\n                  <MonetizationOnIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Financeiro\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/user/?${idUser}?page=1&limit=25`}>\r\n                <ListItemIcon>\r\n                  <BusinessIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Companias\" />\r\n              </ListItem>\r\n            </div>\r\n          </List>\r\n        <Divider />\r\n        </Drawer>\r\n\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid>\r\n              <RoutesUser />\r\n            </Grid>\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMainSuggest.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.auth.infos,\r\n  companyById: state.adm.companyById,\r\n  userById: state.adm.userById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({logout, getCompanyById, getUserById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainSuggest);","import React from 'react';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\n\r\nconst RoutesAppSuggest = () => {\r\n  const match = useRouteMatch();\r\n\r\n  return(\r\n    <Switch>\r\n      <Route exact path={`${match.url}`} component={()=><h1>SUGGEST</h1>}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default RoutesAppSuggest;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport RoutesAdm from './routesAdm';\r\n\r\nconst Adm = () => {\r\n  return(\r\n    <div>\r\n      <h1><img alt='logo' src='/assets/logo_palpitebox.png'/></h1>\r\n      <header>\r\n        <nav>\r\n          <ul>\r\n            <li><Link to='/'>Início</Link></li>\r\n            <li>|</li>\r\n            <li><Link to='/client/sobrenos'>Sobre nós</Link></li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n      <div>\r\n        <RoutesAdm/>\r\n      </div>\r\n      <div>\r\n        <footer>\r\n          <p>Colocar Suggest na sua empresa, <Link to='/'>clique aqui!</Link></p>\r\n          <p>Suggest In Box - Todos os direitos reservados.</p>\r\n          <p>© 2020 - Copyright</p>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Adm;","import React from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\r\nimport { showMessage, hideMessage } from '../../store/messageReducer';\r\n\r\nconst MessageDialog = (props) => {\r\n  return(\r\n    <div>\r\n      <Dialog open={props.openDialog} onClick={()=> props.hideMessage} onClose={props.hideMessage}>\r\n        <DialogTitle>\r\n          Atenção\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {props.message}\r\n        </DialogContent>\r\n        <DialogActions onClick={()=> props.hideMessage}>\r\n          <Button onClick={props.hideMessage}>Fechar</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  openDialog: state.message.showMessage,\r\n  message: state.message.message\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({showMessage, hideMessage}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageDialog);","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { auth } from '../../store/authReducer';\r\nimport { showMessage, hideMessage, showProgress } from '../../store/messageReducer';\r\nimport MessageDialog from '../Dialog';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    maxWidth: 300,\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  link: {\r\n    textAlign: 'end'\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const [disableSubmit, setDisableSubmit] = useState(true);\r\n\r\n  const formik = useFormik ({\r\n    initialValues: { email: '', password: ''},\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .email('Email inválido')\r\n        .required('Email obrigatório!'),\r\n      password: Yup.string()\r\n        .required('Senha obrigatória!')\r\n        .max(40, 'Senha muito longa'),\r\n      }),\r\n      onSubmit: values => {\r\n        props.auth(values);\r\n      },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n        <Typography variant=\"h6\" noWrap>\r\n          SuggestInBox\r\n        </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container className={classes.container} component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Login\r\n          </Typography> \r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"email\" \r\n              name=\"email\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Email\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.email}\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <div>\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"password\" \r\n              name=\"password\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Senha\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.password}\r\n              inputProps={{ maxLength: 40 }}\r\n            />\r\n            <div>\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <Typography className={classes.error}>{formik.errors.password}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <ReCAPTCHA sitekey=\"6LcgjtIZAAAAAANAHsE5_vCGEFFu8nCbHvk5AV7y\" onChange={() => setDisableSubmit(false)} />\r\n            <Button type=\"submit\" onClick={()=>props.showProgress()} disabled={disableSubmit} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} onBlur={formik.handleBlur}>\r\n              Entrar\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link to=\"/fogot-password\" variant=\"body2\">\r\n                  Esqueci minha senha\r\n                </Link>\r\n              </Grid>\r\n              <Grid className={classes.link} item xs>\r\n                <Link to=\"/fogot-password\" variant=\"body2\">\r\n                  Criar conta\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n          <div hidden={props.progress}>\r\n            <CircularProgress/>\r\n          </div>\r\n          <MessageDialog/>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  openDialog: state.message.showMessage,\r\n  message: state.message.message,\r\n  progress: state.message.progress\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({auth, showMessage, hideMessage, showProgress}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { useState} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { showMessage, hideMessage, showProgress } from '../../store/messageReducer';\r\nimport MessageDialog from '../Dialog';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { fogot } from '../../store/authReducer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  link: {\r\n    fontSize: 15 \r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Fogot = (props) => {\r\n  const classes = useStyles();\r\n  const [disableSubmit, setDisableSubmit] = useState(false);\r\n\r\n  const formik = useFormik ({\r\n    initialValues: { email: ''},\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .email('Email invalido')\r\n        .required('Email obrigatório!'),\r\n      }),\r\n      onSubmit: values => {\r\n        props.fogot(values);\r\n      },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <MessageDialog/>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n        <Typography variant=\"h6\" noWrap>\r\n          SuggestInBox\r\n        </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Recuperar senha\r\n          </Typography> \r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"email\" \r\n              name=\"email\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Email\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.email}\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <div>\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <ReCAPTCHA sitekey=\"6LcdP8cZAAAAAMLbn_f2B0EDFSdtvkPQaEO1hx30\" onChange={() => setDisableSubmit(false)} />\r\n            <Button type=\"submit\" onClick={()=> props.showProgress()} disabled={disableSubmit} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} onBlur={formik.handleBlur}>\r\n              Enviar link para email\r\n            </Button>\r\n          </form>\r\n          <div hidden={props.progress}>\r\n            <CircularProgress/>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  openDialog: state.message.showMessage,\r\n  message: state.message.message,\r\n  progress: state.message.progress\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({fogot, showMessage, hideMessage, showProgress}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Fogot);","import React, { useState} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport history from '../../services/history';\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { showMessage, hideMessage } from '../../store/messageReducer';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { reset } from '../../store/authReducer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    maxWidth: 300,\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  link: {\r\n    fontSize: 15 \r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Reset = (props) => {\r\n  const classes = useStyles();\r\n  const [disableSubmit, setDisableSubmit] = useState(true);\r\n  const [progress, setProgress] = useState(true);\r\n  \r\n  const [ token ] = useState(window.location.href.split('/?$')[1]);\r\n  const [ email ] = useState(window.location.href.split('/?$')[2]);\r\n\r\n  const formik = useFormik ({\r\n    initialValues: { password: '', passwordConfirmation: ''},\r\n    validationSchema: Yup.object({\r\n      password: Yup.string()\r\n        .required('Senha obrigatória!')\r\n        .matches(/^(?=.*[A-Za-z])(?=.*[0-9])(?=.{6,})/,\r\n          \"A senha deve ter pelo menos uma letra maiuscula, um número e 6 caracteres!\"\r\n        )\r\n        .max(40, 'Senha muito longa'),\r\n      passwordConfirmation: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Senha não confere')\r\n        .required('Confirme a senha!')\r\n      }),\r\n      onSubmit: values => {\r\n        setProgress(false);\r\n        const user = {\r\n          password: values.password,\r\n          token: token,\r\n          email: email\r\n        }\r\n        props.reset(user);\r\n      },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n        <Typography variant=\"h6\" noWrap>\r\n          SuggestInBox\r\n        </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container className={classes.container} component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Recuperar senha\r\n          </Typography> \r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"password\" \r\n              name=\"password\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Nova senha\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.password}\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <div>\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <Typography className={classes.error}>{formik.errors.password}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"password\" \r\n              name=\"passwordConfirmation\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Confirme a senha\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.passwordConfirmation}\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <div>\r\n              {formik.touched.passwordConfirmation && formik.errors.passwordConfirmation ? (\r\n                <Typography className={classes.error}>{formik.errors.passwordConfirmation}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <ReCAPTCHA sitekey=\"6LcgjtIZAAAAAANAHsE5_vCGEFFu8nCbHvk5AV7y\" onChange={() => setDisableSubmit(false)} />\r\n            <Button type=\"submit\" disabled={disableSubmit} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} onBlur={formik.handleBlur}>\r\n              Salvar\r\n            </Button>\r\n          </form>\r\n\r\n          <Dialog open={props.openDialog} onClick={()=> setProgress(true)} onClose={props.hideMessage}>\r\n            <DialogTitle>\r\n              Atenção\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              {props.message}\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={props.hideMessage}>Fechar</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          <div hidden={progress}>\r\n            <CircularProgress/>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  openDialog: state.message.showMessage,\r\n  message: state.message.message\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({reset, showMessage, hideMessage}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Reset);","import React from 'react';\r\nimport { Route, Switch, Redirect, Router } from 'react-router-dom';\r\n\r\nimport Site from './Site';\r\nimport Client from './pages/Client';\r\nimport User from './pages/User';\r\nimport Suggest from './pages/User/Suggest';\r\nimport Adm from './pages/Adm';\r\nimport { Login, Fogot, Reset } from './components';\r\n\r\nimport { isAuthenticated } from './services/auth';\r\nimport history from './services/history';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      isAuthenticated() ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\r\n      )\r\n    }\r\n  />\r\n);\r\n \r\nconst Routes = () => (\r\n  <Router history={history}>\r\n    <Switch>\r\n      <Route exact path='/' component={Site}/>\r\n      <Route exact path='/login' component={Login}/>\r\n      <Route exact path='/fogot-password' component={Fogot}/>\r\n      <Route path='/reset-password' component={Reset}/>\r\n      <Route path='/client' component={Client}/>\r\n      <PrivateRoute path='/user' component={User}/>\r\n      <PrivateRoute path='/suggest' component={Suggest}/>\r\n      <PrivateRoute path='/adm' component={Adm}/>\r\n      <Route exact path=\"/not-found\" component={()=><h1>Página não encontrada 404</h1>}/>\r\n      <Redirect to=\"/not-found\" />\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nexport default Routes;","import React from 'react';\r\nimport Routes from './routes';\r\n\r\nconst App = () => (\r\n  <Routes/> \r\n)\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { clientReducer } from './clientReducer';\r\nimport { authReducer } from './authReducer';\r\nimport { admReducer } from './admReducer';\r\nimport { messageReducer } from './messageReducer';\r\n\r\nconst mainReducer = combineReducers({\r\n  adm: admReducer,\r\n  auth: authReducer,\r\n  message: messageReducer,\r\n  client: clientReducer,\r\n});\r\n\r\nexport const store = applyMiddleware(thunk)(createStore)(mainReducer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"MenuClient_wrap__1XHwg\",\"section\":\"MenuClient_section__yfvwT\",\"grid\":\"MenuClient_grid__EiHyG\",\"name\":\"MenuClient_name__NFQDW\",\"description\":\"MenuClient_description__3m5uL\",\"value\":\"MenuClient_value__1uJb-\",\"ten\":\"MenuClient_ten__2KMGT\"};"],"sourceRoot":""}