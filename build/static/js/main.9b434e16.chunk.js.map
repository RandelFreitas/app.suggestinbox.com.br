{"version":3,"sources":["Site/index.js","services/history.js","services/auth.js","services/api.js","store/clientReducer.js","pages/Client/MainClient/index.js","pages/Client/FormClient/index.js","pages/Client/MenuClient/index.js","pages/Client/AtentionClient/index.js","pages/Client/AboutClient/index.js","pages/Client/ConfirmClient/index.js","pages/Client/routesClient.js","pages/Client/index.js","store/userReducer.js","store/companyReducer.js","pages/User/Companies/index.js","pages/User/SetupUser/index.js","pages/User/SetupCompany/index.js","pages/User/routesUser.js","pages/User/index.js","store/suggestReducer.js","pages/User/Suggest/Suggests/index.js","store/callReducer.js","pages/User/Suggest/Call/index.js","pages/User/Suggest/Promo/index.js","store/menuReducer.js","pages/User/Suggest/Menu/index.js","pages/User/Suggest/Finances/index.js","pages/User/Suggest/Reservation/index.js","pages/User/Suggest/Delivery/index.js","pages/User/Suggest/routesUser.js","pages/User/Suggest/index.js","pages/Adm/routesAdm.js","pages/Adm/index.js","store/messageReducer.js","store/authReducer.js","components/Dialog/index.js","components/Login/index.js","components/Fogot/index.js","components/ResetPassword/index.js","routes.js","App.js","store/promoReducer.js","store/notificationReducer.js","store/index.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Site","classes","className","AppBar","position","Toolbar","Typography","variant","Button","component","Link","to","color","history","createBrowserHistory","logoutUser","localStorage","removeItem","push","api","axios","create","baseURL","interceptors","request","use","a","config","token","getItem","headers","Authorization","ACTIONS","INFOS","ADD","GET_MENU","INITIAL_STATE","infos","idTable","suggest","menu","sectionMenu","getInfo","idCompany","dispatch","get","then","Response","type","data","catch","error","console","log","submitSuggest","recommends","post","companyId","getMenu","addCall","call","table","ADD_CALL","margin","width","photo","marginBottom","marginTop","height","center","textAlign","button","hide","display","MainClient","props","CardMedia","image","name","slogan","_id","onClick","delivery","prototypes","PropTypes","array","isRequired","connect","state","client","bindActionCreators","background","span","namePhone","ident","maxWidth","unknown","fontSize","alignItems","minHeight","stars","padding","yesNo","NumberFormatCustom","inputRef","onChange","other","getInputRef","onValueChange","values","target","value","isNumericString","format","FormClient","useState","window","location","href","split","checked","setChecked","activeStep","setActiveStep","Set","skipped","setSkipped","steps","phone","opinion","setValues","handleChange","event","checkChange","onSubmit","preventDefault","Stepper","Step","StepLabel","step","TextField","label","disabled","id","inputProps","maxLength","InputProps","inputComponent","FormControlLabel","promo","size","control","Checkbox","Box","mb","borderColor","Rating","defaultValue","icon","emptyIcon","FormControl","RadioGroup","row","aria-label","Radio","labelPlacement","multiline","rows","rowsMax","getStepContent","buttons","prevActiveStep","length","newSkipped","has","delete","buttonEnd","MenuClient","useEffect","Paper","sort","b","index","map","section","TableContainer","key","Table","stickyHeader","TableHead","TableRow","TableCell","colSpan","align","TableBody","itemMenu","item","description","toLocaleString","style","currency","centerText","okText","AtentionClient","Grid","container","idUrl","localization","src","frameBorder","aria-hidden","tabIndex","touchAction","border","ConfirmClient","settings","finishPercent","onComplete","RoutesApp","exact","path","AboutClient","poth","img","links","labelLink","appBar","top","bottom","grow","list","justifyContent","content","Client","React","setState","toggleDrawer","open","role","onKeyDown","List","ListItem","ListItemIcon","ListItemText","primary","Divider","CssBaseline","IconButton","edge","Drawer","onClose","users","userById","userUp","infosUsers","getUserById","updateUser","user","put","companies","infosCompanies","companyById","companyAtv","listCompanies","page","nOfItems","docs","addCompany","company","getCompanyById","updateCompany","idUser","cleanCompany","atvCompany","palette","text","secondary","Companies","nOfPages","pages","setPage","mapCompanies","Fragment","md","sm","xs","Card","CardActionArea","CardContent","noWrap","address","city","CardActions","Pagination","count","float","media","card","grid","ZipFormatCustom","CpfFormatCustom","PhoneFormatCustom","SetupUser","initialValues","email","cpf","street","number","district","zip","obs","enableReinitialize","validationSchema","Yup","required","userUpdate","formik","handleSubmit","fullWidth","InputLabelProps","shrink","getFieldProps","touched","errors","qrCode","buttonQr","buttonPhoto","cardMain","sectionImg","qrCodeTable","nTable","CnpjFormatCustom","SetupCompany","setNTable","accept","input","multiple","htmlFor","rel","cnpj","companyUpdate","RoutesUser","toolbar","paddingRight","textDecoration","paddingTop","paddingBottom","profile","appBarSpacer","mixins","overflow","User","Badge","badgeContent","Container","suggests","suggestById","infosSuggests","listSuggest","limit","fromDate","toDate","favorite","outlier","createMuiTheme","main","filter","minWidth","marginLeft","buttonAtv","Suggest","setLimit","typeSuggests","setTypeSuggests","Date","selectedDateFrom","setSelectedDateFrom","now","selectedDateTo","setSelectedDateTo","check","suggestAtv","setSuggestAtv","FormGroup","Switch","atvSuggest","FormHelperText","Select","MenuItem","locale","ptBR","utils","DateFnsUtils","disableToolbar","invalidDateMessage","date","KeyboardButtonProps","hover","parseISO","createdAt","timeZone","precision","readOnly","favoriteUpdate","outlierUpdate","calls","infosCalls","callById","listCalls","destroyCall","tables","Call","setCall","atvCall","Promo","setPromo","atvPromo","LIST_MENU","ATV_MENU","BY_ID_MENU","infosMenu","getMenuById","formControl","paper","sectionName","visu","buttonEdit","paper2","tableHead","centerButton","Menu","menuById","edit","setEdit","setMenu","menuType","setMenuType","editMenu","atvMenu","displayEmpty","selectEmpty","endIcon","Finances","Reservation","reservation","setReservation","atvReservation","Delivery","setDelivery","atvDelivery","toolbarIcon","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","flexDirection","fixedHeight","avatar","backgroundColor","MainSuggest","setOpen","clsx","Avatar","hidden","parseFloat","toFixed","nStars","auth","RoutesAppSuggest","match","useRouteMatch","url","Adm","alt","message","showMessage","progress","hideMessage","showProgress","hideProgress","AUTH","FOGOT","login","setItem","JSON","stringify","fogot","reset","success","openDialog","Dialog","DialogTitle","DialogContent","DialogActions","link","submit","disableSubmit","setDisableSubmit","useFormik","password","max","onBlur","handleBlur","sitekey","CircularProgress","setProgress","passwordConfirmation","matches","oneOf","PrivateRoute","Component","rest","render","pathname","from","Routes","Login","Fogot","Reset","App","LIST_PROMO","BY_ID_PROMO","UPDATE_PROMO","ADD_PROMO","promoById","notifications","mainReducer","combineReducers","action","RESET","listUp","forEach","listUpOut","ADD_MENU","UPDATE_MENU","ATV_PROMO","notification","store","applyMiddleware","thunk","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9b434e16.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Site = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            SuggestInBox\r\n          </Typography>\r\n          <Button component={Link} to={`/login`} color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Site;","import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","import history from './history';\r\nexport const TOKEN_KEY = \"@token\";\r\nexport const INFOS = \"@infos\";\r\n\r\nexport const isAuthenticated = () => localStorage.getItem(TOKEN_KEY) !== null;\r\n\r\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\r\nexport const getInfos = () => localStorage.getItem(INFOS);\r\n\r\nexport const setInfosLocalStorage = (token, infos) => {\r\n  localStorage.setItem(TOKEN_KEY, token);\r\n  localStorage.setItem(INFOS, JSON.stringify(infos));\r\n};\r\nexport const setTokenLocalStorage = (token) => {\r\n  localStorage.setItem(TOKEN_KEY, token);\r\n};\r\nexport const logoutUser = () => {\r\n  localStorage.removeItem(TOKEN_KEY);\r\n  localStorage.removeItem(INFOS);\r\n  history.push('/login');\r\n};","import axios from \"axios\";\r\nimport { getToken } from \"./auth\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.suggestinbox.com.br\"\r\n  //baseURL: \"http://localhost:3001\"\r\n});\r\n\r\napi.interceptors.request.use(async config => {\r\n  const token = getToken();\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport default api;","import api from '../services/api';\r\nimport history from \"../services/history\";\r\n\r\nconst ACTIONS = {\r\n  INFOS: 'INFOS',\r\n  ADD: 'ADD_SUGGEST',\r\n  GET_MENU: 'GET_MENU'\r\n}\r\nconst INITIAL_STATE = {\r\n  infos:[],\r\n  idTable: [],\r\n  suggest:[],\r\n  menu: [],\r\n  sectionMenu: [],\r\n}\r\nexport const clientReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.INFOS:\r\n      return {...state, infos: action.infos, idTable: action.idTable}\r\n    case ACTIONS.GET_MENU:\r\n      return {...state, menu: action.menu, sectionMenu: action.sectionMenu}\r\n    case ACTIONS.ADD:\r\n      return {...state, suggest: action.suggest}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//OBTER INFOS DA COMPANIA\r\nexport const getInfo = (idCompany, idTable) => {\r\n  return dispatch => {\r\n    api.get(`/client/company/${idCompany}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.INFOS,\r\n        infos: Response.data,\r\n        idTable: idTable\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//ENVIAR SUGGEST\r\nexport const submitSuggest = (suggest) => {\r\n  if(suggest.recommends === 'y'){\r\n    suggest.recommends = true;\r\n  }else{\r\n    suggest.recommends = false;\r\n  }\r\n  return dispatch => {\r\n    api.post(`/client/company/${suggest.companyId}`, suggest)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ADD,\r\n        suggest: Response.data,\r\n      });\r\n    }, history.push(`/client/opiniao/sucesso/?${suggest.companyId}`))\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//LISTAR MENU\r\nexport const getMenu = (idCompany) => {\r\n  return dispatch => {\r\n    api.get(`/client/company/menu/${idCompany}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.GET_MENU,\r\n        menu: Response.data,\r\n        sectionMenu: Response.data.sectionMenu,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//ENVIAR CALL\r\nexport const addCall = (idCompany, idTable) => {\r\n  const call = {\r\n    table: idTable,\r\n    companyId: idCompany\r\n  };\r\n  console.log(call);\r\n  return dispatch => {\r\n    api.post(`/client/company/call/${idCompany}`, call)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ADD_CALL,\r\n      });\r\n    }) //history.push(`/suggest/call/success`))\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { addCall } from '../../../store/clientReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: 'auto',\r\n      width: '100%',\r\n    },\r\n  },\r\n  photo: {\r\n    margin: '0 auto',\r\n    marginBottom: '10px',\r\n    marginTop: '20px',\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    margin: 'auto',\r\n    marginBottom: '20px',\r\n  },\r\n  button: {\r\n    marginBottom: \"20px\"\r\n  },\r\n  hide: {\r\n    display: 'none'\r\n  }\r\n}));\r\n\r\nconst MainClient = (props) => {\r\n  const { infos, idTable } = props;\r\n  const classes = useStyles();\r\n\r\n  return(\r\n    <div className={classes.root}>\r\n      <CardMedia className={classes.photo} image=\"/assets/logoBar.png\" title=\"Contemplative Reptile\"/>\r\n      <div className={classes.center}>\r\n        <h3>{infos.name}</h3>\r\n        <p>{infos.slogan}</p>\r\n      </div>\r\n      <Button className={props.infos.suggest? classes.button : classes.hide} component={Link} to={`/client/opiniao/?${infos._id}?table=${idTable? idTable: 0}`} variant=\"contained\" color=\"primary\">\r\n        Dar opinião\r\n      </Button>\r\n      <Button className={props.infos.menu? classes.button : classes.hide} \r\n        component={Link} to={`/client/cardapio/?${infos._id}?table=${idTable? idTable: 0}`} \r\n        variant=\"contained\" color=\"primary\">\r\n        Cardápio online\r\n      </Button>\r\n      <Button className={props.infos.call && idTable != 0? classes.button : classes.hide} \r\n        onClick={() => props.addCall(infos._id, idTable)}\r\n        component={Link} to={`/client/atencao/?${infos._id}?table=${idTable? idTable: 0}`} \r\n        variant=\"contained\" color=\"primary\">\r\n        Chamar Garçom\r\n      </Button>\r\n      <Button className={props.infos.delivery? classes.button : classes.hide} \r\n        component={Link} to={`/client/opiniao/?${infos._id}?table=${idTable? idTable: 0}`} variant=\"contained\" color=\"primary\">\r\n        Delivery\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nMainClient.prototypes = {\r\n  infos: PropTypes.array.isRequired,\r\n  idTable: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos,\r\n  idTable: state.client.idTable\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({addCall}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainClient);","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { submitSuggest } from '../../../store/clientReducer'\r\nimport { connect } from 'react-redux';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport Star from '@material-ui/icons/Star';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: 'auto',\r\n      width: '100%',\r\n      background: '#fafafa',\r\n    },\r\n  },\r\n  name: {\r\n    textAlign: 'center',\r\n  },\r\n  span: {  \r\n    textAlign: 'center'\r\n  },\r\n  namePhone: {\r\n    width: '250px'\r\n  },\r\n  ident: {\r\n    marginTop: '10px',\r\n    maxWidth: \"200px\",\r\n  },\r\n  unknown: {\r\n    fontSize: \"12px\",\r\n  },\r\n  center: {\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    minHeight: '160px'\r\n  },\r\n  stars: {\r\n    padding: '28px',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    minHeight: '150px'\r\n  },\r\n  recommends: {\r\n    padding: '20px',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    minHeight: '150px'\r\n  },\r\n  yesNo: {\r\n    margin: '0 auto',\r\n  },\r\n  button: {\r\n    margin: '8px',\r\n    marginTop: '25px'\r\n  }\r\n}));\r\n\r\nconst NumberFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='(##) #########'\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst FormClient = (props) => {\r\n  const classes = useStyles();\r\n  const { infos } = props;\r\n  const [companyId] = useState(window.location.href.split('?')[1]);\r\n  const [checked, setChecked] = useState(false);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [skipped, setSkipped] = useState(new Set());\r\n  const steps = [\"\", \"\", \"\", \"\"];\r\n\r\n  const isStepSkipped = (step) => {\r\n    return skipped.has(step);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const [values, setValues] = useState({\r\n    name: '',\r\n    phone: '',\r\n    stars: 0,\r\n    opinion: '',\r\n    recommends: '',\r\n    companyId\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    switch(event.target.value){\r\n      case '1':\r\n        setValues({...values, [event.target.name]: 1 });\r\n        break;\r\n      case '2':\r\n        setValues({...values, [event.target.name]: 2 });\r\n        break;\r\n      case '3':\r\n        setValues({...values, [event.target.name]: 3 });\r\n        break;\r\n      case '4':\r\n        setValues({...values, [event.target.name]: 4 });\r\n        break;\r\n      case '5':\r\n        setValues({...values, [event.target.name]: 5 });\r\n        break;\r\n      default:\r\n        setValues({...values, [event.target.name]: event.target.value });\r\n        break;\r\n    }\r\n  };\r\n  const checkChange = (event) => {\r\n    setValues({name: '', phone: ''});\r\n    setChecked(event.target.checked);\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    props.submitSuggest(values);\r\n  }\r\n\r\n  function getStepContent(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <div className={classes.center}>\r\n            <TextField className={classes.namePhone}\r\n              label=\"Nome\"\r\n              disabled={checked}\r\n              value={values.name} \r\n              onChange={handleChange}\r\n              name=\"name\"\r\n              id=\"standard-basic\"\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <TextField className={classes.namePhone}\r\n              label=\"Telefone\"\r\n              disabled={checked}\r\n              value={values.phone}\r\n              onChange={handleChange}\r\n              name=\"phone\"\r\n              id=\"formatted-numberformat-input\"\r\n              InputProps={{inputComponent: NumberFormatCustom}}\r\n            />\r\n            <FormControlLabel className={classes.ident}\r\n              label={<Typography className={classes.unknown}>Desejo não me identificar{infos.promo? \" e não participar da promoção\": \"\"}</Typography>}\r\n              size=\"small\"\r\n              control={<Checkbox color=\"primary\" onChange={checkChange} name=\"checked\" />}\r\n            />\r\n          </div>\r\n        );\r\n      case 1:\r\n        return (\r\n          <div className={classes.center}>\r\n            <Box className={classes.stars} component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n              <Typography>Toque para classificar nosso estabelecimento</Typography>\r\n              <Rating\r\n                name=\"stars\"\r\n                onChange={handleChange}\r\n                defaultValue={0}\r\n                value={values.stars}\r\n                icon={<Star fontSize=\"large\" />}\r\n                emptyIcon={<StarBorderIcon fontSize=\"large\" />}\r\n              />\r\n            </Box>\r\n          </div>\r\n        );\r\n      case 2:\r\n        return (\r\n          <div className={classes.center}>\r\n            <FormControl className={classes.recommends} component=\"fieldset\">\r\n              <Typography>Nos recomendaria a um amigo?</Typography>\r\n              <RadioGroup className={classes.yesNo} onChange={handleChange} value={values.recommends} row aria-label=\"position\" name=\"recommends\">\r\n                <FormControlLabel\r\n                  value=\"y\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Sim\"\r\n                  name=\"recommends\"\r\n                  labelPlacement=\"bottom\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"n\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Não\"\r\n                  name=\"recommends\"\r\n                  labelPlacement=\"bottom\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </div>\r\n        );\r\n      case 3:\r\n        return (\r\n          <div className={classes.center}>\r\n            <TextField\r\n            label=\"Deixe sua opinião\"\r\n            multiline\r\n            rows={4}\r\n            rowsMax={7}\r\n            variant=\"outlined\"\r\n            value={values.opinion} \r\n            onChange={handleChange}\r\n            name=\"opinion\"\r\n            id=\"text-basic\" \r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return (\r\n          <div>\r\n            ok\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <h3 className={classes.name}>{props.infos.name}</h3>\r\n      <p className={classes.name}>{props.infos.slogan}</p>\r\n      <form className={classes.root} onSubmit={handleSubmit}>\r\n        <Stepper activeStep={activeStep}>\r\n          <Step>\r\n            <StepLabel/>\r\n          </Step>\r\n          <Step>\r\n            <StepLabel/>\r\n          </Step>\r\n          <Step>\r\n            <StepLabel/>\r\n          </Step>\r\n          <Step>\r\n            <StepLabel/>\r\n          </Step>\r\n        </Stepper>\r\n        <div className={classes.center}>\r\n          {getStepContent(activeStep)}\r\n          <div className={classes.buttons}>\r\n            <Button variant=\"contained\" disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n              Voltar\r\n            </Button>\r\n            {activeStep === steps.length? (\r\n              <Button className={classes.button} variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                Enviar\r\n              </Button>\r\n            ) : (\r\n              <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length -1 ? \"Enviar\" : \"Próximo\"}\r\n              </Button>)\r\n            }\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nFormClient.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({submitSuggest}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormClient);","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { getMenu, addCall } from '../../../store/clientReducer';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { TableHead } from '@material-ui/core';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: 'auto',\r\n      width: '100%',\r\n    },\r\n  },\r\n  photo: {\r\n    margin: '0 auto',\r\n    marginBottom: '10px',\r\n    marginTop: '20px',\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    margin: 'auto',\r\n    marginBottom: '20px',\r\n  },\r\n  button: {\r\n    marginTop: '20px',\r\n  },\r\n  buttonEnd: {\r\n    marginTop: '20px',\r\n    marginBottom: '50px'\r\n  },\r\n  hide: {\r\n    display: 'none'\r\n  }\r\n}));\r\n\r\nconst MenuClient = (props) =>{\r\n  const classes = useStyles();\r\n  const { menu, sectionMenu, infos, idTable } = props;\r\n\r\n  const [companyId] = useState(window.location.href.split('?')[1]);\r\n\r\n  useEffect(() => {\r\n    props.getMenu(companyId);\r\n  },[])\r\n\r\n  return(\r\n    <div className={classes.root}>\r\n      <div className={classes.center}>\r\n        <CardMedia className={classes.photo} image=\"/assets/logoBar.png\" title=\"Contemplative Reptile\"/>\r\n        <h3>{infos.name}</h3>\r\n        <p>{infos.slogan}</p>\r\n      </div>\r\n      <h3 className={classes.center}>{menu.name}</h3>\r\n      <Paper className={classes.menu}>\r\n        {sectionMenu.sort((a, b) => a.index > b.index? 1 : -1).map(section => {\r\n          return (\r\n            <TableContainer key={section._id}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell colSpan={2} align='center'>\r\n                      <h4>{section.name}</h4>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {section.itemMenu.sort((a, b) => a.index > b.index? 1 : -1).map(item => {\r\n                    return (\r\n                      <TableRow key={item._id}>\r\n                        <TableCell align='left'>\r\n                          <h5>{item.name}</h5> \r\n                          <h6><i>({item.description})</i></h6>\r\n                        </TableCell>\r\n                        <TableCell align='right'>{(item.value).toLocaleString(\"pt-BR\", {style: \"currency\", currency: \"BRL\"})}</TableCell>\r\n                      </TableRow>\r\n                    )\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          )})}\r\n      </Paper>\r\n        <Button className={classes.button}\r\n          component={Link} to={`/client/?${infos._id}?table=${idTable}`}\r\n          variant=\"contained\" color=\"primary\">\r\n          Voltar ao Menu\r\n        </Button>\r\n        <Button className={props.infos.call && idTable != 0? classes.buttonEnd : classes.hide} \r\n          onClick={() => props.addCall(infos._id, idTable)}\r\n          component={Link} to={`/client/atencao/?${infos._id}?table=${idTable? idTable: 0}`} \r\n          variant=\"contained\" color=\"primary\">\r\n          Chamar garçom\r\n        </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nMenuClient.prototypes = {\r\n  infos: PropTypes.array.isRequired,\r\n  idTable: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos,\r\n  idTable: state.client.idTable,\r\n  menu: state.client.menu,\r\n  sectionMenu: state.client.sectionMenu,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({getMenu, addCall}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuClient);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: 'auto',\r\n      width: '100%',\r\n    },\r\n  },\r\n  centerText: {\r\n    textAlign: 'center',\r\n  },\r\n  okText: {\r\n    textAlign: 'center',\r\n    margin: '15px'\r\n  },\r\n  button: {\r\n    marginTop: '15px'\r\n  },\r\n  photo: {\r\n    margin: '0 auto',\r\n    marginBottom: '10px',\r\n    marginTop: '20px',\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n}));\r\n\r\nconst AtentionClient = (props) => {\r\n  const classes = useStyles();\r\n  const { infos } = props;\r\n\r\n  return(\r\n    <Grid container className={classes.root}>\r\n      <CardMedia className={classes.photo} image=\"/assets/logoBar.png\" title=\"Contemplative Reptile\"/>\r\n      <h3 className={classes.centerText}>{props.infos.name}</h3>\r\n      <p className={classes.centerText}>{props.infos.slogan}</p>\r\n      <Typography className={classes.okText} variant=\"h5\">Chamado enviado!</Typography>\r\n      <Typography className={classes.centerText}>Chegaremos assim que possível.</Typography>\r\n      <Typography className={classes.centerText}>Enquanto isso você pode ver nosso cardápio online no botão abaixo:</Typography>\r\n      <Button className={classes.button} component={Link} to={`/client/cardapio/?${infos._id}?table=${infos.idTable? infos.idTable: 0}`} variant=\"contained\" color=\"primary\">\r\n        Cardápio online\r\n      </Button>\r\n      <Button className={classes.button} component={Link} to={`/client/?${infos._id}?table=${infos.idTable}`} variant=\"contained\" color=\"primary\">\r\n        Voltar ao Menu\r\n      </Button>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nAtentionClient.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nexport default connect(mapStateToProps)(AtentionClient);","import React, { useState, useEffect} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { getInfo } from '../../../store/clientReducer';\r\n\r\nconst AboutClient = (props) => {\r\n  const { infos } = props;\r\n  const [ idUrl ] = useState(window.location.href.split('?')[1]);\r\n\r\n  useEffect(()=> {\r\n    console.log(idUrl);\r\n  },[idUrl]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>{infos.name}</h3>\r\n      <p>{infos.history}</p>\r\n      <h4>Localização</h4>\r\n      <p>{infos.localization}</p>\r\n      <iframe title='mapa' src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d63695.95624351804!2d-38.560086091509596!3d-3.810670390317004!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x7c74e4a78a20565%3A0xce1304c86cef7da7!2sR.%20A%20-%20Passar%C3%A9%2C%20Fortaleza%20-%20CE%2C%2060810-670!5e0!3m2!1spt-BR!2sbr!4v1595268668224!5m2!1spt-BR!2sbr\" width=\"250\" height=\"200\" frameBorder=\"0\" aria-hidden=\"false\" tabIndex=\"0\"/>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({getInfo}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AboutClient);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport ScratchCard from 'react-scratchcard';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: 'auto',\r\n      width: '100%',\r\n      touchAction: 'none',\r\n    },\r\n  },\r\n  centerText: {\r\n    border: '2px solid',\r\n    textAlign: 'center',\r\n    padding: '55px 0'\r\n  },\r\n  okText: {\r\n    textAlign: 'center',\r\n    margin: '15px'\r\n  },\r\n  button: {\r\n    marginTop: '15px'\r\n  },\r\n  \r\n}));\r\n\r\nconst ConfirmClient = (props) => {\r\n  const classes = useStyles();\r\n  const { infos } = props;\r\n\r\n  const settings = {\r\n    width: 200,\r\n    height: 200,\r\n    image: \"/assets/scratch.jpg\",\r\n    finishPercent: 50,\r\n    onComplete: () => console.log('The card is now clear!')\r\n  };\r\n  \r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Typography className={classes.okText} variant=\"h5\">Obrigado pela sua opinião!</Typography>\r\n      <ScratchCard {...settings}>\r\n        <Typography className={classes.centerText}>\r\n          Tente novamente na sua próxima visita!\r\n        </Typography>\r\n      </ScratchCard>\r\n      <Button className={classes.button} component={Link} to={`/client/?${infos._id}?table=${infos.idTable? infos.idTable: 0}`} variant=\"contained\" color=\"primary\">\r\n        Voltar ao início\r\n      </Button>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nConfirmClient.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nexport default connect(mapStateToProps)(ConfirmClient);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport MainClient from './MainClient';\r\nimport FormClient from './FormClient';\r\nimport MenuClient from './MenuClient';\r\nimport AtentionClient from './AtentionClient';\r\nimport AboutClient from './AboutClient';\r\nimport ConfirmClient from './ConfirmClient';\r\n\r\nconst RoutesApp = () => (\r\n  <Switch>\r\n    <Route exact path='/client' component={MainClient}/>\r\n    <Route exact path='/client/opiniao' component={FormClient}/>\r\n    <Route exact path='/client/opiniao/sucesso' component={ConfirmClient}/>\r\n    <Route exact path='/client/atencao' component={AtentionClient}/>\r\n    <Route exact path='/client/sobrenos' component={AboutClient}/>\r\n    <Route exact poth='/client/cardapio' component={MenuClient}/>\r\n  </Switch>\r\n)\r\n\r\nexport default RoutesApp;","import React, { useState, useEffect} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport RoutesClient from './routesClient';\r\nimport { getInfo } from '../../store/clientReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport MarkunreadMailboxIcon from '@material-ui/icons/MarkunreadMailbox';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  img:{\r\n    padding: '10px'\r\n  },\r\n  menu: {\r\n    height: '25px'\r\n  },\r\n  links:{\r\n    margin: 'auto'\r\n  },\r\n  labelLink:{\r\n    padding: '10px',\r\n  },\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  list: {\r\n    width: 200,\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  content: {\r\n    margin: 'auto',\r\n    padding: '30px',\r\n    maxWidth: '450px',\r\n  },\r\n}));\r\n\r\nconst Client = (props) => {\r\n  const { infos } = props;\r\n  const [ idCompany ] = useState(window.location.href.split('?')[1]);\r\n  const [ idTable ] = useState(window.location.href.split('table=')[1]);\r\n\r\n  const [state, setState] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    props.getInfo(idCompany, idTable);\r\n  },[idCompany]);\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    setState(open);\r\n  };\r\n\r\n  const list = (\r\n    <div className={classes.list} onClick={toggleDrawer(false)} role=\"presentation\" onKeyDown={toggleDrawer(false)}>\r\n      <List>\r\n        <ListItem button component={Link} to={`/client/?${infos._id}?table=${idTable? idTable: 0}`}>\r\n          <ListItemIcon><HomeIcon/></ListItemIcon>\r\n          <ListItemText primary='Início'/>\r\n        </ListItem>\r\n        <Divider/>\r\n        <ListItem button component={Link} to={`/client/sobrenos/?${infos._id}?table=${idTable? idTable: 0}`}>\r\n          <ListItemIcon><InfoIcon/></ListItemIcon>\r\n          <ListItemText primary='Sobre nós'/>\r\n        </ListItem>\r\n        <Divider/>\r\n        <ListItem button component={Link} to='/'>\r\n          <ListItemIcon><MarkunreadMailboxIcon/></ListItemIcon>\r\n          <ListItemText primary='Sobre o SuggestInBox' />\r\n        </ListItem>\r\n        <Divider/>\r\n      </List>\r\n    </div>\r\n  )\r\n  return(\r\n    <div>\r\n      <CssBaseline />\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton onClick={toggleDrawer(true)} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Drawer open={state} onClose={toggleDrawer(false)}>\r\n            {list}\r\n          </Drawer>\r\n          <Typography variant=\"button\" className={classes.links}>\r\n            <Button color=\"inherit\" component={Link} to={`/client/?${infos._id}?table=${idTable? idTable: 0}`}>SuggestInBox</Button>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.content}>\r\n        <RoutesClient/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nClient.prototypes = {\r\n  infos: PropTypes.array.isRequired,\r\n  idTable: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos,\r\n  idTable: state.client.idTable\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({getInfo}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Client);","import api from '../services/api';\r\nimport history from '../services/history';\r\n\r\nconst ACTIONS = {\r\n  LIST_USERS: 'LISTUSERS',\r\n  BY_ID_USER: 'BYIDUSER',\r\n  UPDATE_USER: 'UPDATEUSER',\r\n}\r\nconst INITIAL_STATE = {\r\n  users: [],\r\n  userById: [],\r\n  userUp: [],\r\n  infosUsers: [],\r\n}\r\nexport const userReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.BY_ID_USER:\r\n      return {...state, userById: action.userById}\r\n    case ACTIONS.UPDATE_USER:\r\n      return {...state, user: action.user}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//LISTAR TODOS USUÁRIOS\r\nexport const listUser = (page, nOfItems) => {\r\n  return dispatch => {\r\n    api.get(`/adm/user?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_USERS,\r\n        users: docs,\r\n        infosUsers: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//GET BY ID USER\r\nexport const getUserById = (id) => {\r\n  return dispatch => {\r\n    api.get(`/adm/user/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_USER,\r\n        userById: Response.data,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n//UPDATE USER\r\nexport const updateUser = (user, id) => {\r\n  return dispatch => {\r\n    api.put(`/adm/user/${id}`, user)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_USER,\r\n        userUp: Response.data\r\n      })\r\n    }, history.push(`/user/?${id}?page=1&limit=25`))\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}","import api from '../services/api';\r\nimport history from '../services/history';\r\n\r\nconst ACTIONS = {\r\n  LIST_COMPANIES: 'LISTCOMPANIES',\r\n  BY_ID_COMPANY: 'BYIDCOMPANY',\r\n  UPDATE_COMPANY: 'UPDATECOMPANY',\r\n  ATV_COMPANY: 'ATVCOMPANY',\r\n  CLEAN_COMPANY: 'CLEANCOMPANY',\r\n  ADD_COMPANY: 'ADDCOMPANY',\r\n}\r\nconst INITIAL_STATE = {\r\n  companies: [],\r\n  infosCompanies: [],\r\n  companyById: [],\r\n  companyAtv: [],\r\n}\r\nexport const companyReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.LIST_COMPANIES:\r\n      return {...state, companies: action.companies, infosCompanies: action.infosCompanies}\r\n    case ACTIONS.ADD_COMPANY:\r\n      return {...state}\r\n    case ACTIONS.BY_ID_COMPANY:\r\n      return {...state, companyById: action.companyById}\r\n    case ACTIONS.UPDATE_COMPANY:\r\n      return state;\r\n    case ACTIONS.ATV_COMPANY:\r\n      return {...state}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//LISTAR COMPANIAS\r\nexport const listCompanies = (page, nOfItems) => {\r\n  return dispatch => {\r\n    api.get(`/adm/company?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_COMPANIES,\r\n        companies: docs,\r\n        infosCompanies: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//ADICIONAR COMPANY\r\nexport const addCompany = (company, id) => {\r\n  return dispatch => {\r\n    api.post('/adm/company', company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ADD_COMPANY,\r\n      });\r\n    }, history.push(`/user/?${id}??page=1&limit=25`))\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//GET BY ID COMPANY\r\nexport const getCompanyById = (id) => {\r\n  return dispatch => {\r\n    api.get(`/adm/company/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_COMPANY,\r\n        companyById: Response.data,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n//UPDATE COMPANY\r\nexport const updateCompany = (company, id, idUser) => {\r\n  return dispatch => {\r\n    api.put(`/adm/company/${id}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_COMPANY,\r\n      })\r\n    }, history.push(`/suggest/?${idUser}/?${id}?page=1&limit=25`))\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n//LIMPAR CAMPOS COMPANY\r\nexport const cleanCompany = () => {\r\n  return {\r\n    type: ACTIONS.CLEAN_COMPANY,\r\n  }\r\n}\r\n//ATIVAR / DESATIVAR: MENU, PROMO, CALL\r\nexport const atvCompany = (company) => {\r\n  return dispatch => {\r\n    api.put(`/adm/company/${company._id}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ATV_COMPANY,\r\n      })\r\n    })\r\n  }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { listCompanies } from '../../../store/companyReducer' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  item: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  center: {\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    margin: '20px'\r\n  },\r\n  button: {\r\n    margin: '15px'\r\n  }\r\n}));\r\n\r\nconst Companies = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { companies, infosCompanies } = props;\r\n  const [ idUrl ] = useState(window.location.href.split('/?')[1].split('?')[0]);\r\n  const nOfPages = infosCompanies.pages;\r\n  const [page, setPage] = useState(1);\r\n  const [nOfItems, setNoOfItems] = useState(10);\r\n\r\n  useEffect(() => {\r\n    props.listCompanies(page, nOfItems);\r\n  },[page, nOfItems]);\r\n\r\n  const handleChange=(event, value)=>{\r\n    setPage(value);\r\n  }\r\n  const handleNofItems=(event)=>{\r\n    setNoOfItems(event.target.value);\r\n    setPage(1);\r\n  }\r\n\r\n  const mapCompanies = (\r\n    <React.Fragment>\r\n      {companies.map( company => {\r\n          return(\r\n            <Grid key={company._id} item md={4} sm={6} xs={12}>\r\n              <div className={classes.item}>  \r\n                <Card>\r\n                  <CardActionArea component={Link} to={`/suggest/?${idUrl}/?${company._id}?page=${page}&limit=${nOfItems}`}>\r\n                    <CardContent>\r\n                      <Typography noWrap variant=\"h5\" component=\"h2\">\r\n                        {company.name}\r\n                      </Typography>\r\n                      <Typography noWrap variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {company.address.city} - {company.address.state}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                  <CardActions className={classes.center}>\r\n                    <Button component={Link} to={`/suggest/?${idUrl}/?${company._id}?page=${page}&limit=${nOfItems}`} variant=\"contained\" color=\"primary\">\r\n                      Gerenciar\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </div>\r\n            </Grid>\r\n          )})\r\n        }\r\n    </React.Fragment>\r\n  )\r\n\r\n  return(\r\n    <div className={classes.root}>\r\n      <Typography className={classes.center} variant=\"h5\" component=\"h2\">Companhias</Typography>\r\n      <Button className={classes.button} component={Link} to={`/user/setup-company/?${idUrl}`} variant=\"contained\" color=\"primary\">\r\n        Adicionar Companhia\r\n      </Button>\r\n      <Grid container item xs={12} spacing={3}>\r\n        {mapCompanies}\r\n      </Grid>\r\n      <Grid className={classes.center} container item xs={12} spacing={3}>\r\n        <Box component=\"span\">\r\n          <Pagination\r\n            count={nOfPages}\r\n            page={page}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nCompanies.prototypes = {\r\n  companies: PropTypes.array.isRequired,\r\n  infosCompanies: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companies: state.company.companies,\r\n  infosCompanies: state.company.infosCompanies,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({listCompanies}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Companies);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport NumberFormat from 'react-number-format';\r\nimport * as Yup from 'yup';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider, Button, TextField, Card, Typography, Grid} from '@material-ui/core';\r\nimport { getUserById, updateUser } from '../../../store/userReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 8\r\n  },\r\n  button: {\r\n    float: 'right',\r\n    margin: 8,\r\n  },\r\n  media: {\r\n    margin: 'auto',\r\n    width: 140,\r\n    height: 140,\r\n  },\r\n  card: {\r\n    marginBottom: 10,\r\n  },\r\n  center: {\r\n    margin: 'auto',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  grid: {\r\n    justifyContent: 'center',\r\n    padding: 8\r\n  }\r\n}));\r\n\r\nconst ZipFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='#####-###'\r\n    />\r\n  );\r\n}\r\n\r\nZipFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst CpfFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='###.###.###-##'\r\n    />\r\n  );\r\n}\r\n\r\nCpfFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst PhoneFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='(##) #########'\r\n    />\r\n  );\r\n}\r\n\r\nPhoneFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst SetupUser = (props) => {\r\n  const classes = useStyles();\r\n  const { userById } = props;\r\n\r\n  const [idUrl] = useState(window.location.href.split('/?')[1]);\r\n  const defaultFormShape = {\r\n    email: '',\r\n    name: '',\r\n    cpf: '',\r\n    phone: '',\r\n    address: {\r\n      state: '',\r\n      city: '',\r\n      street: '',\r\n      number: '',\r\n      type: '',\r\n      district: '',\r\n      zip: '',\r\n      obs: ''\r\n    },\r\n  };\r\n\r\n  useEffect(()=>{\r\n    props.getUserById(idUrl);\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <Formik \r\n        initialValues= {userById._id? userById : defaultFormShape}\r\n        enableReinitialize\r\n        validationSchema={Yup.object({\r\n          email: Yup.string()\r\n            .required('Email obrigatório!'),\r\n          name: Yup.string()\r\n            .required('Nome obrigatório!'),\r\n          cpf: Yup.string()\r\n            .required('Cpf obrigatório!'),\r\n          phone: Yup.string()\r\n            .required('Telefone obrigatório!'),\r\n          address: Yup.object({\r\n            zip: Yup.string()\r\n              .required('Cep obrigatorio!'),\r\n            street: Yup.string()\r\n              .required('Rua obrigatorio!'),\r\n            district: Yup.string()\r\n              .required('Bairro obrigatorio!'),\r\n            city: Yup.string()\r\n              .required('Cidade obrigatorio!'),\r\n            state: Yup.string()\r\n              .required('Estado obrigatorio!'),\r\n            number: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n            type: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n            obs: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n          }),\r\n        })}\r\n\r\n        onSubmit={(values) => {\r\n          const { name, email, phone, cpf } = values;\r\n          const { state, city, street, number, type, district, zip, obs } = values.address;\r\n          const address = {state, city, street, number, type, district, zip, obs};\r\n          const userUpdate = { name, email, cpf, phone, address };\r\n          props.updateUser(userUpdate, userById._id);\r\n        }}>\r\n        {formik => (\r\n          <Card >\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <p style={{margin: 10}}>Dados do Administrador</p>\r\n              <Grid container>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={5}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Nome:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"name\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('name')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.name && formik.errors.name ? (\r\n                        <Typography className={classes.error}>{formik.errors.name}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"CPF:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"cpf\"\r\n                      InputProps={{inputComponent: CpfFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('cpf')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.cpf && formik.errors.cpf ? (\r\n                        <Typography className={classes.error}>{formik.errors.cpf}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Email:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"email\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('email')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.email && formik.errors.email ? (\r\n                        <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Telefone:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"phone\"\r\n                      InputProps={{inputComponent: PhoneFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('phone')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.phone && formik.errors.phone ? (\r\n                        <Typography className={classes.error}>{formik.errors.phone}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{margin: 10}}>Endereço</p>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cep:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.zip\"\r\n                      InputProps={{inputComponent: ZipFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.zip')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.zip}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Rua:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.street\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.street')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.street}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Bairro:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.district\"\r\n                      inputProps={{ maxLength: 40 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.district')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.district}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cidade:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.city\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.city')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.city}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Estado:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.state\"\r\n                      inputProps={{ maxLength: 30 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.state')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.state}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Número:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.number\"\r\n                      inputProps={{ maxLength: 6 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.number')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.number}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Tipo:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.type\"\r\n                      inputProps={{ maxLength: 20 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.type')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.type}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Complemento:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.obs\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.obs')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.obs}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Divider/>\r\n                  <Button type=\"submit\" className={classes.button} variant=\"contained\" color=\"primary\">\r\n                    Atualizar\r\n                  </Button>\r\n                  <Button className={classes.button} component={Link} to={`/user/?${userById._id}?page=1&limit=25`} variant=\"outlined\" color=\"primary\">\r\n                    Cancelar\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nSetupUser.prototypes = {\r\n  userById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userById: state.user.userById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ getUserById, updateUser }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupUser);"," import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport NumberFormat from 'react-number-format';\r\nimport * as Yup from 'yup';\r\nimport QRCode from 'qrcode.react';\r\n\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider, Button, TextField, Card, Typography, Grid} from '@material-ui/core';\r\nimport { addCompany, getCompanyById, updateCompany, cleanCompany } from '../../../store/companyReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 8\r\n  },\r\n  qrCode:{\r\n    textAlign: 'center',\r\n    maxWidth: '200px',\r\n    margin: '15px'\r\n  },\r\n  button: {\r\n    float: 'right',\r\n    margin: 8,\r\n  },\r\n  buttonQr: {\r\n    margin: '5px',\r\n    padding: '5px',\r\n    fontSize: '12px',\r\n    width: '90px'\r\n  },\r\n  buttonPhoto:{\r\n    margin: '5px',\r\n    padding: '5px',\r\n    fontSize: '12px',\r\n    width: '110px'\r\n  },\r\n  media: {\r\n    margin: 'auto',\r\n    width: 140,\r\n    height: 140,\r\n  },\r\n  cardMain: {\r\n    marginBottom: '10px'\r\n  },\r\n  card: {\r\n    marginBottom: 10,\r\n  },\r\n  sectionImg: {\r\n    justifyContent: 'center'\r\n  },\r\n  photo: {\r\n    marginBottom: '5px',\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  center: {\r\n    margin: 'auto',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  grid: {\r\n    justifyContent: 'center',\r\n    padding: 8\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  qrCodeTable: {\r\n    textAlign: 'center',\r\n    maxWidth: '300px',\r\n    margin: '15px'\r\n  },\r\n  nTable: {\r\n    width: '90px'\r\n  },\r\n  title: {\r\n    margin: '15px'\r\n  }\r\n}));\r\n\r\nconst ZipFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='#####-###'\r\n    />\r\n  );\r\n}\r\n\r\nZipFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst CnpjFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='##.###.###/####-##'\r\n    />\r\n  );\r\n}\r\n\r\nCnpjFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst PhoneFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='(##) #########'\r\n    />\r\n  );\r\n}\r\n\r\nPhoneFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst SetupCompany = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n\r\n  const [idUser] = useState(window.location.href.split('/?')[1]);\r\n  const [idCompany] = useState(window.location.href.split('/?')[2]);\r\n\r\n  const defaultFormShape = {\r\n    name: '',\r\n    cnpj: '',\r\n    slogan: '',\r\n    history: '',\r\n    localization: '',\r\n    email: '',\r\n    phone: '',\r\n    address: {\r\n      state: '',\r\n      city: '',\r\n      street: '',\r\n      number: '',\r\n      type: '',\r\n      district: '',\r\n      zip: '',\r\n      obs: ''\r\n    },\r\n  };\r\n  \r\n  const [ nTable, setNTable ] = useState(0);\r\n  const tableChange = (event) => {\r\n    setNTable(event.target.value);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(idCompany){\r\n      props.getCompanyById(idCompany);\r\n    }else{\r\n      props.cleanCompany();\r\n    }\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.cardMain}>\r\n        <Grid container className={classes.sectionImg}>\r\n          <Grid className={classes.qrCode} item>\r\n            <CardMedia\r\n              className={classes.photo}\r\n              image=\"/assets/logoBar.png\"\r\n              title=\"Contemplative Reptile\"\r\n            />\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              style={{ display: 'none' }}\r\n              id=\"raised-button-file\"\r\n              multiple\r\n              type=\"file\"\r\n            />\r\n            <Typography className={classes.title}>Foto perfil</Typography>\r\n            <label htmlFor=\"raised-button-file\">\r\n              <Button className={classes.buttonPhoto} variant=\"outlined\" component=\"span\" color=\"primary\">\r\n                Alterar Foto\r\n              </Button>\r\n            </label>\r\n          </Grid>\r\n          <Grid className={idCompany?  classes.qrCode : classes.hide} item>\r\n            <QRCode value={`https://app.suggestinbox.com.br/client/?${idCompany}?table=0`}/>\r\n            <Typography className={classes.title}>QR Code geral</Typography>\r\n            <Button rel=\"noopener noreferrer\" className={classes.buttonQr} target=\"_blank\" href={`http://app.suggestinbox.com.br/client/?${idCompany}?table=0`} variant=\"contained\" color=\"primary\">\r\n              Ver Perfil\r\n            </Button>\r\n            <Button rel=\"noopener noreferrer\" className={classes.buttonQr} target=\"_blank\" href={`http://app.suggestinbox.com.br/client/?${idCompany}?table=0`} variant=\"outlined\" color=\"primary\">\r\n              Imprimir\r\n            </Button>\r\n          </Grid>\r\n          <Grid className={idCompany?  classes.qrCodeTable : classes.hide} item>\r\n            <QRCode value={`https://app.suggestinbox.com.br/client/?${idCompany}?table=${nTable}`}/>\r\n            <Typography className={classes.title}>QR Code por mesa</Typography>\r\n            <TextField\r\n              className={classes.nTable}\r\n              id=\"standard-number\"\r\n              label=\"Nº da mesa\"\r\n              type=\"number\"\r\n              value={nTable}\r\n              onChange={tableChange}\r\n              size=\"small\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <Button rel=\"noopener noreferrer\" className={classes.buttonQr} target=\"_blank\" href={`http://app.suggestinbox.com.br/client/?${idCompany}?table=${nTable}`} variant=\"contained\" color=\"primary\">\r\n              Ver Perfil\r\n            </Button>\r\n            <Button rel=\"noopener noreferrer\" className={classes.buttonQr} target=\"_blank\" href={`localhost:3000/client/?${idCompany}?table=0`} variant=\"outlined\" color=\"primary\">\r\n              Imprimir\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n\r\n      <Formik \r\n        initialValues= {idCompany? companyById : defaultFormShape}\r\n        enableReinitialize\r\n        validationSchema={Yup.object({\r\n          name: Yup.string()\r\n            .required('Nome obrigatório!'),\r\n          cnpj: Yup.string()\r\n            .required('Cnpj obrigatório!'),\r\n          slogan: Yup.string()\r\n            .required('Slogan obrigatório'),\r\n          history: Yup.string()\r\n            .required('História obrigatória'),\r\n          localization: Yup.string()\r\n            .required('Localização obrigatória'),\r\n          email: Yup.string()\r\n            .required('Email obrigatório!'),\r\n          phone: Yup.string()\r\n            .required('Telefone obrigatório!'),\r\n          address: Yup.object({\r\n            zip: Yup.string()\r\n              .required('Cep obrigatorio!'),\r\n            street: Yup.string()\r\n              .required('Rua obrigatorio!'),\r\n            district: Yup.string()\r\n              .required('Bairro obrigatorio!'),\r\n            city: Yup.string()\r\n              .required('Cidade obrigatorio!'),\r\n            state: Yup.string()\r\n              .required('Estado obrigatorio!'),\r\n            number: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n          }),\r\n        })}\r\n\r\n        onSubmit={(values) => {\r\n          if(companyById._id){\r\n            const { name, slogan, history, localization, email, cnpj, phone } = values;\r\n            const { state, city, street, number, type, district, zip, obs } = values.address;\r\n            const address = {state, city, street, number, type, district, zip, obs};\r\n            const companyUpdate = { name, slogan, history, localization, email, cnpj, phone, address };\r\n            props.updateCompany(companyUpdate, companyById._id, idUser);\r\n          }else{\r\n            props.addCompany(values, idUser);\r\n          }\r\n        }}>\r\n        {formik => (\r\n          <Card >\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <p style={{margin: 10}}>Dados da companhia</p>\r\n              <Grid container>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Nome:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"name\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('name')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.name && formik.errors.name ? (\r\n                        <Typography className={classes.error}>{formik.errors.name}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Slogan:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"slogan\"\r\n                      inputProps={{ maxLength: 50 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('slogan')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.slogan && formik.errors.slogan ? (\r\n                        <Typography className={classes.error}>{formik.errors.slogan}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"História:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"history\"\r\n                      inputProps={{ maxLength: 250 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('history')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.history && formik.errors.history ? (\r\n                        <Typography className={classes.error}>{formik.errors.history}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Localização:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"localization\"\r\n                      inputProps={{ maxLength: 250 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('localization')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.localization && formik.errors.localization ? (\r\n                        <Typography className={classes.error}>{formik.errors.localization}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Email:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"email\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('email')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.email && formik.errors.email ? (\r\n                        <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Telefone:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"phone\"\r\n                      InputProps={{inputComponent: PhoneFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('phone')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.phone && formik.errors.phone ? (\r\n                        <Typography className={classes.error}>{formik.errors.phone}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"CNPJ:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"cnpj\"\r\n                      InputProps={{inputComponent: CnpjFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('cnpj')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.cnpj && formik.errors.cnpj ? (\r\n                        <Typography className={classes.error}>{formik.errors.cnpj}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{margin: 10}}>Endereço</p>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cep:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.zip\"\r\n                      InputProps={{inputComponent: ZipFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.zip')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.zip}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Rua:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.street\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.street')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.street}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Bairro:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.district\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.district')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.district}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cidade:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.city\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.city')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.city}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Estado:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.state\"\r\n                      inputProps={{ maxLength: 30 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.state')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.state}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Número:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.number\"\r\n                      inputProps={{ maxLength: 10 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.number')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.number}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Divider/>\r\n                  <Button type=\"submit\" className={classes.button} variant=\"contained\" color=\"primary\">\r\n                    {idCompany? 'Atualizar': 'Salvar'}\r\n                  </Button>\r\n                  <Button className={classes.button} component={Link} \r\n                    to={idCompany? `/suggest/?${idUser}/?${idCompany}?page=1&limit=25` : `/user/?${idUser}?page=1&limit=25`} variant=\"outlined\" color=\"primary\">\r\n                    Cancelar\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nSetupCompany.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ addCompany, getCompanyById, updateCompany, cleanCompany }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupCompany);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Companies from './Companies';\r\nimport SetupUser from './SetupUser';\r\nimport SetupCompany from './SetupCompany';\r\n\r\nconst RoutesUser = () => {\r\n  return(\r\n    <Switch>\r\n      <Route exact path='/user' component={Companies}/>\r\n      <Route exact path='/user/setup' component={SetupUser}/>\r\n      <Route exact path='/user/setup-company' component={SetupCompany}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default RoutesUser;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from '../../services/auth';\r\nimport { getUserById } from '../../store/userReducer';\r\nimport PropTypes from 'prop-types';\r\nimport RoutesUser from './routesUser';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textDecoration: 'none',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  profile: {\r\n    paddingRight: 17\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n}));\r\n\r\nconst User = (props) => {\r\n  const classes = useStyles();\r\n  const [ idUser ] = useState(window.location.href.split('?')[1].split('?')[0]);\r\n  const { userById } = props;\r\n  \r\n  useEffect(() => {\r\n    props.getUserById(idUser);\r\n  },[]);\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\">\r\n          <Toolbar className={classes.toolbar}>\r\n            <Typography component={Link} to={`/user/?${userById._id}?page=1&limit=25`} variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              SuggestInBox\r\n            </Typography>\r\n            <div className={classes.profile}>{userById.name}</div>\r\n            <IconButton aria-label=\"Ver notificações\" color=\"inherit\">\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton component={Link} to={`/user/setup/?${userById._id}`} color=\"inherit\">\r\n              <SettingsIcon/>\r\n            </IconButton>\r\n            <IconButton onClick={()=>logoutUser()} color=\"inherit\">\r\n              <ExitToAppIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid>\r\n              <RoutesUser />\r\n            </Grid>\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUser.prototypes = {\r\n  userById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userById: state.user.userById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({getUserById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(User);","import api from '../services/api';\r\n\r\nconst ACTIONS = {\r\n  LIST_SUGGESTS: 'LISTSUGGESTS',\r\n  FAVORITE: 'FAVORITE',\r\n  TOFILE: 'TOFILE',\r\n}\r\nconst INITIAL_STATE = {\r\n  suggests: [],\r\n  suggestById: [],\r\n  infosSuggests: [],\r\n}\r\n\r\nexport const suggestReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    //*********************SUGGESTS*********************\r\n    case ACTIONS.LIST_SUGGESTS:\r\n      return {...state, suggests: action.suggests, infosSuggests: action.infosSuggests}\r\n    case ACTIONS.FAVORITE:\r\n      const listUp = [...state.suggests]\r\n      listUp.forEach(suggest => {\r\n        if(suggest._id === action._id){\r\n          suggest.favorite = true;\r\n        }\r\n      })\r\n      return {...state, suggests: listUp}\r\n    case ACTIONS.TOFILE:\r\n      const listUpOut = [...state.suggests]\r\n      listUpOut.forEach(suggest => {\r\n        if(suggest._id === action._id){\r\n          suggest.outlier = true;\r\n        }\r\n      })\r\n      return {...state, suggests: listUpOut}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//*******************************************SUGGESTS*********************************************\r\n//LISTAR SUGGESTS\r\nexport const listSuggest = (idUrl, page, limit, type, fromDate, toDate) => {\r\n  return dispatch => {\r\n    api.get(`/adm/all-suggest/${idUrl}?page=${page}&limit=${limit}&type=${type}&fromDate=${fromDate}&toDate=${toDate}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_SUGGESTS,\r\n        suggests: docs,\r\n        infosSuggests: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//FAVORITAR SUGGEST\r\nexport const favorite = (suggest) => {\r\n  return dispatch => {\r\n    api.put(`/adm/suggest/${suggest._id}`, suggest )\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.FAVORITE,\r\n        id: suggest._id\r\n      })\r\n    })\r\n  }\r\n}\r\n//ARQUIVAR SUGGEST\r\nexport const outlier = (suggest) => {\r\n  return dispatch => {\r\n    api.put(`/adm/suggest/${suggest._id}`, suggest )\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.TOFILE,\r\n        id: suggest._id\r\n      })\r\n    })\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { listSuggest, favorite, outlier } from '../../../../store/suggestReducer';\r\nimport { atvCompany } from '../../../../store/companyReducer';\r\nimport { parseISO } from 'date-fns';\r\nimport { format } from 'date-fns-tz';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport { ptBR } from \"date-fns/locale\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Box from '@material-ui/core/Box';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport { IconButton } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    secondary:{\r\n      main: '#FFB701'\r\n    }\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  center: {\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    margin: '20px'\r\n  },\r\n  filter: {\r\n    minWidth: '110px',\r\n    marginLeft: '9px'\r\n  },\r\n  data: {\r\n    margin: '9px',\r\n    maxWidth: '140px'\r\n  },\r\n  hide: {\r\n    display: 'none'\r\n  },\r\n  buttonAtv: {\r\n    margin: '15px 0'\r\n  }\r\n}));\r\n\r\nconst Suggest = (props) => {\r\n  const classes = useStyles();\r\n  const [ idCompany ] = useState(window.location.href.split('/?')[2].split('?')[0]);\r\n  const {suggests, infosSuggests, companyById} = props;\r\n  const pages = infosSuggests.pages;\r\n  \r\n  const [ page, setPage ] = useState(1);\r\n  const [ limit, setLimit ] = useState(25);\r\n  const [typeSuggests, setTypeSuggests] = useState('All');\r\n  const [selectedDateFrom, setSelectedDateFrom] = useState(new Date('2020-01-01T00:00:00'));\r\n  const [selectedDateTo, setSelectedDateTo] = useState(Date.now);\r\n\r\n  const [ suggestAtv, setSuggestAtv ] = useState({\r\n    check: companyById.suggest\r\n  });\r\n  \r\n  useEffect(() => {\r\n    props.listSuggest(idCompany, page, limit, typeSuggests, selectedDateFrom, selectedDateTo);\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    setSuggestAtv({check: companyById.suggest});\r\n  },[companyById.suggest])\r\n\r\n  const handleChangePage=(event, value)=>{\r\n    setPage(value);\r\n    props.listSuggest(idCompany, value, limit, typeSuggests, selectedDateFrom, selectedDateTo);\r\n  }\r\n  const handleLimit=(event)=>{\r\n    setLimit(event.target.value);\r\n    props.listSuggest(idCompany, page, event.target.value, typeSuggests, selectedDateFrom, selectedDateTo);\r\n    setPage(1);\r\n  }\r\n  const handleChangSuggest=(event)=>{\r\n    setTypeSuggests(event.target.value);\r\n    props.listSuggest(idCompany, page, limit, event.target.value, selectedDateFrom, selectedDateTo);\r\n  }\r\n  const handleDateChangeFrom = (date) => {\r\n    setSelectedDateFrom(date);\r\n    console.log(date);\r\n  };\r\n  const handleDateChangeTo = (date) => {\r\n    setSelectedDateTo(date);\r\n    props.listSuggest(idCompany, page, limit, typeSuggests, selectedDateFrom, date);\r\n  };\r\n\r\n  //FAV E ARQ\r\n  const favoriteUpdate = (suggest) => {\r\n    if(suggest.favorite){\r\n      suggest.favorite = false;\r\n      return props.favorite(suggest)\r\n    }else{\r\n      suggest.favorite = true;\r\n      return props.favorite(suggest)\r\n    }\r\n  }\r\n  const outlierUpdate = (suggest) => {\r\n    if(suggest.outlier){\r\n      suggest.outlier = false;\r\n      return props.outlier(suggest)\r\n    }else{\r\n      suggest.outlier = true;\r\n      return props.outlier(suggest)\r\n    }\r\n  }\r\n\r\n  const atvSuggest = (companyById) => {\r\n    if(companyById.suggest){\r\n      companyById.suggest = false;\r\n      setSuggestAtv({check: companyById.suggest});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.suggest = true;\r\n      setSuggestAtv({check: companyById.suggest});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Sugestões</Typography>\r\n       <div>\r\n        <Grid container>\r\n          <Grid item className={classes.buttonAtv}>\r\n            <FormGroup row>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={suggestAtv.check? suggestAtv.check: false}\r\n                  onClick={()=>atvSuggest(companyById)}\r\n                  name=\"checkedA\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Ativar/Desativar\"\r\n            />\r\n            </FormGroup>\r\n          </Grid>\r\n        </Grid>\r\n        <FormControl>\r\n          <FormHelperText>Número por página:</FormHelperText>\r\n          <Select\r\n            value={limit}\r\n            onChange={handleLimit}\r\n            inputProps={{ 'aria-label': 'Without label' }}>\r\n            <MenuItem value={25}>25</MenuItem>\r\n            <MenuItem value={50}>50</MenuItem>\r\n            <MenuItem value={75}>75</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.filter}>\r\n          <FormHelperText>Filtrar por:</FormHelperText>\r\n          <Select\r\n            value={typeSuggests}\r\n            onChange={handleChangSuggest}\r\n            inputProps={{ 'aria-label': 'Without label' }}>\r\n            <MenuItem value={'All'}>Todas</MenuItem>\r\n            <MenuItem value={'Fav'}>Favoritas</MenuItem>\r\n            <MenuItem value={'Arq'}>Arquivadas</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <MuiPickersUtilsProvider locale={ptBR} utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            className={classes.data}\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"normal\"\r\n            id=\"date-picker-inline\"\r\n            label=\"De\"\r\n            size=\"small\"\r\n            invalidDateMessage=\"Data inválida.\"\r\n            value={selectedDateFrom}\r\n            onChange={handleDateChangeFrom}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n          <KeyboardDatePicker\r\n            className={classes.data}\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Até\"\r\n            size=\"small\"\r\n            invalidDateMessage=\"Data inválida.\"\r\n            value={selectedDateTo}\r\n            onChange={handleDateChangeTo}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </div>\r\n      <Paper>\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align='center'>Data</TableCell>\r\n                <TableCell align='center'>Nome</TableCell>\r\n                <TableCell align='center'>Telefone</TableCell>\r\n                <TableCell align='center'>Avaliação</TableCell>\r\n                <TableCell align='center'>Recomenda</TableCell>\r\n                <TableCell align='center'>Opinião</TableCell>\r\n                <TableCell align='center'/>\r\n                <TableCell align='center'/>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <MuiThemeProvider theme={theme}>\r\n                { suggests.map( suggest => {\r\n                  return (\r\n                    <TableRow hover key={suggest._id} role=\"checkbox\" tabIndex={-1}>\r\n                      <TableCell align='center'>{format(parseISO(suggest.createdAt), 'dd/MM/yyyy HH:mm', {timeZone: 'America/Sao_Paulo'} )}</TableCell>\r\n                      <TableCell align='center'>{suggest.name}</TableCell>\r\n                      <TableCell align='center'>{suggest.phone}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <Rating name=\"read-only\" size=\"small\" value={suggest.stars? suggest.stars: 0} precision={0.5} readOnly/>\r\n                      </TableCell>\r\n                      <TableCell align='center'>{suggest.recommends? (<CheckIcon/>) : (<CloseIcon/>)}</TableCell>\r\n                      <TableCell align='center'>{suggest.opinion}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <IconButton onClick={() => favoriteUpdate(suggest)}>\r\n                          {suggest.favorite? (<StarIcon color='secondary'/>):(<StarBorderIcon/>)}\r\n                        </IconButton>\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <IconButton onClick={() => outlierUpdate(suggest)}>\r\n                          {suggest.outlier? (<DeleteOutlineIcon color=\"disabled\"/>):(<DeleteOutlineIcon/>)}\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )\r\n                })}\r\n              </MuiThemeProvider>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Grid className={classes.center} container item xs={12} spacing={3}>\r\n          <Box component=\"span\">\r\n            <Pagination\r\n              count={pages}\r\n              page={page}\r\n              onChange={handleChangePage}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nSuggest.prototypes = {\r\n  suggest: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n  suggests: state.suggest.suggests,\r\n  infosSuggests: state.suggest.infosSuggests,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({listSuggest, favorite, outlier, atvCompany}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Suggest);","import api from '../services/api';\r\nimport history from '../services/history';\r\n\r\nconst ACTIONS = {\r\n  LIST_CALLS: 'LISTCALLS',\r\n  BY_ID_CALL: 'BYIDCALL',\r\n  ADD_CALL: 'ADDCALL',\r\n  UPDATE_CALL: 'UPDATECALL',\r\n  DELETE_CALL: 'DELETECALL',\r\n}\r\nconst INITIAL_STATE = {\r\n  calls: [],\r\n  infosCalls: [],\r\n  callById: [],\r\n}\r\nexport const callReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.LIST_CALLS:\r\n      return {...state, calls: action.calls, infosCalls: action.infosCalls}\r\n    case ACTIONS.ADD_CALL:\r\n      return {...state}\r\n    case ACTIONS.BY_ID_CALL:\r\n      return {...state, callById: action.callById}\r\n    case ACTIONS.UPDATE_CALL:\r\n      return state;\r\n    case ACTIONS.DELETE_CALL:\r\n      const id = action.id;\r\n      const calls = state.calls.filter( call => call._id !== id);\r\n      console.log(calls);\r\n      return {...state, calls: calls}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//LISTAR CALLS\r\nexport const listCalls = (page, nOfItems) => {\r\n  return dispatch => {\r\n    api.get(`/adm/all-calls?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_CALLS,\r\n        calls: docs,\r\n        infosCalls: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//GET BY ID CALL\r\nexport const getCallById = (id) => {\r\n  return dispatch => {\r\n    api.get(`/adm/call/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_CALL,\r\n        callById: Response.data,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n//UPDATE CALL\r\nexport const updateCall = (company, id, idUser) => {\r\n  return dispatch => {\r\n    api.put(`/adm/call/${id}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_CALL,\r\n      })\r\n    }, history.push(`/suggest/call/?${idUser}/?${id}?page=1&limit=25`))\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n//DELETE CALL\r\nexport const destroyCall = (id) => {\r\n  return dispatch => {\r\n    api.delete(`/adm/call/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.DELETE_CALL,\r\n        id: id\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { listCalls, destroyCall } from '../../../../store/callReducer';\r\nimport { atvCompany } from '../../../../store/companyReducer';\r\nimport { parseISO } from 'date-fns';\r\nimport { format } from 'date-fns-tz';\r\n\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst useStyles = makeStyles(() =>({\r\n  tables: {\r\n    marginBottom: '25px',\r\n  },\r\n  center: {\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    margin: '20px'\r\n  },\r\n  hide: {\r\n    display: 'none'\r\n  },\r\n  buttonAtv: {\r\n    margin: '15px 0'\r\n  }\r\n}));\r\n\r\nconst Call = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById, calls } = props;\r\n\r\n  const [ call, setCall ] = useState({\r\n    check: companyById.call\r\n  });\r\n\r\n  useEffect(() => {\r\n    props.listCalls(1, 25)\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    setCall({check: companyById.call});\r\n  },[companyById.call])\r\n\r\n  const atvCall = (companyById) => {\r\n    if(companyById.call){\r\n      companyById.call = false;\r\n      setCall({check: companyById.call});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.call = true;\r\n      setCall({check: companyById.call});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Chamadas</Typography>\r\n      <Grid container>\r\n        <Grid item className={classes.buttonAtv}>\r\n          <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={call.check? call.check : false}\r\n                onClick={()=>atvCall(companyById)}\r\n                name=\"checkedA\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Ativar/Desativar\"\r\n          />\r\n          </FormGroup>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid className={classes.tables} item>\r\n          <Typography variant=\"h6\">Chamados por mesa</Typography>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Paper>\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align='center'>Local</TableCell>\r\n                <TableCell align='center'>Hora</TableCell>\r\n                <TableCell align='center'></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              { calls.map( call => {\r\n                return (\r\n                  <TableRow hover key={call.createdAt} role=\"checkbox\" tabIndex={-1}>\r\n                    <TableCell align='center'>Mesa {call.table}</TableCell>\r\n                    <TableCell align='center'>{format(parseISO(call.createdAt), 'dd/MM/yyyy HH:mm', {timeZone: 'America/Sao_Paulo'} )}</TableCell>\r\n                    <TableCell align='center'>\r\n                      <Button className={classes.button} onClick={()=>props.destroyCall(call._id)} variant=\"contained\" color=\"primary\">\r\n                        Atendida\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nCall.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n  calls: state.call.calls,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({listCalls, atvCompany, destroyCall}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Call);","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { atvCompany, getCompanyById } from '../../../../store/companyReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() =>({\r\n  button: {\r\n    marginTop: '25px',\r\n  },\r\n  hide: {\r\n    display: 'none'\r\n  },\r\n  buttonAtv: {\r\n    margin: '15px 0'\r\n  }\r\n}));\r\n\r\nconst Promo = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n  \r\n  const [ promo, setPromo ] = useState({\r\n    check: companyById.promo\r\n  });\r\n\r\n  useEffect(() => {\r\n    setPromo({check: companyById.promo});\r\n  },[companyById.promo])\r\n\r\n  const atvPromo = (companyById) => {\r\n    if(companyById.promo){\r\n      companyById.promo = false;\r\n      setPromo({check: companyById.promo});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.promo = true;\r\n      setPromo({check: companyById.promo});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Promoção</Typography>\r\n      <Grid container>\r\n        <Grid item className={classes.buttonAtv}>\r\n          <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={promo.check? promo.check : false}\r\n                onClick={()=>atvPromo(companyById)}\r\n                name=\"checkedA\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Ativar/Desativar\"\r\n          />\r\n          </FormGroup>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nPromo.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({atvCompany, getCompanyById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Promo);","import api from '../services/api';\r\n\r\nconst ACTIONS = {\r\n  LIST_MENU: 'LIST_MENU',\r\n  ATV_MENU: 'ATV_MENU',\r\n  BY_ID_MENU: 'BY_ID_MENU'\r\n}\r\nconst INITIAL_STATE = {\r\n  menu: [],\r\n  sectionMenu: [],\r\n  infosMenu: [],\r\n}\r\nexport const menuReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.LIST_MENU:\r\n      return {...state, menu: action.menu, infosMenu: action.infosMenu}\r\n    case ACTIONS.ADD_MENU:\r\n      return {...state, menu: action.menu}\r\n    case ACTIONS.BY_ID_MENU:\r\n      return {...state, menu: action.menu, sectionMenu: action.sectionMenu}\r\n    case ACTIONS.UPDATE_MENU:\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//LISTAR TODOS OS MENUS\r\nexport const getMenu = (idCompany) => {\r\n  return dispatch => {\r\n    api.get(`/adm/menu/${idCompany}`)\r\n    .then(Response => {\r\n      const { docs } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_MENU,\r\n        menu: docs,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//ADICIONAR MENU\r\nexport const addMenu = (menu, id) => {\r\n  return dispatch => {\r\n    api.post('/adm/menu', menu)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ADD_MENU,\r\n        menu: Response.data,\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//GET BY ID MENU\r\nexport const getMenuById = (idCompany) => {\r\n  return dispatch => {\r\n    api.get(`/adm/menu/${idCompany}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_MENU,\r\n        menu: Response.data,\r\n        sectionMenu: Response.data.sectionMenu,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n//UPDATE COMPANY\r\nexport const updateMenu = (menu, id, idUser) => {\r\n  return dispatch => {\r\n    api.put(`/adm/menu/${id}`, menu)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_MENU,\r\n        //company: Response.data\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { atvCompany, getCompanyById } from '../../../../store/companyReducer';\r\nimport { getMenuById } from '../../../../store/menuReducer';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(() =>({\r\n  button: {\r\n    marginTop: '25px',\r\n  },\r\n  formControl: {\r\n    padding: '15px 0'\r\n  },\r\n  buttonAtv: {\r\n    margin: '15px 0'\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    margin: '20px 0',\r\n    padding: '15px'\r\n  },\r\n  name: {\r\n    maxWidth: '200px'\r\n  },\r\n  sectionName: {\r\n    margin: 'auto',\r\n    textAlign: 'start',\r\n  },\r\n  visu: {\r\n    margin: '15px 0'\r\n  },\r\n  buttonEdit: {\r\n    margin: '15px'\r\n  },\r\n  hide: {\r\n    display: 'none'\r\n  },\r\n  paper2: {\r\n    marginBottom: '50px'\r\n  },\r\n  tableHead: {\r\n    background: 'black'\r\n  },\r\n  centerButton: {\r\n    textAlign: 'end',\r\n    margin: 'auto',\r\n  }\r\n}));\r\n\r\nconst Menu = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById, menuById, sectionMenu } = props;\r\n  const [ idCompany ] = useState(window.location.href.split('?')[2]);\r\n  const [ edit, setEdit ] = useState(true);\r\n  const [ menu, setMenu ] = useState({\r\n    check: companyById.menu\r\n  });\r\n\r\n  useEffect(() => {\r\n    props.getMenuById(idCompany);\r\n    setMenu({check: companyById.menu});\r\n  },[companyById.menu])\r\n\r\n  const atvMenu = (companyById) => {\r\n    if(companyById.menu){\r\n      companyById.menu = false;\r\n      setMenu({check: companyById.menu});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.menu = true;\r\n      setMenu({check: companyById.menu});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  const [menuType, setMenuType] = useState(1);\r\n\r\n  const handleChange = (event) => {\r\n    setMenuType(event.target.value);\r\n  };\r\n\r\n  const editMenu = () => {\r\n    if(edit){\r\n      setEdit(false);\r\n    }else{\r\n      setEdit(true);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Cardápio / Catálogo</Typography>\r\n      <Grid container>\r\n        <Grid item className={classes.buttonAtv}>\r\n          <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={menu.check? menu.check : false}\r\n                onClick={()=>atvMenu(companyById)}\r\n                name=\"checkedA\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Ativar/Desativar\"\r\n          />\r\n          </FormGroup>\r\n        </Grid>\r\n      </Grid>\r\n      <FormControl>\r\n        <FormHelperText>Tipo:</FormHelperText>\r\n        <Select\r\n          value={menuType}\r\n          onChange={handleChange}\r\n          displayEmpty\r\n          className={classes.selectEmpty}\r\n          inputProps={{ 'aria-label': 'Without label' }}\r\n        >\r\n          <MenuItem value={1}>Cardápio</MenuItem>\r\n          <MenuItem value={2}>Catálogo</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <Paper className={classes.paper}>\r\n        <Grid container>\r\n          <Grid className={classes.sectionName} item xs={2}>\r\n            <Typography>Seção:</Typography>\r\n          </Grid>\r\n          <Grid className={classes.center} item xs={6}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Nome:\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              name=\"name\"\r\n              inputProps={{ maxLength: 70 }}\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.centerButton} item xs={4}>\r\n            <Button variant=\"contained\" color=\"primary\" endIcon={<AddCircleOutlineIcon/>}>\r\n              Adicionar\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <Grid container>\r\n          <Grid className={classes.sectionName} item xs={1}>\r\n            <Typography>Item:</Typography>\r\n          </Grid>\r\n          <Grid className={classes.center} item xs={5}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Nome:\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              name=\"name\"\r\n              inputProps={{ maxLength: 70 }}\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Descrição:\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              name=\"Descrition\"\r\n              inputProps={{ maxLength: 70 }}\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.center} item xs={1}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Valor:\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              name=\"value\"\r\n              inputProps={{ maxLength: 70 }}\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.center} item xs={2}>\r\n            <FormControl>\r\n              <FormHelperText>Seção do item:</FormHelperText>\r\n              <Select\r\n                value={menuType}\r\n                onChange={handleChange}\r\n                displayEmpty\r\n                className={classes.selectEmpty}\r\n                inputProps={{ 'aria-label': 'Without label' }}\r\n              >\r\n              {sectionMenu.map(section => {\r\n                return (\r\n                  <MenuItem key={section._id} value={section.name}>{section.name}</MenuItem>\r\n                )\r\n              })}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid className={classes.centerButton} item xs={2}>\r\n            <Button variant=\"contained\" color=\"primary\" endIcon={<AddCircleOutlineIcon/>}>\r\n              Adicionar\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n\r\n      <div className={classes.center}> \r\n        <Button rel=\"noopener noreferrer\" className={edit? classes.buttonEdit : classes.hide} \r\n          target=\"_blank\" href={`http://app.suggestinbox.com.br/client/?${idCompany}?table=1`} \r\n          variant=\"contained\" color=\"primary\"\r\n          endIcon={<VisibilityIcon/>}>\r\n          Vizualiar\r\n        </Button>\r\n        <Button className={classes.buttonEdit} onClick={()=> editMenu()} variant=\"outlined\" color={edit? \"default\" : \"secondary\"} endIcon={edit? <EditIcon/> : <CancelIcon/> }>\r\n          {edit? \"Editar\":\"Cancelar\"}\r\n        </Button>\r\n        <Button className={edit? classes.hide: classes.buttonEdit} onClick={()=> editMenu()} variant=\"contained\" color=\"primary\" endIcon={<SaveIcon />}>\r\n          Salvar\r\n        </Button>\r\n      </div>\r\n\r\n      <Paper className={classes.paper2}>\r\n        {sectionMenu.sort((a, b) => a.index > b.index? 1 : -1).map(section => {\r\n          return (\r\n            <TableContainer key={section._id}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell colSpan={3} align='left'>\r\n                      <TextField\r\n                        disabled={edit}\r\n                        variant=\"outlined\"\r\n                        label=\"Seção:\"\r\n                        margin=\"dense\"\r\n                        value={section.name}\r\n                        fullWidth\r\n                        name=\"Descrition\"\r\n                        inputProps={{ maxLength: 70 }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                      /> \r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <FormControl>\r\n                        <FormHelperText>Posição:</FormHelperText>\r\n                        <Select\r\n                          disabled={edit}\r\n                          value={menuType}\r\n                          onChange={handleChange}\r\n                          displayEmpty\r\n                          className={classes.selectEmpty}\r\n                          inputProps={{ 'aria-label': 'Without label' }}\r\n                        >\r\n                          <MenuItem value={1}>1</MenuItem>\r\n                          <MenuItem value={2}>2</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Button disabled={edit} variant=\"outlined\" color=\"primary\">\r\n                        <DeleteIcon/>\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {section.itemMenu.sort((a, b) => a.index > b.index? 1 : -1).map(item => {\r\n                    return (\r\n                      <TableRow key={item._id}>\r\n                        <TableCell align='left'>\r\n                          <TextField\r\n                            disabled={edit}\r\n                            variant=\"outlined\"\r\n                            label=\"Nome:\"\r\n                            margin=\"dense\"\r\n                            value={item.name}\r\n                            fullWidth\r\n                            name=\"Descrition\"\r\n                            inputProps={{ maxLength: 70 }}\r\n                            InputLabelProps={{ shrink: true }}\r\n                          />\r\n                          <TextField\r\n                            disabled={edit}\r\n                            variant=\"outlined\"\r\n                            label=\"Descrição:\"\r\n                            margin=\"dense\"\r\n                            value={item.description}\r\n                            fullWidth\r\n                            name=\"Descrition\"\r\n                            inputProps={{ maxLength: 70 }}\r\n                            InputLabelProps={{ shrink: true }}\r\n                          /> \r\n                        </TableCell>\r\n                        <TableCell align='right'>\r\n                        <TextField\r\n                          disabled={edit}\r\n                          variant=\"outlined\"\r\n                          label=\"Valor:\"\r\n                          margin=\"dense\"\r\n                          value={(item.value).toLocaleString(\"pt-BR\", {style: \"currency\", currency: \"BRL\"})}\r\n                          fullWidth\r\n                          name=\"Descrition\"\r\n                          inputProps={{ maxLength: 70 }}\r\n                          InputLabelProps={{ shrink: true }}\r\n                        /> \r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <FormControl>\r\n                            <FormHelperText>Seção:</FormHelperText>\r\n                            <Select\r\n                              disabled={edit}\r\n                              value={menuType}\r\n                              onChange={handleChange}\r\n                              displayEmpty\r\n                              className={classes.selectEmpty}\r\n                              inputProps={{ 'aria-label': 'Without label' }}\r\n                            >\r\n                              <MenuItem value={1}>Comida</MenuItem>\r\n                              <MenuItem value={2}>Bebida</MenuItem>\r\n                            </Select>\r\n                          </FormControl>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <FormControl>\r\n                            <FormHelperText>Posição:</FormHelperText>\r\n                            <Select\r\n                              disabled={edit}\r\n                              value={menuType}\r\n                              onChange={handleChange}\r\n                              displayEmpty\r\n                              className={classes.selectEmpty}\r\n                              inputProps={{ 'aria-label': 'Without label' }}\r\n                            >\r\n                              <MenuItem value={1}>1</MenuItem>\r\n                              <MenuItem value={2}>2</MenuItem>\r\n                            </Select>\r\n                          </FormControl>\r\n                        </TableCell>\r\n                        <TableCell align='right'>\r\n                          <Button disabled={edit} variant=\"outlined\" color=\"primary\">\r\n                            <DeleteIcon/>\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          )})}\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nMenu.prototypes = {\r\n  companyById: PropTypes.array.isRequired,\r\n  sectionMenu: PropTypes.array.isRequired,\r\n  menuById: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n  menuById: state.menu.menu,\r\n  sectionMenu: state.menu.sectionMenu,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({atvCompany, getCompanyById, getMenuById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Menu);","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst Finances = () => {\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Financeiro</Typography>\r\n      <Grid container>\r\n        <Grid item>\r\n          Financeiro em desenvolvimento\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Finances;","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { atvCompany, getCompanyById } from '../../../../store/companyReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  button: {\r\n    marginTop: '25px',\r\n  },\r\n  buttonAtv: {\r\n    margin: '15px 0'\r\n  }\r\n}));\r\n\r\nconst Reservation = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n  const [ reservation, setReservation ] = useState({\r\n    check: companyById.reservation\r\n  });\r\n\r\n  useEffect(() => {\r\n    setReservation({check: companyById.reservation});\r\n  },[companyById.reservation])\r\n\r\n  const atvReservation = (companyById) => {\r\n    if(companyById.reservation){\r\n      companyById.reservation = false;\r\n      setReservation({check: companyById.reservation});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.reservation = true;\r\n      setReservation({check: companyById.reservation});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Reservas</Typography>\r\n      <Grid container>\r\n        <Grid item className={classes.buttonAtv}>\r\n          <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={reservation.check? reservation.check : false}\r\n                onClick={()=>atvReservation(companyById)}\r\n                name=\"checkedA\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Ativar/Desativar\"\r\n          />\r\n          </FormGroup>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nReservation.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({atvCompany, getCompanyById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Reservation);","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { atvCompany, getCompanyById } from '../../../../store/companyReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  button: {\r\n    marginTop: '25px',\r\n  },\r\n  buttonAtv: {\r\n    margin: '15px 0'\r\n  }\r\n}));\r\n\r\nconst Delivery = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n  const [ delivery, setDelivery ] = useState({\r\n    check: companyById.delivery\r\n  });\r\n\r\n  useEffect(() => {\r\n    setDelivery({check: companyById.delivery});\r\n  },[companyById.delivery])\r\n\r\n  const atvDelivery = (companyById) => {\r\n    if(companyById.delivery){\r\n      companyById.delivery = false;\r\n      setDelivery({check: companyById.delivery});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.delivery = true;\r\n      setDelivery({check: companyById.delivery});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Delivery</Typography>\r\n      <Grid container>\r\n        <Grid item className={classes.buttonAtv}>\r\n          <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={delivery.check? delivery.check : false}\r\n                onClick={()=>atvDelivery(companyById)}\r\n                name=\"checkedA\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Ativar/Desativar\"\r\n          />\r\n          </FormGroup>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nDelivery.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({atvCompany, getCompanyById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Delivery);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Suggest from './Suggests';\r\nimport Call from './Call';\r\nimport Promo from './Promo';\r\nimport Menu from './Menu';\r\nimport Finances from './Finances';\r\nimport Reservation from './Reservation';\r\nimport Delivery from './Delivery';\r\nimport SetupCompany from '../SetupCompany';\r\n\r\nconst RoutesUser = () => {\r\n  return(\r\n    <Switch>\r\n      <Route exact path='/suggest' component={Suggest}/>\r\n      <Route exact path='/suggest/call' component={Call}/>\r\n      <Route exact path='/suggest/promo' component={Promo}/>\r\n      <Route exact path='/suggest/cardapio' component={Menu}/>\r\n      <Route exact path='/suggest/finances' component={Finances}/>\r\n      <Route exact path='/suggest/reservation' component={Reservation}/>\r\n      <Route exact path='/suggest/delivery' component={Delivery}/>\r\n      <Route exact path='/suggest/setup-company' component={SetupCompany}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default RoutesUser;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from '../../../services/auth';\r\nimport { getCompanyById } from '../../../store/companyReducer';\r\nimport { getUserById } from '../../../store/userReducer';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MoodIcon from '@material-ui/icons/Mood';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport AlarmOnIcon from '@material-ui/icons/AlarmOn';\r\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\r\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nimport RoutesUser from './routesUser';\r\n\r\nconst drawerWidth = 210;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textDecoration: 'none',\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  icon: {\r\n    textDecoration: 'none',\r\n    color: 'white',\r\n  },\r\n  profile: {\r\n    paddingRight: 17\r\n  },\r\n  avatar: {\r\n    fontSize: '12px',\r\n    width: '22px',\r\n    height: '22px',\r\n    backgroundColor: '#f50057',\r\n    textAlign: 'center',\r\n  },\r\n  photo: {\r\n    margin: '0 auto',\r\n    marginBottom: '5px',\r\n    marginTop: '20px',\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  card:{\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nconst MainSuggest = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n  const { stars, name } = companyById;\r\n  const [ idUser ] = useState(window.location.href.split('/?')[1]);\r\n  const [ idCompany ] = useState(window.location.href.split('/?')[2].split('?')[0]);\r\n\r\n  useEffect(() => {\r\n    if(idCompany){\r\n      props.getCompanyById(idCompany);\r\n    }\r\n  },[]);\r\n\r\n  const [open, setOpen] = useState(true );\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component={Link} to={`/suggest/?${idUser}/?${idCompany}?page=1&limit=25`} variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                SuggestInBox\r\n            </Typography>\r\n            <IconButton component={Link} to={`/suggest/setup-company/?${idUser}/?${idCompany}`} color=\"inherit\">\r\n              <Avatar className={classes.avatar}>{name? name.split('', 1): \"...\"}</Avatar>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton component={Link} to={`/suggest/setup-company/?${idUser}/?${idCompany}`} color=\"inherit\">\r\n              <SettingsIcon/>\r\n            </IconButton>\r\n            <IconButton onClick={()=>logoutUser()} color=\"inherit\">\r\n              <ExitToAppIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer variant=\"permanent\" classes={{paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)}} open={open}>\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            <div>      \r\n              <Card className={classes.card}>\r\n                <div hidden={!open}>\r\n                  <CardMedia className={classes.photo} image=\"/assets/logoBar.png\" title=\"Contemplative Reptile\"/>\r\n                  <Typography>{companyById.name}</Typography>\r\n                </div>\r\n                <CardContent hidden={!open}>\r\n                  <Typography variant=\"h3\" color=\"textSecondary\" component=\"p\">\r\n                    {companyById.stars? parseFloat(companyById.stars).toFixed(1): \"...\"}\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\" component=\"p\">\r\n                    {companyById.nStars} classificações\r\n                  </Typography>\r\n                  <Rating name=\"read-only\" value={stars? stars: 0} precision={0.5} readOnly/>\r\n                </CardContent>\r\n              </Card>\r\n              <ListItem button component={Link} to={`/suggest/?${idUser}/?${idCompany}?page=1&limit=25`}>\r\n                <ListItemIcon>\r\n                  <EqualizerIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Sugestões\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/call/?${idUser}/?${idCompany}?page=1&limit=25`}>\r\n                <ListItemIcon>\r\n                  <EmojiPeopleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Chamadas\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/promo/?${idUser}/?${idCompany}`}>\r\n                <ListItemIcon>\r\n                  <MoodIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Promoções\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/cardapio/?${idUser}/?${idCompany}`}>\r\n                <ListItemIcon>\r\n                  <MenuBookIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Cardapio\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/delivery/?${idUser}/?${idCompany}`}>\r\n                <ListItemIcon>\r\n                  <MotorcycleIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Delivery\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/reservation/?${idUser}/?${idCompany}`}>\r\n                <ListItemIcon>\r\n                  <AlarmOnIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Reservas\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/finances/?${idUser}/?${idCompany}`}>\r\n                <ListItemIcon>\r\n                  <AttachMoneyIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Financeiro\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/user/?${idUser}?page=1&limit=25`}>\r\n                <ListItemIcon>\r\n                  <BusinessIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Companhias\" />\r\n              </ListItem>\r\n            </div>\r\n          </List>\r\n        <Divider />\r\n        </Drawer>\r\n\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid>\r\n              <RoutesUser />\r\n            </Grid>\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMainSuggest.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.auth.infos,\r\n  companyById: state.company.companyById,\r\n  userById: state.user.userById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({getCompanyById, getUserById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainSuggest);","import React from 'react';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\n\r\nconst RoutesAppSuggest = () => {\r\n  const match = useRouteMatch();\r\n\r\n  return(\r\n    <Switch>\r\n      <Route exact path={`${match.url}`} component={()=><h1>SUGGEST</h1>}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default RoutesAppSuggest;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport RoutesAdm from './routesAdm';\r\n\r\nconst Adm = () => {\r\n  return(\r\n    <div>\r\n      <h1><img alt='logo' src='/assets/logo_palpitebox.png'/></h1>\r\n      <header>\r\n        <nav>\r\n          <ul>\r\n            <li><Link to='/'>Início</Link></li>\r\n            <li>|</li>\r\n            <li><Link to='/client/sobrenos'>Sobre nós</Link></li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n      <div>\r\n        <RoutesAdm/>\r\n      </div>\r\n      <div>\r\n        <footer>\r\n          <p>Colocar Suggest na sua empresa, <Link to='/'>clique aqui!</Link></p>\r\n          <p>Suggest In Box - Todos os direitos reservados.</p>\r\n          <p>© 2020 - Copyright</p>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Adm;","const INITIAL_STATE = {\r\n  message: '',\r\n  showMessage: false,\r\n  progress: true\r\n}\r\nexport const ACTIONS = {\r\n  SHOW_MESSAGE: 'SHOW_MESSAGE',\r\n  HIDE_MESSAGE: 'HIDE_MESSAGE',\r\n  HIDE_PROGRESS: 'HIDE_PROGRESS',\r\n  SHOW_PROGRESS: 'SHOW_PROGRESS'\r\n}\r\nexport const messageReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.SHOW_MESSAGE:\r\n      return {...state, message: action.message, showMessage: true}\r\n    case ACTIONS.HIDE_MESSAGE:\r\n      return {...state, message: '', showMessage: false, progress: true}\r\n    case ACTIONS.SHOW_PROGRESS:\r\n      return {...state, progress: false}\r\n    case ACTIONS.HIDE_PROGRESS:\r\n      return {...state, progress: true}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//MOSTAR MENSAGEM CAPTURADA DAS REQUESTS\r\nexport const showMessage = (message) => {\r\n  return{\r\n    type: ACTIONS.SHOW_MESSAGE,\r\n    message: message\r\n  }\r\n}\r\n//FECHAR MENSAGENS\r\nexport const hideMessage = () => {\r\n  return {\r\n    type: ACTIONS.HIDE_MESSAGE\r\n  }\r\n}\r\n//PROGRESS DA REQUISIÇÃO\r\nexport const showProgress = () => {\r\n  return {\r\n    type: ACTIONS.SHOW_PROGRESS\r\n  }\r\n}\r\n//FECHAR PROGRESSO\r\nexport const hideProgress = () => {\r\n  return {\r\n    type: ACTIONS.HIDE_PROGRESS\r\n  }\r\n}","import api from '../services/api';\r\nimport history from '../services/history';\r\nimport { setInfosLocalStorage } from '../services/auth';\r\nimport { showMessage } from './messageReducer';\r\n\r\nconst ACTIONS = {\r\n  AUTH: 'AUTH',\r\n  FOGOT: 'FOGOT'\r\n}\r\nconst INITIAL_STATE = {\r\n  infos:[],\r\n  email:[],\r\n  user:[],\r\n}\r\nexport const authReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.AUTH:\r\n      return {...state, infos: action.infos}\r\n    case ACTIONS.FOGOT:\r\n      return {...state, email: action.email}\r\n    case ACTIONS.RESET:\r\n      return {...state, user: action.user}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//AUTENTICAÇÃO\r\nexport const auth = (login) => {\r\n  return dispatch => {\r\n    api.post('/auth', login)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.AUTH,\r\n        infos: Response.data,\r\n      }); \r\n      if(!Response.data.token){\r\n        dispatch(\r\n          showMessage(\"Senha ou email inválidos!\")\r\n        )\r\n      }else{\r\n        setInfosLocalStorage(Response.data.token, Response.data.user);\r\n        history.push(`/user/?${Response.data.user._id}?page=1&limit=25`);\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servidor indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )}\r\n    )\r\n  }\r\n}\r\n//ESQUECI SENHA\r\nexport const fogot = (email) => {\r\n  return dispatch => {\r\n    api.post('/auth/fogot', email)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.FOGOT,\r\n        email: Response.data,\r\n      });\r\n      if(!Response.data.email){\r\n        dispatch(\r\n          showMessage(\"Usuario não encontrado!\")\r\n        )\r\n      }else{\r\n        dispatch(\r\n          showMessage(\"Email enviado com sucesso!\"),\r\n          history.push('/login')\r\n        )\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servidor indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )}\r\n    );\r\n  }\r\n}\r\n//RESET SENHA\r\nexport const reset = (user) => {\r\n  return dispatch => {\r\n    api.post('/auth/reset-password', user)\r\n    .then(Response => {\r\n      dispatch({\r\n          type: ACTIONS.FOGOT,\r\n          user: Response.data,\r\n      });\r\n      if(!Response.data.success){\r\n        dispatch(\r\n          showMessage(\"Usuario não encontrado!\")\r\n        )\r\n      }else{\r\n        dispatch(\r\n          showMessage(\"Senha recuperada com sucesso!\"),\r\n          history.push('/login')\r\n        )\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Serviço indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )}\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\r\nimport { showMessage, hideMessage } from '../../store/messageReducer';\r\n\r\nconst MessageDialog = (props) => {\r\n  return(\r\n    <div>\r\n      <Dialog open={props.openDialog} onClick={()=> props.hideMessage} onClose={props.hideMessage}>\r\n        <DialogTitle>\r\n          Atenção\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {props.message}\r\n        </DialogContent>\r\n        <DialogActions onClick={()=> props.hideMessage}>\r\n          <Button onClick={props.hideMessage}>Fechar</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  openDialog: state.message.showMessage,\r\n  message: state.message.message\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({showMessage, hideMessage}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageDialog);","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { auth } from '../../store/authReducer';\r\nimport { showMessage, hideMessage, showProgress, hideProgress } from '../../store/messageReducer';\r\nimport MessageDialog from '../Dialog';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    maxWidth: 300,\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  link: {\r\n    textAlign: 'end'\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const [disableSubmit, setDisableSubmit] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    props.hideProgress();\r\n  },[])\r\n\r\n  const formik = useFormik ({\r\n    initialValues: { email: '', password: ''},\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .email('Email inválido')\r\n        .required('Email obrigatório!'),\r\n      password: Yup.string()\r\n        .required('Senha obrigatória!')\r\n        .max(40, 'Senha muito longa'),\r\n      }),\r\n      onSubmit: values => {\r\n        props.auth(values);\r\n      },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            SuggestInBox\r\n          </Typography>\r\n          <Button component={Link} to={`/`} color=\"inherit\">Site</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container className={classes.container} component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Login\r\n          </Typography> \r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"email\" \r\n              name=\"email\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Email\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.email}\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <div>\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"password\" \r\n              name=\"password\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Senha\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.password}\r\n              inputProps={{ maxLength: 40 }}\r\n            />\r\n            <div>\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <Typography className={classes.error}>{formik.errors.password}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <ReCAPTCHA sitekey=\"6LcdP8cZAAAAAMLbn_f2B0EDFSdtvkPQaEO1hx30\" onChange={() => setDisableSubmit(false)} />\r\n            <Button type=\"submit\" onClick={()=>props.showProgress()} disabled={disableSubmit} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} onBlur={formik.handleBlur}>\r\n              Entrar\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link to=\"/fogot-password\" variant=\"body2\">\r\n                  Esqueci minha senha\r\n                </Link>\r\n              </Grid>\r\n              <Grid className={classes.link} item xs>\r\n                <Link to=\"#\" variant=\"body2\">\r\n                  Criar conta\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n          <div hidden={props.progress}>\r\n            <CircularProgress/>\r\n          </div>\r\n          <MessageDialog/>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  openDialog: state.message.showMessage,\r\n  message: state.message.message,\r\n  progress: state.message.progress\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({auth, showMessage, hideMessage, showProgress, hideProgress}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { useState} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { showMessage, hideMessage, showProgress } from '../../store/messageReducer';\r\nimport MessageDialog from '../Dialog';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { fogot } from '../../store/authReducer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  link: {\r\n    fontSize: 15 \r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Fogot = (props) => {\r\n  const classes = useStyles();\r\n  const [disableSubmit, setDisableSubmit] = useState(false);\r\n\r\n  const formik = useFormik ({\r\n    initialValues: { email: ''},\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .email('Email invalido')\r\n        .required('Email obrigatório!'),\r\n      }),\r\n      onSubmit: values => {\r\n        props.fogot(values);\r\n      },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <MessageDialog/>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n        <Typography variant=\"h6\" noWrap>\r\n          SuggestInBox\r\n        </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Recuperar senha\r\n          </Typography> \r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"email\" \r\n              name=\"email\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Email\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.email}\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <div>\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <ReCAPTCHA sitekey=\"6LcdP8cZAAAAAMLbn_f2B0EDFSdtvkPQaEO1hx30\" onChange={() => setDisableSubmit(false)} />\r\n            <Button type=\"submit\" onClick={()=> props.showProgress()} disabled={disableSubmit} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} onBlur={formik.handleBlur}>\r\n              Enviar link para email\r\n            </Button>\r\n          </form>\r\n          <div hidden={props.progress}>\r\n            <CircularProgress/>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  openDialog: state.message.showMessage,\r\n  message: state.message.message,\r\n  progress: state.message.progress\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({fogot, showMessage, hideMessage, showProgress}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Fogot);","import React, { useState} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { showMessage, hideMessage } from '../../store/messageReducer';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { reset } from '../../store/authReducer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    maxWidth: 300,\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  link: {\r\n    fontSize: 15 \r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Reset = (props) => {\r\n  const classes = useStyles();\r\n  const [disableSubmit, setDisableSubmit] = useState(false);\r\n  const [progress, setProgress] = useState(true);\r\n  \r\n  const [ token ] = useState(window.location.href.split('/?')[1]);\r\n  const [ email ] = useState(window.location.href.split('/?')[2]);\r\n\r\n  const formik = useFormik ({\r\n    initialValues: { password: '', passwordConfirmation: ''},\r\n    validationSchema: Yup.object({\r\n      password: Yup.string()\r\n        .required('Senha obrigatória!')\r\n        .matches(/^(?=.*[A-Za-z])(?=.*[0-9])(?=.{6,})/,\r\n          \"A senha deve ter pelo menos uma letra maiuscula, um número e 6 caracteres!\"\r\n        )\r\n        .max(40, 'Senha muito longa'),\r\n      passwordConfirmation: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Senha não confere')\r\n        .required('Confirme a senha!')\r\n      }),\r\n      onSubmit: values => {\r\n        setProgress(false);\r\n        const user = {\r\n          password: values.password,\r\n          token: token,\r\n          email: email\r\n        }\r\n        props.reset(user);\r\n      },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n        <Typography variant=\"h6\" noWrap>\r\n          SuggestInBox\r\n        </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container className={classes.container} component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Recuperar senha\r\n          </Typography> \r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"password\" \r\n              name=\"password\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Nova senha\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.password}\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <div>\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <Typography className={classes.error}>{formik.errors.password}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"password\" \r\n              name=\"passwordConfirmation\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Confirme a senha\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.passwordConfirmation}\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <div>\r\n              {formik.touched.passwordConfirmation && formik.errors.passwordConfirmation ? (\r\n                <Typography className={classes.error}>{formik.errors.passwordConfirmation}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <ReCAPTCHA sitekey=\"6LcdP8cZAAAAAMLbn_f2B0EDFSdtvkPQaEO1hx30\" onChange={() => setDisableSubmit(false)} />\r\n            <Button type=\"submit\" disabled={disableSubmit} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} onBlur={formik.handleBlur}>\r\n              Salvar\r\n            </Button>\r\n          </form>\r\n\r\n          <Dialog open={props.openDialog} onClick={()=> setProgress(true)} onClose={props.hideMessage}>\r\n            <DialogTitle>\r\n              Atenção\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              {props.message}\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={props.hideMessage}>Fechar</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          <div hidden={progress}>\r\n            <CircularProgress/>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  openDialog: state.message.showMessage,\r\n  message: state.message.message\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({reset, showMessage, hideMessage}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Reset);","import React from 'react';\r\nimport { Route, Switch, Redirect, Router } from 'react-router-dom';\r\n\r\nimport Site from './Site';\r\nimport Client from './pages/Client';\r\nimport User from './pages/User';\r\nimport Suggest from './pages/User/Suggest';\r\nimport Adm from './pages/Adm';\r\nimport { Login, Fogot, Reset } from './components';\r\n\r\nimport { isAuthenticated } from './services/auth';\r\nimport history from './services/history';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      isAuthenticated() ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\r\n      )\r\n    }\r\n  />\r\n);\r\n \r\nconst Routes = () => (\r\n  <Router history={history}>\r\n    <Switch>\r\n      <Route exact path='/' component={Site}/>\r\n      <Route exact path='/login' component={Login}/>\r\n      <Route exact path='/fogot-password' component={Fogot}/>\r\n      <Route path='/reset-password' component={Reset}/>\r\n      <Route path='/client' component={Client}/>\r\n      <PrivateRoute path='/user' component={User}/>\r\n      <PrivateRoute path='/suggest' component={Suggest}/>\r\n      <PrivateRoute path='/adm' component={Adm}/>\r\n      <Route exact path=\"/not-found\" component={()=><h1>Página não encontrada 404</h1>}/>\r\n      <Redirect to=\"/not-found\" />\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nexport default Routes;","import React from 'react';\r\nimport Routes from './routes';\r\n\r\nconst App = () => (\r\n  <Routes/> \r\n)\r\n\r\nexport default App;\r\n","import api from '../services/api';\r\n\r\nconst ACTIONS = {\r\n  LIST_PROMO: 'LISTPROMO',\r\n  BY_ID_PROMO: 'BYIDPROMO',\r\n  UPDATE_PROMO: 'UPDATEPROMO',\r\n  ADD_PROMO: 'ADDPROMO',\r\n}\r\nconst INITIAL_STATE = {\r\n  promo: [],\r\n  promoById: [],\r\n}\r\nexport const promoReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.ATV_PROMO:\r\n      return {...state, companyById: action.companyById}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import api from '../services/api';\r\n\r\nconst ACTIONS = {\r\n  LIST_NOTIFICATION: 'LIST_NOTIFICATION',\r\n  DELETE_NOTIFICATION: 'DELETE_NOTIFICATION',\r\n}\r\nconst INITIAL_STATE = {\r\n  notifications: [],\r\n}\r\nexport const notificationReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.LIST_NOTIFICATION:\r\n      return {...state, notification: action.notification}\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { clientReducer } from './clientReducer';\r\nimport { authReducer } from './authReducer';\r\nimport { companyReducer } from './companyReducer';\r\nimport { suggestReducer } from './suggestReducer';\r\nimport { promoReducer } from './promoReducer';\r\nimport { menuReducer } from './menuReducer';\r\nimport { messageReducer } from './messageReducer';\r\nimport { callReducer } from './callReducer';\r\nimport { notificationReducer } from './notificationReducer';\r\nimport { userReducer } from './userReducer';\r\n\r\nconst mainReducer = combineReducers({\r\n  auth: authReducer,\r\n  client: clientReducer,\r\n  user: userReducer,\r\n  company: companyReducer,\r\n  suggest: suggestReducer,\r\n  menu: menuReducer,\r\n  promo: promoReducer,\r\n  call: callReducer,\r\n  message: messageReducer,\r\n  notification: notificationReducer,\r\n});\r\n\r\nexport const store = applyMiddleware(thunk)(createStore)(mainReducer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}