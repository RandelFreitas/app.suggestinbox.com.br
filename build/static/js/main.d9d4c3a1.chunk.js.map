{"version":3,"sources":["Site/index.js","services/history.js","services/auth.js","services/api.js","store/clientReducer.js","pages/Client/MainClient/index.js","pages/Client/FormClient/index.js","pages/Client/MenuClient/index.js","pages/Client/AtentionClient/index.js","pages/Client/AboutClient/index.js","pages/Client/ConfirmClient/index.js","pages/Client/routesClient.js","pages/Client/index.js","store/messageReducer.js","store/userReducer.js","store/companyReducer.js","pages/User/Companies/index.js","pages/User/SetupUser/index.js","pages/User/SetupCompany/index.js","pages/User/routesUser.js","components/Dialog/index.js","pages/User/index.js","store/suggestReducer.js","pages/User/Suggest/Suggests/index.js","store/callReducer.js","pages/User/Suggest/Call/index.js","pages/User/Suggest/Promo/index.js","store/menuReducer.js","pages/User/Suggest/Menu/index.js","pages/User/Suggest/Finances/index.js","pages/User/Suggest/Reservation/index.js","pages/User/Suggest/Delivery/index.js","pages/User/Suggest/routesUser.js","pages/User/Suggest/index.js","pages/Adm/routesAdm.js","pages/Adm/index.js","store/authReducer.js","components/Login/index.js","components/Fogot/index.js","components/ResetPassword/index.js","components/Print/index.js","routes.js","App.js","store/promoReducer.js","store/notificationReducer.js","store/index.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Site","classes","className","AppBar","position","Toolbar","Typography","variant","Button","component","Link","to","color","history","createBrowserHistory","logoutUser","localStorage","removeItem","push","api","axios","create","baseURL","interceptors","request","use","a","config","token","getItem","headers","Authorization","ACTIONS","INFOS","ADD","GET_MENU","INITIAL_STATE","infos","idTable","suggest","menu","sectionMenu","getInfo","idCompany","dispatch","get","then","Response","type","data","catch","error","console","log","submitSuggest","recommends","post","companyId","getMenu","addCall","call","table","ADD_CALL","margin","width","photo","marginBottom","marginTop","height","center","textAlign","button","hide","display","MainClient","props","CardMedia","image","name","slogan","_id","onClick","delivery","prototypes","PropTypes","array","isRequired","connect","state","client","bindActionCreators","background","span","namePhone","ident","maxWidth","unknown","fontSize","alignItems","minHeight","stars","padding","yesNo","NumberFormatCustom","inputRef","onChange","other","getInputRef","onValueChange","values","target","value","isNumericString","format","FormClient","useState","window","location","href","split","checked","setChecked","activeStep","setActiveStep","Set","skipped","setSkipped","steps","phone","opinion","setValues","handleChange","event","checkChange","onSubmit","preventDefault","Stepper","Step","StepLabel","step","TextField","label","disabled","id","inputProps","maxLength","InputProps","inputComponent","FormControlLabel","promo","size","control","Checkbox","Box","mb","borderColor","Rating","defaultValue","icon","emptyIcon","FormControl","RadioGroup","row","aria-label","Radio","labelPlacement","multiline","rows","rowsMax","getStepContent","buttons","prevActiveStep","length","newSkipped","has","delete","buttonEnd","MenuClient","useEffect","Paper","sort","b","index","map","section","TableContainer","key","Table","stickyHeader","TableHead","TableRow","TableCell","colSpan","align","TableBody","itemMenu","item","description","toLocaleString","style","currency","centerText","okText","AtentionClient","Grid","container","idUrl","localization","src","frameBorder","aria-hidden","tabIndex","touchAction","border","ConfirmClient","settings","finishPercent","onComplete","RoutesApp","exact","path","AboutClient","poth","img","links","labelLink","appBar","top","bottom","grow","list","justifyContent","content","Client","React","setState","toggleDrawer","open","role","onKeyDown","List","ListItem","ListItemIcon","ListItemText","primary","Divider","CssBaseline","IconButton","edge","Drawer","onClose","message","showMessage","progress","hideMessage","showProgress","hideProgress","users","userById","infosUsers","getUserById","idUser","updateUser","user","put","companies","companyById","infosCompanies","companyAtv","listCompanies","page","nOfItems","docs","addCompany","company","getCompanyById","updateCompany","cleanCompany","atvCompany","palette","text","secondary","Companies","nOfPages","pages","setPage","mapCompanies","Fragment","md","sm","xs","Card","CardActionArea","CardContent","noWrap","address","city","CardActions","Pagination","count","float","media","card","grid","ZipFormatCustom","CpfFormatCustom","PhoneFormatCustom","SetupUser","initialValues","email","cpf","street","number","district","zip","obs","enableReinitialize","validationSchema","Yup","required","userUpdate","formik","handleSubmit","fullWidth","InputLabelProps","shrink","getFieldProps","touched","errors","qrCode","buttonQr","buttonPhoto","cardMain","sectionImg","qrCodeTable","nTable","CnpjFormatCustom","SetupCompany","setNTable","accept","input","multiple","htmlFor","rel","cnpj","companyUpdate","RoutesUser","openDialog","Dialog","DialogTitle","DialogContent","DialogActions","toolbar","paddingRight","textDecoration","paddingTop","paddingBottom","profile","appBarSpacer","mixins","overflow","User","Badge","badgeContent","Container","suggests","suggestById","infosSuggests","listSuggest","limit","outlier","fromDate","toDate","favorite","createMuiTheme","main","filter","minWidth","marginLeft","buttonAtv","Suggest","setLimit","Date","selectedDateFrom","setSelectedDateFrom","now","selectedDateTo","setSelectedDateTo","setOutlier","check","suggestAtv","setSuggestAtv","FormGroup","Switch","atvSuggest","FormHelperText","Select","MenuItem","locale","ptBR","utils","DateFnsUtils","disableToolbar","invalidDateMessage","date","KeyboardButtonProps","hover","parseISO","createdAt","timeZone","precision","readOnly","favoriteUpdate","outlierUpdate","calls","infosCalls","callById","listCalls","destroyCall","idCall","msg","tables","Call","setCall","atvCall","Promo","setPromo","atvPromo","LIST_MENU","ATV_MENU","BY_ID_MENU","infosMenu","getMenuById","formControl","paper","sectionName","visu","buttonEdit","paper2","tableHead","centerButton","Menu","menuById","edit","setEdit","setMenu","menuType","setMenuType","editMenu","atvMenu","displayEmpty","selectEmpty","endIcon","Finances","Reservation","reservation","setReservation","atvReservation","Delivery","setDelivery","atvDelivery","toolbarIcon","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","flexDirection","fixedHeight","avatar","backgroundColor","MainSuggest","setOpen","clsx","Avatar","hidden","parseFloat","toFixed","nStars","auth","RoutesAppSuggest","match","useRouteMatch","url","Adm","alt","AUTH","FOGOT","login","setItem","JSON","stringify","fogot","reset","link","submit","disableSubmit","setDisableSubmit","useFormik","password","max","onBlur","handleBlur","sitekey","CircularProgress","setProgress","passwordConfirmation","matches","oneOf","Print","PrivateRoute","Component","rest","render","pathname","from","Routes","Login","Fogot","Reset","App","LIST_PROMO","BY_ID_PROMO","UPDATE_PROMO","ADD_PROMO","promoById","notifications","mainReducer","combineReducers","action","RESET","listUp","forEach","suggests1","ADD_MENU","UPDATE_MENU","ATV_PROMO","notification","store","applyMiddleware","thunk","createStore","ReactDOM","document","getElementById"],"mappings":"iSAQMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,OAqBCK,EAjBF,WACX,IAAMC,EAAUV,IAEhB,OACE,yBAAKW,UAAWD,EAAQP,MACtB,kBAACS,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKL,UAAWD,EAAQF,OAA5C,gBAGA,kBAACS,EAAA,EAAD,CAAQC,UAAWC,IAAMC,GAAE,SAAYC,MAAM,WAA7C,a,6GC1BKC,EAFCC,cCcHC,EAAa,WACxBC,aAAaC,WAhBU,UAiBvBD,aAAaC,WAhBM,UAiBnBJ,EAAQK,KAAK,WChBTC,EAAMC,IAAMC,OAAO,CAEvBC,QAAS,0BAGXH,EAAII,aAAaC,QAAQC,IAAzB,+BAAAC,EAAA,MAA6B,WAAMC,GAAN,eAAAD,EAAA,6DACrBE,EDHsBZ,aAAaa,QALlB,aCUrBF,EAAOG,QAAQC,cAAf,iBAAyCH,IAHhB,kBAKpBD,GALoB,2CAA7B,uDAQeR,QCbTa,EAAU,CACdC,MAAO,QACPC,IAAK,cACLC,SAAU,YAENC,EAAgB,CACpBC,MAAM,GACNC,QAAS,GACTC,QAAQ,GACRC,KAAM,GACNC,YAAa,IAeFC,EAAU,SAACC,EAAWL,GACjC,OAAO,SAAAM,GACLzB,EAAI0B,IAAJ,0BAA2BF,IAC1BG,MAAK,SAAAC,GACJH,EAAS,CACPI,KAAMhB,EAAQC,MACdI,MAAOU,EAASE,KAChBX,QAASA,OAGZY,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAKLG,EAAgB,SAACf,GAM5B,MAL0B,MAAvBA,EAAQgB,WACThB,EAAQgB,YAAa,EAErBhB,EAAQgB,YAAa,EAEhB,SAAAX,GACLzB,EAAIqC,KAAJ,0BAA4BjB,EAAQkB,WAAalB,GAChDO,MAAK,SAAAC,GACJH,EAAS,CACPI,KAAMhB,EAAQE,IACdK,QAASQ,EAASE,SAEnBpC,EAAQK,KAAR,mCAAyCqB,EAAQkB,aACnDP,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAKLO,EAAU,SAACf,GACtB,OAAO,SAAAC,GACLzB,EAAI0B,IAAJ,+BAAgCF,IAC/BG,MAAK,SAAAC,GACJH,EAAS,CACPI,KAAMhB,EAAQG,SACdK,KAAMO,EAASE,KACfR,YAAaM,EAASE,KAAKR,iBAG9BS,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAKLQ,EAAU,SAAChB,EAAWL,GACjC,IAAMsB,EAAO,CACXC,MAAOvB,EACPmB,UAAWd,GAGb,OADAS,QAAQC,IAAIO,GACL,SAAAhB,GACLzB,EAAIqC,KAAJ,+BAAiCb,GAAaiB,GAC7Cd,MAAK,SAAAC,GACJH,EAAS,CACPI,KAAMhB,EAAQ8B,cAGjBZ,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QCnFZ5D,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPqE,OAAQ,OACRC,MAAO,SAGXC,MAAO,CACLF,OAAQ,SACRG,aAAc,OACdC,UAAW,OACXH,MAAO,IACPI,OAAQ,KAEVC,OAAQ,CACNC,UAAW,SACXP,OAAQ,OACRG,aAAc,QAEhBK,OAAQ,CACNL,aAAc,QAEhBM,KAAM,CACJC,QAAS,YAIPC,EAAa,SAACC,GAAW,IACrBtC,EAAmBsC,EAAnBtC,MAAOC,EAAYqC,EAAZrC,QACTrC,EAAUV,IAEhB,OACE,yBAAKW,UAAWD,EAAQP,MACtB,kBAACkF,EAAA,EAAD,CAAW1E,UAAWD,EAAQgE,MAAOY,MAAM,sBAAsB9E,MAAM,0BACvE,yBAAKG,UAAWD,EAAQoE,QACtB,4BAAKhC,EAAMyC,MACX,2BAAIzC,EAAM0C,SAEZ,kBAACvE,EAAA,EAAD,CAAQN,UAAWyE,EAAMtC,MAAME,QAAStC,EAAQsE,OAAStE,EAAQuE,KAAM/D,UAAWC,IAAMC,GAAE,2BAAsB0B,EAAM2C,IAA5B,kBAAyC1C,GAAkB,GAAK/B,QAAQ,YAAYK,MAAM,WAApL,kBAGA,kBAACJ,EAAA,EAAD,CAAQN,UAAWyE,EAAMtC,MAAMG,KAAMvC,EAAQsE,OAAStE,EAAQuE,KAC5D/D,UAAWC,IAAMC,GAAE,4BAAuB0B,EAAM2C,IAA7B,kBAA0C1C,GAAkB,GAC/E/B,QAAQ,YAAYK,MAAM,WAF5B,sBAKA,kBAACJ,EAAA,EAAD,CAAQN,UAAWyE,EAAMtC,MAAMuB,MAAmB,GAAXtB,EAAcrC,EAAQsE,OAAStE,EAAQuE,KAC5ES,QAAS,kBAAMN,EAAMhB,QAAQtB,EAAM2C,IAAK1C,IACxC7B,UAAWC,IAAMC,GAAE,2BAAsB0B,EAAM2C,IAA5B,kBAAyC1C,GAAkB,GAC9E/B,QAAQ,YAAYK,MAAM,WAH5B,oBAMA,kBAACJ,EAAA,EAAD,CAAQN,UAAWyE,EAAMtC,MAAM6C,SAAUjF,EAAQsE,OAAStE,EAAQuE,KAChE/D,UAAWC,IAAMC,GAAE,2BAAsB0B,EAAM2C,IAA5B,kBAAyC1C,GAAkB,GAAK/B,QAAQ,YAAYK,MAAM,WAD/G,cAQN8D,EAAWS,WAAa,CACtB9C,MAAO+C,IAAUC,MAAMC,WACvBhD,QAAS8C,IAAUC,MAAMC,YAG3B,IAQeC,eARS,SAAAC,GAAK,MAAK,CAChCnD,MAAOmD,EAAMC,OAAOpD,MACpBC,QAASkD,EAAMC,OAAOnD,YAGG,SAAAM,GAAQ,OACjC8C,YAAmB,CAAC/B,WAAUf,KAEjB2C,CAA6Cb,G,8JC5DtDnF,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPqE,OAAQ,OACRC,MAAO,OACP2B,WAAY,YAGhBb,KAAM,CACJR,UAAW,UAEbsB,KAAM,CACJtB,UAAW,UAEbuB,UAAW,CACT7B,MAAO,SAET8B,MAAO,CACL3B,UAAW,OACX4B,SAAU,SAEZC,QAAS,CACPC,SAAU,QAEZ5B,OAAQ,CACN6B,WAAY,SACZ5B,UAAW,SACX6B,UAAW,SAEbC,MAAO,CACLC,QAAS,OACTH,WAAY,SACZ5B,UAAW,SACX6B,UAAW,SAEb5C,WAAY,CACV8C,QAAS,OACTH,WAAY,SACZ5B,UAAW,SACX6B,UAAW,SAEbG,MAAO,CACLvC,OAAQ,UAEVQ,OAAQ,CACNR,OAAQ,MACRI,UAAW,YAIToC,GAAqB,SAAC5B,GAAW,IAC7B6B,EAAiC7B,EAAjC6B,SAAUC,EAAuB9B,EAAvB8B,SAAaC,EADK,YACK/B,EADL,yBAEpC,OACE,kBAAC,IAAD,iBACM+B,EADN,CAEEC,YAAaH,EACbI,cAAe,SAACC,GACdJ,EAAS,CACPK,OAAQ,CACNhC,KAAMH,EAAMG,KACZiC,MAAOF,EAAOE,UAIpBC,iBAAe,EACfC,OAAO,qBAWPC,GAAa,SAACvC,GAClB,IAAM1E,EAAUV,KACR8C,EAAUsC,EAAVtC,MAFoB,EAGR8E,mBAASC,OAAOC,SAASC,KAAKC,MAAM,KAAK,IAAtD9D,EAHqB,sBAIE0D,oBAAS,GAJX,mBAIrBK,EAJqB,KAIZC,EAJY,OAKQN,mBAAS,GALjB,mBAKrBO,EALqB,KAKTC,EALS,OAMER,mBAAS,IAAIS,KANf,mBAMrBC,EANqB,KAMZC,EANY,KAOtBC,EAAQ,CAAC,GAAI,GAAI,GAAI,IAPC,EA4BAZ,mBAAS,CACnCrC,KAAM,GACNkD,MAAO,GACP5B,MAAO,EACP6B,QAAS,GACT1E,WAAY,GACZE,cAlC0B,mBA4BrBoD,EA5BqB,KA4BbqB,EA5Ba,KAqCtBC,EAAe,SAACC,GACpB,OAAOA,EAAMtB,OAAOC,OAClB,IAAK,IACHmB,EAAU,eAAIrB,EAAL,eAAcuB,EAAMtB,OAAOhC,KAAO,KAC3C,MACF,IAAK,IACHoD,EAAU,eAAIrB,EAAL,eAAcuB,EAAMtB,OAAOhC,KAAO,KAC3C,MACF,IAAK,IACHoD,EAAU,eAAIrB,EAAL,eAAcuB,EAAMtB,OAAOhC,KAAO,KAC3C,MACF,IAAK,IACHoD,EAAU,eAAIrB,EAAL,eAAcuB,EAAMtB,OAAOhC,KAAO,KAC3C,MACF,IAAK,IACHoD,EAAU,eAAIrB,EAAL,eAAcuB,EAAMtB,OAAOhC,KAAO,KAC3C,MACF,QACEoD,EAAU,eAAIrB,EAAL,eAAcuB,EAAMtB,OAAOhC,KAAOsD,EAAMtB,OAAOC,WAIxDsB,EAAc,SAACD,GACnBF,EAAU,CAACpD,KAAM,GAAIkD,MAAO,KAC5BP,EAAWW,EAAMtB,OAAOU,UAqG1B,OACE,6BACE,wBAAItH,UAAWD,EAAQ6E,MAAOH,EAAMtC,MAAMyC,MAC1C,uBAAG5E,UAAWD,EAAQ6E,MAAOH,EAAMtC,MAAM0C,QACzC,0BAAM7E,UAAWD,EAAQP,KAAM4I,SAvGd,SAACF,GACpBA,EAAMG,iBACN5D,EAAMrB,cAAcuD,KAsGhB,kBAAC2B,EAAA,EAAD,CAASd,WAAYA,GACnB,kBAACe,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,OAEF,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,OAEF,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,OAEF,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,QAGJ,yBAAKxI,UAAWD,EAAQoE,QAjH9B,SAAwBsE,GACtB,OAAQA,GACN,KAAK,EACH,OACE,yBAAKzI,UAAWD,EAAQoE,QACtB,kBAACuE,EAAA,EAAD,CAAW1I,UAAWD,EAAQ4F,UAC5BgD,MAAM,OACNC,SAAUtB,EACVT,MAAOF,EAAO/B,KACd2B,SAAU0B,EACVrD,KAAK,OACLiE,GAAG,iBACHC,WAAY,CAAEC,UAAW,MAE3B,kBAACL,EAAA,EAAD,CAAW1I,UAAWD,EAAQ4F,UAC5BgD,MAAM,WACNC,SAAUtB,EACVT,MAAOF,EAAOmB,MACdvB,SAAU0B,EACVrD,KAAK,QACLiE,GAAG,+BACHG,WAAY,CAACC,eAAgB5C,MAE/B,kBAAC6C,EAAA,EAAD,CAAkBlJ,UAAWD,EAAQ6F,MACnC+C,MAAO,kBAACvI,EAAA,EAAD,CAAYJ,UAAWD,EAAQ+F,SAA/B,+BAAkE3D,EAAMgH,MAAO,yCAAiC,IACvHC,KAAK,QACLC,QAAS,kBAACC,EAAA,EAAD,CAAU5I,MAAM,UAAU6F,SAAU4B,EAAavD,KAAK,eAIvE,KAAK,EACH,OACE,yBAAK5E,UAAWD,EAAQoE,QACtB,kBAACoF,EAAA,EAAD,CAAKvJ,UAAWD,EAAQmG,MAAO3F,UAAU,WAAWiJ,GAAI,EAAGC,YAAY,eACrE,kBAACrJ,EAAA,EAAD,qDACA,kBAACsJ,EAAA,EAAD,CACE9E,KAAK,QACL2B,SAAU0B,EACV0B,aAAc,EACd9C,MAAOF,EAAOT,MACd0D,KAAM,kBAAC,KAAD,CAAM7D,SAAS,UACrB8D,UAAW,kBAAC,KAAD,CAAgB9D,SAAS,cAK9C,KAAK,EACH,OACE,yBAAK/F,UAAWD,EAAQoE,QACtB,kBAAC2F,GAAA,EAAD,CAAa9J,UAAWD,EAAQsD,WAAY9C,UAAU,YACpD,kBAACH,EAAA,EAAD,qCACA,kBAAC2J,GAAA,EAAD,CAAY/J,UAAWD,EAAQqG,MAAOG,SAAU0B,EAAcpB,MAAOF,EAAOtD,WAAY2G,KAAG,EAACC,aAAW,WAAWrF,KAAK,cACrH,kBAACsE,EAAA,EAAD,CACErC,MAAM,IACNwC,QAAS,kBAACa,GAAA,EAAD,CAAOxJ,MAAM,YACtBiI,MAAM,MACN/D,KAAK,aACLuF,eAAe,WAEjB,kBAACjB,EAAA,EAAD,CACErC,MAAM,IACNwC,QAAS,kBAACa,GAAA,EAAD,CAAOxJ,MAAM,YACtBiI,MAAM,SACN/D,KAAK,aACLuF,eAAe,cAM3B,KAAK,EACH,OACE,yBAAKnK,UAAWD,EAAQoE,QACtB,kBAACuE,EAAA,EAAD,CACAC,MAAM,uBACNyB,WAAS,EACTC,KAAM,EACNC,QAAS,EACTjK,QAAQ,WACRwG,MAAOF,EAAOoB,QACdxB,SAAU0B,EACVrD,KAAK,UACLiE,GAAG,gBAIT,QACE,OACE,oCA0BC0B,CAAe/C,GAChB,yBAAKxH,UAAWD,EAAQyK,SACtB,kBAAClK,EAAA,EAAD,CAAQD,QAAQ,YAAYuI,SAAyB,IAAfpB,EAAkBzC,QAhK/C,WACjB0C,GAAc,SAACgD,GAAD,OAAoBA,EAAiB,MA+JkCzK,UAAWD,EAAQsE,QAAhG,UAGCmD,IAAeK,EAAM6C,OACpB,kBAACpK,EAAA,EAAD,CAAQN,UAAWD,EAAQsE,OAAQhE,QAAQ,YAAYK,MAAM,YAAYoC,KAAK,UAA9E,UAIA,kBAACxC,EAAA,EAAD,CAAQN,UAAWD,EAAQsE,OAAQhE,QAAQ,YAAYK,MAAM,UAAUqE,QAnLhE,WACjB,IALqB0D,EAKjBkC,EAAahD,EALIc,EAMHjB,EALXG,EAAQiD,IAAInC,KAMjBkC,EAAa,IAAIjD,IAAIiD,EAAWhE,WACrBkE,OAAOrD,GAGpBC,GAAc,SAACgD,GAAD,OAAoBA,EAAiB,KACnD7C,EAAW+C,KA4KEnD,IAAeK,EAAM6C,OAAQ,EAAI,SAAW,mBAU7D1D,GAAW/B,WAAa,CACtB9C,MAAO+C,IAAUC,MAAMC,YAGzB,IAOeC,gBAPS,SAAAC,GAAK,MAAK,CAChCnD,MAAOmD,EAAMC,OAAOpD,UAGK,SAAAO,GAAQ,OACjC8C,YAAmB,CAACpC,iBAAgBV,KAEvB2C,CAA6C2B,I,sECxStD3H,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPqE,OAAQ,OACRC,MAAO,SAGXC,MAAO,CACLF,OAAQ,SACRG,aAAc,OACdC,UAAW,OACXH,MAAO,IACPI,OAAQ,KAEVC,OAAQ,CACNC,UAAW,SACXP,OAAQ,OACRG,aAAc,QAEhBK,OAAQ,CACNJ,UAAW,QAEb6G,UAAW,CACT7G,UAAW,OACXD,aAAc,QAEhBM,KAAM,CACJC,QAAS,YAIPwG,GAAa,SAACtG,GAClB,IAAM1E,EAAUV,KACRiD,EAAsCmC,EAAtCnC,KAAMC,EAAgCkC,EAAhClC,YAAaJ,EAAmBsC,EAAnBtC,MAAOC,EAAYqC,EAAZrC,QAFP,EAIP6E,mBAASC,OAAOC,SAASC,KAAKC,MAAM,KAAK,IAAtD9D,EAJoB,oBAU3B,OAJAyH,qBAAU,WACRvG,EAAMjB,QAAQD,KACd,IAGA,yBAAKvD,UAAWD,EAAQP,MACtB,yBAAKQ,UAAWD,EAAQoE,QACtB,kBAACO,EAAA,EAAD,CAAW1E,UAAWD,EAAQgE,MAAOY,MAAM,sBAAsB9E,MAAM,0BACvE,4BAAKsC,EAAMyC,MACX,2BAAIzC,EAAM0C,SAEZ,wBAAI7E,UAAWD,EAAQoE,QAAS7B,EAAKsC,MACrC,kBAACqG,GAAA,EAAD,CAAOjL,UAAWD,EAAQuC,MACvBC,EAAY2I,MAAK,SAAC1J,EAAG2J,GAAJ,OAAU3J,EAAE4J,MAAQD,EAAEC,MAAO,GAAK,KAAGC,KAAI,SAAAC,GACzD,OACE,kBAACC,GAAA,EAAD,CAAgBC,IAAKF,EAAQxG,KAC3B,kBAAC2G,GAAA,EAAD,CAAOC,cAAY,EAACzB,aAAW,gBAC7B,kBAAC0B,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,QAAS,EAAGC,MAAM,UAC3B,4BAAKT,EAAQ1G,SAInB,kBAACoH,GAAA,EAAD,KACGV,EAAQW,SAASf,MAAK,SAAC1J,EAAG2J,GAAJ,OAAU3J,EAAE4J,MAAQD,EAAEC,MAAO,GAAK,KAAGC,KAAI,SAAAa,GAC9D,OACE,kBAACN,GAAA,EAAD,CAAUJ,IAAKU,EAAKpH,KAClB,kBAAC+G,GAAA,EAAD,CAAWE,MAAM,QACf,4BAAKG,EAAKtH,MACV,4BAAI,+BAAKsH,EAAKC,YAAV,OAEN,kBAACN,GAAA,EAAD,CAAWE,MAAM,SAAUG,EAAKrF,MAAOuF,eAAe,QAAS,CAACC,MAAO,WAAYC,SAAU,oBAS7G,kBAAChM,EAAA,EAAD,CAAQN,UAAWD,EAAQsE,OACzB9D,UAAWC,IAAMC,GAAE,mBAAc0B,EAAM2C,IAApB,kBAAiC1C,GACpD/B,QAAQ,YAAYK,MAAM,WAF5B,kBAKA,kBAACJ,EAAA,EAAD,CAAQN,UAAWyE,EAAMtC,MAAMuB,MAAmB,GAAXtB,EAAcrC,EAAQ+K,UAAY/K,EAAQuE,KAC/ES,QAAS,kBAAMN,EAAMhB,QAAQtB,EAAM2C,IAAK1C,IACxC7B,UAAWC,IAAMC,GAAE,2BAAsB0B,EAAM2C,IAA5B,kBAAyC1C,GAAkB,GAC9E/B,QAAQ,YAAYK,MAAM,WAH5B,sBAURqK,GAAW9F,WAAa,CACtB9C,MAAO+C,IAAUC,MAAMC,WACvBhD,QAAS8C,IAAUC,MAAMC,YAG3B,IAUeC,gBAVS,SAAAC,GAAK,MAAK,CAChCnD,MAAOmD,EAAMC,OAAOpD,MACpBC,QAASkD,EAAMC,OAAOnD,QACtBE,KAAMgD,EAAMC,OAAOjD,KACnBC,YAAa+C,EAAMC,OAAOhD,gBAGD,SAAAG,GAAQ,OACjC8C,YAAmB,CAAChC,UAASC,WAAUf,KAE1B2C,CAA6C0F,I,UCnHtD1L,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPqE,OAAQ,OACRC,MAAO,SAGXyI,WAAY,CACVnI,UAAW,UAEboI,OAAQ,CACNpI,UAAW,SACXP,OAAQ,QAEVQ,OAAQ,CACNJ,UAAW,QAEbF,MAAO,CACLF,OAAQ,SACRG,aAAc,OACdC,UAAW,OACXH,MAAO,IACPI,OAAQ,SAINuI,GAAiB,SAAChI,GACtB,IAAM1E,EAAUV,KACR8C,EAAUsC,EAAVtC,MAER,OACE,kBAACuK,GAAA,EAAD,CAAMC,WAAS,EAAC3M,UAAWD,EAAQP,MACjC,kBAACkF,EAAA,EAAD,CAAW1E,UAAWD,EAAQgE,MAAOY,MAAM,sBAAsB9E,MAAM,0BACvE,wBAAIG,UAAWD,EAAQwM,YAAa9H,EAAMtC,MAAMyC,MAChD,uBAAG5E,UAAWD,EAAQwM,YAAa9H,EAAMtC,MAAM0C,QAC/C,kBAACzE,EAAA,EAAD,CAAYJ,UAAWD,EAAQyM,OAAQnM,QAAQ,MAA/C,oBACA,kBAACD,EAAA,EAAD,CAAYJ,UAAWD,EAAQwM,YAA/B,qCACA,kBAACnM,EAAA,EAAD,CAAYJ,UAAWD,EAAQwM,YAA/B,+EACA,kBAACjM,EAAA,EAAD,CAAQN,UAAWD,EAAQsE,OAAQ9D,UAAWC,IAAMC,GAAE,4BAAuB0B,EAAM2C,IAA7B,kBAA0C3C,EAAMC,QAASD,EAAMC,QAAS,GAAK/B,QAAQ,YAAYK,MAAM,WAA7J,sBAGA,kBAACJ,EAAA,EAAD,CAAQN,UAAWD,EAAQsE,OAAQ9D,UAAWC,IAAMC,GAAE,mBAAc0B,EAAM2C,IAApB,kBAAiC3C,EAAMC,SAAW/B,QAAQ,YAAYK,MAAM,WAAlI,oBAON+L,GAAexH,WAAa,CAC1B9C,MAAO+C,IAAUC,MAAMC,YAGzB,IAIeC,gBAJS,SAAAC,GAAK,MAAK,CAChCnD,MAAOmD,EAAMC,OAAOpD,SAGPkD,CAAyBoH,ICpCzBpH,gBAPS,SAAAC,GAAK,MAAK,CAChCnD,MAAOmD,EAAMC,OAAOpD,UAGK,SAAAO,GAAQ,OACjC8C,YAAmB,CAAChD,WAAUE,KAEjB2C,EA1BK,SAACZ,GAAW,IACtBtC,EAAUsC,EAAVtC,MADqB,EAEX8E,mBAASC,OAAOC,SAASC,KAAKC,MAAM,KAAK,IAAnDuF,EAFqB,oBAQ7B,OAJA5B,qBAAU,WACR9H,QAAQC,IAAIyJ,KACZ,CAACA,IAGD,6BACE,4BAAKzK,EAAMyC,MACX,2BAAIzC,EAAMxB,SACV,iDACA,2BAAIwB,EAAM0K,cACV,4BAAQhN,MAAM,OAAOiN,IAAI,uUAAuUhJ,MAAM,MAAMI,OAAO,MAAM6I,YAAY,IAAIC,cAAY,QAAQC,SAAS,U,qBCRta5N,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPqE,OAAQ,OACRC,MAAO,OACPoJ,YAAa,SAGjBX,WAAY,CACVY,OAAQ,YACR/I,UAAW,SACX+B,QAAS,UAEXqG,OAAQ,CACNpI,UAAW,SACXP,OAAQ,QAEVQ,OAAQ,CACNJ,UAAW,YAKTmJ,GAAgB,SAAC3I,GACrB,IAAM1E,EAAUV,KACR8C,EAAUsC,EAAVtC,MAEFkL,EAAW,CACfvJ,MAAO,IACPI,OAAQ,IACRS,MAAO,sBACP2I,cAAe,GACfC,WAAY,kBAAMrK,QAAQC,IAAI,4BAGhC,OACE,kBAACuJ,GAAA,EAAD,CAAMC,WAAS,EAAC3M,UAAWD,EAAQP,MACjC,kBAACY,EAAA,EAAD,CAAYJ,UAAWD,EAAQyM,OAAQnM,QAAQ,MAA/C,iCACA,kBAAC,KAAgBgN,EACf,kBAACjN,EAAA,EAAD,CAAYJ,UAAWD,EAAQwM,YAA/B,8CAIF,kBAACjM,EAAA,EAAD,CAAQN,UAAWD,EAAQsE,OAAQ9D,UAAWC,IAAMC,GAAE,mBAAc0B,EAAM2C,IAApB,kBAAiC3C,EAAMC,QAASD,EAAMC,QAAS,GAAK/B,QAAQ,YAAYK,MAAM,WAApJ,yBAON0M,GAAcnI,WAAa,CACzB9C,MAAO+C,IAAUC,MAAMC,YAGzB,IAIeC,gBAJS,SAAAC,GAAK,MAAK,CAChCnD,MAAOmD,EAAMC,OAAOpD,SAGPkD,CAAyB+H,IChDzBI,GAXG,kBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,UAAUnN,UAAWiE,IACvC,kBAAC,IAAD,CAAOiJ,OAAK,EAACC,KAAK,kBAAkBnN,UAAWyG,KAC/C,kBAAC,IAAD,CAAOyG,OAAK,EAACC,KAAK,0BAA0BnN,UAAW6M,KACvD,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,kBAAkBnN,UAAWkM,KAC/C,kBAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,mBAAmBnN,UAAWoN,KAChD,kBAAC,IAAD,CAAOF,OAAK,EAACG,KAAK,mBAAmBrN,UAAWwK,O,oKCS9C1L,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsO,IAAI,CACF1H,QAAS,QAEX7D,KAAM,CACJ4B,OAAQ,QAEV4J,MAAM,CACJjK,OAAQ,QAEVkK,UAAU,CACR5H,QAAS,QAEX6H,OAAQ,CACNC,IAAK,OACLC,OAAQ,GAEVC,KAAM,CACJ1O,SAAU,GAEZ2O,KAAM,CACJtK,MAAO,KAETK,OAAQ,CACNC,UAAW,SACXiK,eAAgB,UAElBC,QAAS,CACPzK,OAAQ,OACRsC,QAAS,OACTN,SAAU,aAIR0I,GAAS,SAAC9J,GAAW,IACjBtC,EAAUsC,EAAVtC,MADgB,EAEF8E,mBAASC,OAAOC,SAASC,KAAKC,MAAM,KAAK,IAAvD5E,EAFgB,sBAGJwE,mBAASC,OAAOC,SAASC,KAAKC,MAAM,UAAU,IAA1DjF,EAHgB,sBAKEoM,IAAMvH,UAAS,GALjB,mBAKjB3B,EALiB,KAKVmJ,EALU,KAMlB1O,EAAUV,KAEhB2L,qBAAU,WACRvG,EAAMjC,QAAQC,EAAWL,KACzB,CAACK,IAEH,IAAMiM,EAAe,SAACC,GAAD,OAAU,SAACzG,GAC9BuG,EAASE,KAGLP,EACJ,yBAAKpO,UAAWD,EAAQqO,KAAMrJ,QAAS2J,GAAa,GAAQE,KAAK,eAAeC,UAAWH,GAAa,IACtG,kBAACI,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAU1K,QAAM,EAAC9D,UAAWC,IAAMC,GAAE,mBAAc0B,EAAM2C,IAApB,kBAAiC1C,GAAkB,IACrF,kBAAC4M,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACC,GAAA,EAAD,CAAcC,QAAQ,eAExB,kBAACC,GAAA,EAAD,MACA,kBAACJ,GAAA,EAAD,CAAU1K,QAAM,EAAC9D,UAAWC,IAAMC,GAAE,4BAAuB0B,EAAM2C,IAA7B,kBAA0C1C,GAAkB,IAC9F,kBAAC4M,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACC,GAAA,EAAD,CAAcC,QAAQ,kBAExB,kBAACC,GAAA,EAAD,MACA,kBAACJ,GAAA,EAAD,CAAU1K,QAAM,EAAC9D,UAAWC,IAAMC,GAAG,KACnC,kBAACuO,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACC,GAAA,EAAD,CAAcC,QAAQ,0BAExB,kBAACC,GAAA,EAAD,QAIN,OACE,6BACE,kBAACC,GAAA,EAAD,MACA,kBAACnP,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACkP,GAAA,EAAD,CAAYtK,QAAS2J,GAAa,GAAOY,KAAK,QAAQtP,UAAWD,EAAQL,WAAYgB,MAAM,UAAUuJ,aAAW,QAC9G,kBAAC,KAAD,OAEF,kBAACsF,GAAA,EAAD,CAAQZ,KAAMrJ,EAAOkK,QAASd,GAAa,IACxCN,GAEH,kBAAChO,EAAA,EAAD,CAAYC,QAAQ,SAASL,UAAWD,EAAQ+N,OAC9C,kBAACxN,EAAA,EAAD,CAAQI,MAAM,UAAUH,UAAWC,IAAMC,GAAE,mBAAc0B,EAAM2C,IAApB,kBAAiC1C,GAAkB,IAA9F,mBAIN,yBAAKpC,UAAWD,EAAQuO,SACtB,kBAAC,GAAD,SAMRC,GAAOtJ,WAAa,CAClB9C,MAAO+C,IAAUC,MAAMC,WACvBhD,QAAS8C,IAAUC,MAAMC,YAG3B,IAQeC,gBARS,SAAAC,GAAK,MAAK,CAChCnD,MAAOmD,EAAMC,OAAOpD,MACpBC,QAASkD,EAAMC,OAAOnD,YAGG,SAAAM,GAAQ,OACjC8C,YAAmB,CAAChD,WAAUE,KAEjB2C,CAA6CkJ,ICrItDrM,GAAgB,CACpBuN,QAAS,GACTC,aAAa,EACbC,UAAU,GAEC7N,GACG,eADHA,GAEG,eAFHA,GAGI,gBAHJA,GAII,gBAiBJ4N,GAAc,SAACD,GAC1B,MAAM,CACJ3M,KAAMhB,GACN2N,QAASA,IAIAG,GAAc,WACzB,MAAO,CACL9M,KAAMhB,KAIG+N,GAAe,WAC1B,MAAO,CACL/M,KAAMhB,KAIGgO,GAAe,WAC1B,MAAO,CACLhN,KAAMhB,KC3CJA,GAEQ,WAFRA,GAGS,aAETI,GAAgB,CACpB6N,MAAO,GACPC,SAAU,GACVC,WAAY,IAsCDC,GAAc,SAACC,GAC1B,OAAO,SAAAzN,GACLzB,EAAI0B,IAAJ,oBAAqBwN,IACpBvN,MAAK,SAAAC,GACJH,EAAS,CACPI,KAAMhB,GACNkO,SAAUnN,EAASE,OAElBF,EAASE,KAAKE,OACfP,EACEgN,GAAY7M,EAASE,KAAKE,WAI/BD,OAAM,SAAAC,GACLP,EACEgN,GAAY,+CACZxM,QAAQC,IAAIF,SAMPmN,GAAa,SAACC,EAAMF,GAC/B,OAAO,SAAAzN,GACLzB,EAAIqP,IAAJ,oBAAqBH,GAAUE,GAC9BzN,MAAK,SAAAC,GACJH,EAAS,CACPI,KAAMhB,GACNkO,SAAUnN,EAASE,OAElBF,EAASE,KAAKE,MACfP,EACEgN,GAAY7M,EAASE,KAAKE,QAG5BP,EACEgN,GAAY,sCACZ/O,EAAQK,KAAR,iBAAuBmP,EAAvB,yBAILnN,OAAM,SAAAC,GACLP,EACEgN,GAAY,+CACZxM,QAAQC,IAAIF,SC3FdnB,GACY,iBADZA,GAEW,gBAFXA,GAGY,iBAHZA,GAIS,cAJTA,GAKW,gBALXA,GAMS,cAETI,GAAgB,CACpBqO,UAAW,GACXC,YAAa,GACbC,eAAgB,GAChBC,WAAY,GACZrO,QAAS,IAqBEsO,GAAgB,SAACC,EAAMC,GAClC,OAAO,SAAAnO,GACLzB,EAAI0B,IAAJ,4BAA6BiO,EAA7B,kBAA2CC,IAC1CjO,MAAK,SAAAC,GAAa,IAAD,EACQA,EAASE,KAAzB+N,EADQ,EACRA,KAAM3O,EADE,EACFA,MACdO,EAAS,CACPI,KAAMhB,GACNyO,UAAWO,EACXL,eAAgBtO,IAEfU,EAASE,KAAKE,OACfP,EACEgN,GAAY7M,EAASE,KAAKE,WAI/BD,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAKL8N,GAAa,SAACC,EAASb,GAClC,OAAO,SAAAzN,GACLzB,EAAIqC,KAAK,eAAgB0N,GACxBpO,MAAK,SAAAC,GACJH,EAAS,CACPI,KAAMhB,KAELe,EAASE,KAAKE,MACfP,EACEgN,GAAY7M,EAASE,KAAKE,SAG5BP,EACEgN,GAAY,sCAEd/O,EAAQK,KAAR,iBAAuBmP,EAAvB,yBAGHnN,OAAM,SAAAC,GACLP,EACEgN,GAAY,2CACZxM,QAAQC,IAAIF,SAMPgO,GAAiB,SAACxO,GAC7B,OAAO,SAAAC,GACLzB,EAAI0B,IAAJ,uBAAwBF,IACvBG,MAAK,SAAAC,GACJH,EAAS,CACPI,KAAMhB,GACN0O,YAAa3N,EAASE,UAGzBC,OAAM,SAAAC,GACLP,EACEgN,GAAY,2CACZxM,QAAQC,IAAIF,SAMPiO,GAAgB,SAACF,EAASvO,EAAW0N,GAChD,OAAO,SAAAzN,GACLzB,EAAIqP,IAAJ,uBAAwB7N,GAAauO,GACpCpO,MAAK,SAAAC,GACJH,EAAS,CACPI,KAAMhB,GACN0O,YAAa3N,EAASE,OAErBF,EAASE,KAAKE,MACfP,EACEgN,GAAY7M,EAASE,KAAKE,OAC1BtC,EAAQK,KAAR,oBAA0BmP,EAA1B,aAAqC1N,EAArC,sBAGFC,EACEgN,GAAY,qCACZ/O,EAAQK,KAAR,oBAA0BmP,EAA1B,aAAqC1N,EAArC,yBAILO,OAAM,SAAAC,GACLP,EACEgN,GAAY,2CACZxM,QAAQC,IAAIF,SAMPkO,GAAe,WAC1B,MAAO,CACLrO,KAAMhB,KAIGsP,GAAa,SAACJ,GACzB,OAAO,SAAAtO,GACLzB,EAAIqP,IAAJ,uBAAwBU,EAAQlM,KAAOkM,GACtCpO,MAAK,SAAAC,GACJH,EAAS,CACPI,KAAMhB,KAELe,EAASE,KAAKE,OACfP,EACEgN,GAAY7M,EAASE,KAAKE,WAI/BD,OAAM,SAAAC,GACLP,EACEgN,GAAY,2CACZxM,QAAQC,IAAIF,S,kDC1Id5D,GAAYC,aAAW,SAACC,GAAD,MAAW,CACtCC,KAAM,CACJC,SAAU,GAEZyM,KAAM,CACJ/F,QAAS5G,EAAMK,QAAQ,GACvBwE,UAAW,SACX1D,MAAOnB,EAAM8R,QAAQC,KAAKC,WAE5BpN,OAAQ,CACNkK,eAAgB,SAChBjK,UAAW,SACXP,OAAQ,QAEVQ,OAAQ,CACNR,OAAQ,YAIN2N,GAAY,SAAC/M,GACjB,IAAM1E,EAAUV,KAERkR,EAA8B9L,EAA9B8L,UAAWE,EAAmBhM,EAAnBgM,eAHQ,EAITxJ,mBAASC,OAAOC,SAASC,KAAKC,MAAM,MAAM,GAAGA,MAAM,KAAK,IAAlEuF,EAJmB,oBAKrB6E,EAAWhB,EAAeiB,MALL,EAMHzK,mBAAS,GANN,mBAMpB2J,EANoB,KAMde,EANc,OAOM1K,mBAAS,IAPf,mBAOpB4J,EAPoB,UAS3B7F,qBAAU,WACRvG,EAAMkM,cAAcC,EAAMC,KAC1B,CAACD,EAAMC,IAET,IAQMe,EACJ,kBAAC,IAAMC,SAAP,KACGtB,EAAUlF,KAAK,SAAA2F,GACZ,OACE,kBAACtE,GAAA,EAAD,CAAMlB,IAAKwF,EAAQlM,IAAKoH,MAAI,EAAC4F,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAC7C,yBAAKhS,UAAWD,EAAQmM,MACtB,kBAAC+F,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAgB3R,UAAWC,IAAMC,GAAE,oBAAemM,EAAf,aAAyBoE,EAAQlM,IAAjC,iBAA6C8L,EAA7C,kBAA2DC,IAC5F,kBAACsB,GAAA,EAAD,KACE,kBAAC/R,EAAA,EAAD,CAAYgS,QAAM,EAAC/R,QAAQ,KAAKE,UAAU,MACvCyQ,EAAQpM,MAEX,kBAACxE,EAAA,EAAD,CAAYgS,QAAM,EAAC/R,QAAQ,QAAQK,MAAM,gBAAgBH,UAAU,KAChEyQ,EAAQqB,QAAQC,KADnB,MAC4BtB,EAAQqB,QAAQ/M,SAIhD,kBAACiN,GAAA,EAAD,CAAavS,UAAWD,EAAQoE,QAC9B,kBAAC7D,EAAA,EAAD,CAAQC,UAAWC,IAAMC,GAAE,oBAAemM,EAAf,aAAyBoE,EAAQlM,IAAjC,iBAA6C8L,EAA7C,kBAA2DC,GAAYxQ,QAAQ,YAAYK,MAAM,WAA5H,qBAalB,OACE,yBAAKV,UAAWD,EAAQP,MACtB,kBAACY,EAAA,EAAD,CAAYJ,UAAWD,EAAQoE,OAAQ9D,QAAQ,KAAKE,UAAU,MAA9D,cACA,kBAACD,EAAA,EAAD,CAAQN,UAAWD,EAAQsE,OAAQ9D,UAAWC,IAAMC,GAAE,+BAA0BmM,GAASvM,QAAQ,YAAYK,MAAM,WAAnH,uBAGA,kBAACgM,GAAA,EAAD,CAAMC,WAAS,EAACT,MAAI,EAAC8F,GAAI,GAAIpS,QAAS,GACnCgS,GAEH,kBAAClF,GAAA,EAAD,CAAM1M,UAAWD,EAAQoE,OAAQwI,WAAS,EAACT,MAAI,EAAC8F,GAAI,GAAIpS,QAAS,GAC/D,kBAAC2J,EAAA,EAAD,CAAKhJ,UAAU,QACb,kBAACiS,GAAA,EAAD,CACEC,MAAOhB,EACPb,KAAMA,EACNrK,SArDS,SAAC2B,EAAOrB,GACzB8K,EAAQ9K,UA4DZ2K,GAAUvM,WAAa,CACrBsL,UAAWrL,IAAUC,MAAMC,WAC3BqL,eAAgBvL,IAAUC,MAAMC,YAGlC,IAUeC,gBAVS,SAAAC,GAAK,MAAK,CAChCiL,UAAWjL,EAAM0L,QAAQT,UACzBE,eAAgBnL,EAAM0L,QAAQP,mBAGL,SAAA/N,GAAQ,OACjC8C,YAAmB,CACjBmL,kBACCjO,KAEU2C,CAA6CmM,I,kBCjHtDnS,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVuE,aAAc,GAEhBK,OAAQ,CACNqO,MAAO,QACP7O,OAAQ,GAEV8O,MAAO,CACL9O,OAAQ,OACRC,MAAO,IACPI,OAAQ,KAEV0O,KAAM,CACJ5O,aAAc,IAEhBG,OAAQ,CACNN,OAAQ,QAEVZ,MAAO,CACLvC,MAAO,MACPqF,SAAU,IAEZ8M,KAAM,CACJxE,eAAgB,SAChBlI,QAAS,OAIP2M,GAAkB,SAACrO,GAAW,IAC1B6B,EAAiC7B,EAAjC6B,SAAUC,EAAuB9B,EAAvB8B,SAAaC,EADE,YACQ/B,EADR,yBAEjC,OACE,kBAAC,IAAD,iBACM+B,EADN,CAEEC,YAAaH,EACbI,cAAe,SAACC,GACdJ,EAAS,CACPK,OAAQ,CACNhC,KAAMH,EAAMG,KACZiC,MAAOF,EAAOE,UAIpBC,iBAAe,EACfC,OAAO,gBAWPgM,GAAkB,SAACtO,GAAW,IAC1B6B,EAAiC7B,EAAjC6B,SAAUC,EAAuB9B,EAAvB8B,SAAaC,EADE,YACQ/B,EADR,yBAEjC,OACE,kBAAC,IAAD,iBACM+B,EADN,CAEEC,YAAaH,EACbI,cAAe,SAACC,GACdJ,EAAS,CACPK,OAAQ,CACNhC,KAAMH,EAAMG,KACZiC,MAAOF,EAAOE,UAIpBC,iBAAe,EACfC,OAAO,qBAWPiM,GAAoB,SAACvO,GAAW,IAC5B6B,EAAiC7B,EAAjC6B,SAAUC,EAAuB9B,EAAvB8B,SAAaC,EADI,YACM/B,EADN,yBAEnC,OACE,kBAAC,IAAD,iBACM+B,EADN,CAEEC,YAAaH,EACbI,cAAe,SAACC,GACdJ,EAAS,CACPK,OAAQ,CACNhC,KAAMH,EAAMG,KACZiC,MAAOF,EAAOE,UAIpBC,iBAAe,EACfC,OAAO,qBAWPkM,GAAY,SAACxO,GACjB,IAAM1E,EAAUV,KACR2Q,EAAavL,EAAbuL,SAFmB,EAIX/I,mBAASC,OAAOC,SAASC,KAAKC,MAAM,MAAM,IAAnDuF,EAJoB,oBA0B3B,OAJA5B,qBAAU,WACRvG,EAAMyL,YAAYtD,KAClB,IAGA,6BACE,kBAAC,KAAD,CACEsG,cAAgBlD,EAASlL,IAAKkL,EAxBX,CACvBmD,MAAO,GACPvO,KAAM,GACNwO,IAAK,GACLtL,MAAO,GACPuK,QAAS,CACP/M,MAAO,GACPgN,KAAM,GACNe,OAAQ,GACRC,OAAQ,GACRxQ,KAAM,GACNyQ,SAAU,GACVC,IAAK,GACLC,IAAK,KAYHC,oBAAkB,EAClBC,iBAAkBC,KAAW,CAC3BT,MAAOS,OACJC,SAAS,yBACZjP,KAAMgP,OACHC,SAAS,wBACZT,IAAKQ,OACFC,SAAS,uBACZ/L,MAAO8L,OACJC,SAAS,4BACZxB,QAASuB,KAAW,CAClBJ,IAAKI,OACFC,SAAS,oBACZR,OAAQO,OACLC,SAAS,oBACZN,SAAUK,OACPC,SAAS,uBACZvB,KAAMsB,OACHC,SAAS,uBACZvO,MAAOsO,OACJC,SAAS,uBACZP,OAAQM,OACLC,SAAS,0BACZ/Q,KAAM8Q,OACHC,SAAS,0BACZJ,IAAKG,OACFC,SAAS,8BAIhBzL,SAAU,SAACzB,GAAY,IACb/B,EAA4B+B,EAA5B/B,KAAMuO,EAAsBxM,EAAtBwM,MAAOrL,EAAenB,EAAfmB,MAAOsL,EAAQzM,EAARyM,IADR,EAE8CzM,EAAO0L,QAEnEyB,EAAa,CAAElP,OAAMuO,QAAOC,MAAKtL,QAAOuK,QAD9B,CAAC/M,MAHG,EAEZA,MACgBgN,KAHJ,EAELA,KACee,OAHV,EAECA,OACiBC,OAHlB,EAESA,OACiBxQ,KAH1B,EAEiBA,KACeyQ,SAHhC,EAEuBA,SACmBC,IAH1C,EAEiCA,IACcC,IAH/C,EAEsCA,MAG1DhP,EAAM2L,WAAW0D,EAAY9D,EAASlL,QAEvC,SAAAiP,GAAM,OACL,kBAAC9B,GAAA,EAAD,KACE,0BAAM7J,SAAU2L,EAAOC,cACrB,uBAAG3H,MAAO,CAACxI,OAAQ,KAAnB,0BACA,kBAAC6I,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAMC,WAAS,EAACT,MAAI,EAACtM,QAAS,EAAGI,UAAWD,EAAQ8S,MAClD,kBAACnG,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,QACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,OACLkE,WAAY,CAAEC,UAAW,IACzBmL,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,UAE3B,6BACGL,EAAOM,QAAQzP,MAAQmP,EAAOO,OAAO1P,KACpC,kBAACxE,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAO1P,MACnD,OAGR,kBAAC8H,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,OACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,MACLoE,WAAY,CAACC,eAAgB8J,IAC7BmB,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,SAE3B,6BACGL,EAAOM,QAAQjB,KAAOW,EAAOO,OAAOlB,IACnC,kBAAChT,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOlB,KACnD,OAGR,kBAAC1G,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,SACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,QACLkE,WAAY,CAAEC,UAAW,IACzBmL,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,WAE3B,6BACGL,EAAOM,QAAQlB,OAASY,EAAOO,OAAOnB,MACrC,kBAAC/S,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOnB,OACnD,OAGR,kBAACzG,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,YACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,QACLoE,WAAY,CAACC,eAAgB+J,IAC7BkB,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,WAE3B,6BACGL,EAAOM,QAAQvM,OAASiM,EAAOO,OAAOxM,MACrC,kBAAC1H,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOxM,OACnD,QAIV,uBAAGuE,MAAO,CAACxI,OAAQ,KAAnB,eACA,kBAAC6I,GAAA,EAAD,CAAMC,WAAS,EAACT,MAAI,EAACtM,QAAS,EAAGI,UAAWD,EAAQ8S,MAClD,kBAACnG,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,OACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,cACLoE,WAAY,CAACC,eAAgB6J,IAC7BoB,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,iBAE3B,6BACGL,EAAOM,QAAQhC,SAAW0B,EAAOO,OAAOjC,QACvC,kBAACjS,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOjC,QAAQmB,KAC3D,OAGR,kBAAC9G,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,OACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,iBACLkE,WAAY,CAAEC,UAAW,IACzBmL,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,oBAE3B,6BACGL,EAAOM,QAAQhC,SAAW0B,EAAOO,OAAOjC,QACvC,kBAACjS,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOjC,QAAQgB,QAC3D,OAGR,kBAAC3G,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,UACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,mBACLkE,WAAY,CAAEC,UAAW,IACzBmL,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,sBAE3B,6BACGL,EAAOM,QAAQhC,SAAW0B,EAAOO,OAAOjC,QACvC,kBAACjS,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOjC,QAAQkB,UAC3D,OAGR,kBAAC7G,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,UACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,eACLkE,WAAY,CAAEC,UAAW,IACzBmL,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,kBAE3B,6BACGL,EAAOM,QAAQhC,SAAW0B,EAAOO,OAAOjC,QACvC,kBAACjS,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOjC,QAAQC,MAC3D,OAGR,kBAAC5F,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,UACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,gBACLkE,WAAY,CAAEC,UAAW,IACzBmL,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,mBAE3B,6BACGL,EAAOM,QAAQhC,SAAW0B,EAAOO,OAAOjC,QACvC,kBAACjS,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOjC,QAAQ/M,OAC3D,OAGR,kBAACoH,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,aACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,iBACLkE,WAAY,CAAEC,UAAW,GACzBmL,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,oBAE3B,6BACGL,EAAOM,QAAQhC,SAAW0B,EAAOO,OAAOjC,QACvC,kBAACjS,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOjC,QAAQiB,QAC3D,OAGR,kBAAC5G,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,QACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,eACLkE,WAAY,CAAEC,UAAW,IACzBmL,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,kBAE3B,6BACGL,EAAOM,QAAQhC,SAAW0B,EAAOO,OAAOjC,QACvC,kBAACjS,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOjC,QAAQvP,MAC3D,OAGR,kBAAC4J,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,eACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,cACLkE,WAAY,CAAEC,UAAW,IACzBmL,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,iBAE3B,6BACGL,EAAOM,QAAQhC,SAAW0B,EAAOO,OAAOjC,QACvC,kBAACjS,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOjC,QAAQoB,KAC3D,QAIV,kBAAC/G,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,IACb,kBAAC7C,GAAA,EAAD,MACA,kBAAC7O,EAAA,EAAD,CAAQwC,KAAK,SAAS9C,UAAWD,EAAQsE,OAAQhE,QAAQ,YAAYK,MAAM,WAA3E,aAGA,kBAACJ,EAAA,EAAD,CAAQN,UAAWD,EAAQsE,OAAQ9D,UAAWC,IAAMC,GAAE,iBAAYuP,EAASlL,IAArB,oBAA4CzE,QAAQ,WAAWK,MAAM,WAA3H,qBAalBuS,GAAUhO,WAAa,CACrB+K,SAAU9K,IAAUC,MAAMC,YAG5B,IAOeC,gBAPS,SAAAC,GAAK,MAAK,CAChC0K,SAAU1K,EAAM+K,KAAKL,aAGI,SAAAtN,GAAQ,OACjC8C,YAAmB,CAAE0K,eAAaE,eAAc1N,KAEnC2C,CAA6C4N,I,qBChatD5T,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVuE,aAAc,GAEhBuQ,OAAO,CACLnQ,UAAW,SACXyB,SAAU,QACVhC,OAAQ,QAEVQ,OAAQ,CACNqO,MAAO,QACP7O,OAAQ,GAEV2Q,SAAU,CACR3Q,OAAQ,MACRsC,QAAS,MACTJ,SAAU,OACVjC,MAAO,QAET2Q,YAAY,CACV5Q,OAAQ,MACRsC,QAAS,MACTJ,SAAU,OACVjC,MAAO,SAET6O,MAAO,CACL9O,OAAQ,OACRC,MAAO,IACPI,OAAQ,KAEVwQ,SAAU,CACR1Q,aAAc,QAEhB4O,KAAM,CACJ5O,aAAc,IAEhB2Q,WAAY,CACVtG,eAAgB,UAElBtK,MAAO,CACLC,aAAc,MACdF,MAAO,IACPI,OAAQ,KAEVC,OAAQ,CACNN,OAAQ,QAEVZ,MAAO,CACLvC,MAAO,MACPqF,SAAU,IAEZ8M,KAAM,CACJxE,eAAgB,SAChBlI,QAAS,GAEX7B,KAAM,CACJC,QAAS,QAEXqQ,YAAa,CACXxQ,UAAW,SACXyB,SAAU,QACVhC,OAAQ,QAEVgR,OAAQ,CACN/Q,MAAO,QAETjE,MAAO,CACLgE,OAAQ,YAINiP,GAAkB,SAACrO,GAAW,IAC1B6B,EAAiC7B,EAAjC6B,SAAUC,EAAuB9B,EAAvB8B,SAAaC,EADE,YACQ/B,EADR,yBAEjC,OACE,kBAAC,IAAD,iBACM+B,EADN,CAEEC,YAAaH,EACbI,cAAe,SAACC,GACdJ,EAAS,CACPK,OAAQ,CACNhC,KAAMH,EAAMG,KACZiC,MAAOF,EAAOE,UAIpBC,iBAAe,EACfC,OAAO,gBAWP+N,GAAmB,SAACrQ,GAAW,IAC3B6B,EAAiC7B,EAAjC6B,SAAUC,EAAuB9B,EAAvB8B,SAAaC,EADG,YACO/B,EADP,yBAElC,OACE,kBAAC,IAAD,iBACM+B,EADN,CAEEC,YAAaH,EACbI,cAAe,SAACC,GACdJ,EAAS,CACPK,OAAQ,CACNhC,KAAMH,EAAMG,KACZiC,MAAOF,EAAOE,UAIpBC,iBAAe,EACfC,OAAO,yBAWPiM,GAAoB,SAACvO,GAAW,IAC5B6B,EAAiC7B,EAAjC6B,SAAUC,EAAuB9B,EAAvB8B,SAAaC,EADI,YACM/B,EADN,yBAEnC,OACE,kBAAC,IAAD,iBACM+B,EADN,CAEEC,YAAaH,EACbI,cAAe,SAACC,GACdJ,EAAS,CACPK,OAAQ,CACNhC,KAAMH,EAAMG,KACZiC,MAAOF,EAAOE,UAIpBC,iBAAe,EACfC,OAAO,qBAWPgO,GAAe,SAACtQ,GACpB,IAAM1E,EAAUV,KACRmR,EAAgB/L,EAAhB+L,YAFsB,EAIbvJ,mBAASC,OAAOC,SAASC,KAAKC,MAAM,MAAM,IAApD8I,EAJuB,sBAKVlJ,mBAASC,OAAOC,SAASC,KAAKC,MAAM,MAAM,IAAvD5E,EALuB,sBA2BAwE,mBAAS,GA3BT,mBA2BtB4N,EA3BsB,KA2BdG,EA3Bc,KAwC9B,OARAhK,qBAAU,WACLvI,EACDgC,EAAMwM,eAAexO,GAErBgC,EAAM0M,iBAER,IAGA,6BACE,kBAACc,GAAA,EAAD,CAAMjS,UAAWD,EAAQ2U,UACvB,kBAAChI,GAAA,EAAD,CAAMC,WAAS,EAAC3M,UAAWD,EAAQ4U,YACjC,kBAACjI,GAAA,EAAD,CAAM1M,UAAWD,EAAQwU,OAAQrI,MAAI,GACnC,kBAACxH,EAAA,EAAD,CACE1E,UAAWD,EAAQgE,MACnBY,MAAM,sBACN9E,MAAM,0BAER,2BACEoV,OAAO,UACPjV,UAAWD,EAAQmV,MACnB7I,MAAO,CAAE9H,QAAS,QAClBsE,GAAG,qBACHsM,UAAQ,EACRrS,KAAK,SAEP,kBAAC1C,EAAA,EAAD,CAAYJ,UAAWD,EAAQF,OAA/B,eACA,2BAAOuV,QAAQ,sBACb,kBAAC9U,EAAA,EAAD,CAAQN,UAAWD,EAAQ0U,YAAapU,QAAQ,WAAWE,UAAU,OAAOG,MAAM,WAAlF,kBAKJ,kBAACgM,GAAA,EAAD,CAAM1M,UAAWyC,EAAY1C,EAAQwU,OAASxU,EAAQuE,KAAM4H,MAAI,GAC9D,kBAAC,KAAD,CAAQrF,MAAK,kDAA6CpE,EAA7C,cACb,kBAACrC,EAAA,EAAD,CAAYJ,UAAWD,EAAQF,OAA/B,iBACA,kBAACS,EAAA,EAAD,CAAQ+U,IAAI,sBAAsBrV,UAAWD,EAAQyU,SAAU5N,OAAO,SAASQ,KAAI,iDAA4C3E,EAA5C,YAAiEpC,QAAQ,YAAYK,MAAM,WAA9K,cAGA,kBAACJ,EAAA,EAAD,CAAQ+U,IAAI,sBAAsBrV,UAAWD,EAAQyU,SAAU5N,OAAO,SAASQ,KAAI,iDAA4C3E,EAA5C,YAAiEpC,QAAQ,WAAWK,MAAM,WAA7K,aAIF,kBAACgM,GAAA,EAAD,CAAM1M,UAAWyC,EAAY1C,EAAQ6U,YAAc7U,EAAQuE,KAAM4H,MAAI,GACnE,kBAAC,KAAD,CAAQrF,MAAK,kDAA6CpE,EAA7C,kBAAgEoS,KAC7E,kBAACzU,EAAA,EAAD,CAAYJ,UAAWD,EAAQF,OAA/B,oBACA,kBAAC6I,EAAA,EAAD,CACE1I,UAAWD,EAAQ8U,OACnBhM,GAAG,kBACHF,MAAM,gBACN7F,KAAK,SACL+D,MAAOgO,EACPtO,SAxDQ,SAAC2B,GACnB8M,EAAU9M,EAAMtB,OAAOC,QAwDbuC,KAAK,QACL8K,gBAAiB,CACfC,QAAQ,KAGZ,kBAAC7T,EAAA,EAAD,CAAQ+U,IAAI,sBAAsBrV,UAAWD,EAAQyU,SAAU5N,OAAO,SAASQ,KAAI,iDAA4C3E,EAA5C,kBAA+DoS,GAAUxU,QAAQ,YAAYK,MAAM,WAAtL,cAGA,kBAACJ,EAAA,EAAD,CAAQ+U,IAAI,sBAAsBrV,UAAWD,EAAQyU,SAAU5N,OAAO,SAASQ,KAAI,iCAA4B3E,EAA5B,YAAiDpC,QAAQ,WAAWK,MAAM,WAA7J,eAON,kBAAC,KAAD,CACEwS,cAAgBzQ,EAAW+N,EA9FR,CACvB5L,KAAM,GACN0Q,KAAM,GACNzQ,OAAQ,GACRlE,QAAS,GACTkM,aAAc,GACdsG,MAAO,GACPrL,MAAO,GACPuK,QAAS,CACP/M,MAAO,GACPgN,KAAM,GACNe,OAAQ,GACRC,OAAQ,GACRxQ,KAAM,GACNyQ,SAAU,GACVC,IAAK,GACLC,IAAK,KA+EHC,oBAAkB,EAClBC,iBAAkBC,KAAW,CAC3BhP,KAAMgP,OACHC,SAAS,wBACZyB,KAAM1B,OACHC,SAAS,wBACZhP,OAAQ+O,OACLC,SAAS,yBACZlT,QAASiT,OACNC,SAAS,8BACZhH,aAAc+G,OACXC,SAAS,oCACZV,MAAOS,OACJC,SAAS,yBACZ/L,MAAO8L,OACJC,SAAS,4BACZxB,QAASuB,KAAW,CAClBJ,IAAKI,OACFC,SAAS,oBACZR,OAAQO,OACLC,SAAS,oBACZN,SAAUK,OACPC,SAAS,uBACZvB,KAAMsB,OACHC,SAAS,uBACZvO,MAAOsO,OACJC,SAAS,uBACZP,OAAQM,OACLC,SAAS,8BAIhBzL,SAAU,SAACzB,GACT,GAAG6J,EAAY1L,IAAI,CAAC,IACVF,EAA4D+B,EAA5D/B,KAAMC,EAAsD8B,EAAtD9B,OAAQlE,EAA8CgG,EAA9ChG,QAASkM,EAAqClG,EAArCkG,aAAcsG,EAAuBxM,EAAvBwM,MAAOmC,EAAgB3O,EAAhB2O,KAAMxN,EAAUnB,EAAVmB,MADzC,EAEiDnB,EAAO0L,QAEnEkD,EAAgB,CAAE3Q,OAAMC,SAAQlE,UAASkM,eAAcsG,QAAOmC,OAAMxN,QAAOuK,QADjE,CAAC/M,MAHA,EAETA,MACgBgN,KAHP,EAEFA,KACee,OAHb,EAEIA,OACiBC,OAHrB,EAEYA,OACiBxQ,KAH7B,EAEoBA,KACeyQ,SAHnC,EAE0BA,SACmBC,IAH7C,EAEoCA,IACcC,IAHlD,EAEyCA,MAG1DhP,EAAMyM,cAAcqE,EAAe/E,EAAY1L,IAAKqL,QAEpD1L,EAAMsM,WAAWpK,EAAQwJ,MAG5B,SAAA4D,GAAM,OACL,kBAAC9B,GAAA,EAAD,KACE,0BAAM7J,SAAU2L,EAAOC,cACrB,uBAAG3H,MAAO,CAACxI,OAAQ,KAAnB,sBACA,kBAAC6I,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAMC,WAAS,EAACT,MAAI,EAACtM,QAAS,EAAGI,UAAWD,EAAQ8S,MAClD,kBAACnG,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,QACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,OACLkE,WAAY,CAAEC,UAAW,IACzBmL,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,UAE3B,6BACGL,EAAOM,QAAQzP,MAAQmP,EAAOO,OAAO1P,KACpC,kBAACxE,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAO1P,MACnD,OAGR,kBAAC8H,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,UACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,SACLkE,WAAY,CAAEC,UAAW,IACzBmL,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,YAE3B,6BACGL,EAAOM,QAAQxP,QAAUkP,EAAOO,OAAOzP,OACtC,kBAACzE,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOzP,QACnD,OAGR,kBAAC6H,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,eACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,UACLkE,WAAY,CAAEC,UAAW,KACzBmL,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,aAE3B,6BACGL,EAAOM,QAAQ1T,SAAWoT,EAAOO,OAAO3T,QACvC,kBAACP,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAO3T,SACnD,OAGR,kBAAC+L,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,qBACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,eACLkE,WAAY,CAAEC,UAAW,KACzBmL,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,kBAE3B,6BACGL,EAAOM,QAAQxH,cAAgBkH,EAAOO,OAAOzH,aAC5C,kBAACzM,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOzH,cACnD,OAGR,kBAACH,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,SACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,QACLkE,WAAY,CAAEC,UAAW,IACzBmL,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,WAE3B,6BACGL,EAAOM,QAAQlB,OAASY,EAAOO,OAAOnB,MACrC,kBAAC/S,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOnB,OACnD,OAGR,kBAACzG,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,YACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,QACLoE,WAAY,CAACC,eAAgB+J,IAC7BkB,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,WAE3B,6BACGL,EAAOM,QAAQvM,OAASiM,EAAOO,OAAOxM,MACrC,kBAAC1H,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOxM,OACnD,OAGR,kBAAC4E,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,QACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,OACLoE,WAAY,CAACC,eAAgB6L,IAC7BZ,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,UAE3B,6BACGL,EAAOM,QAAQiB,MAAQvB,EAAOO,OAAOgB,KACpC,kBAAClV,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOgB,MACnD,QAIV,uBAAGjJ,MAAO,CAACxI,OAAQ,KAAnB,eACA,kBAAC6I,GAAA,EAAD,CAAMC,WAAS,EAACT,MAAI,EAACtM,QAAS,EAAGI,UAAWD,EAAQ8S,MAClD,kBAACnG,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,OACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,cACLoE,WAAY,CAACC,eAAgB6J,IAC7BoB,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,iBAE3B,6BACGL,EAAOM,QAAQhC,SAAW0B,EAAOO,OAAOjC,QACvC,kBAACjS,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOjC,QAAQmB,KAC3D,OAGR,kBAAC9G,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,OACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,iBACLkE,WAAY,CAAEC,UAAW,IACzBmL,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,oBAE3B,6BACGL,EAAOM,QAAQhC,SAAW0B,EAAOO,OAAOjC,QACvC,kBAACjS,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOjC,QAAQgB,QAC3D,OAGR,kBAAC3G,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,UACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,mBACLkE,WAAY,CAAEC,UAAW,IACzBmL,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,sBAE3B,6BACGL,EAAOM,QAAQhC,SAAW0B,EAAOO,OAAOjC,QACvC,kBAACjS,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOjC,QAAQkB,UAC3D,OAGR,kBAAC7G,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,UACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,eACLkE,WAAY,CAAEC,UAAW,IACzBmL,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,kBAE3B,6BACGL,EAAOM,QAAQhC,SAAW0B,EAAOO,OAAOjC,QACvC,kBAACjS,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOjC,QAAQC,MAC3D,OAGR,kBAAC5F,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,UACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,gBACLkE,WAAY,CAAEC,UAAW,IACzBmL,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,mBAE3B,6BACGL,EAAOM,QAAQhC,SAAW0B,EAAOO,OAAOjC,QACvC,kBAACjS,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOjC,QAAQ/M,OAC3D,OAGR,kBAACoH,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,GACb,kBAACtJ,EAAA,EAAD,eACErI,QAAQ,WACRsI,MAAM,aACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,iBACLkE,WAAY,CAAEC,UAAW,IACzBmL,gBAAiB,CAAEC,QAAQ,IACvBJ,EAAOK,cAAc,oBAE3B,6BACGL,EAAOM,QAAQhC,SAAW0B,EAAOO,OAAOjC,QACvC,kBAACjS,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOjC,QAAQiB,QAC3D,QAIV,kBAAC5G,GAAA,EAAD,CAAMR,MAAI,EAAC8F,GAAI,IACb,kBAAC7C,GAAA,EAAD,MACA,kBAAC7O,EAAA,EAAD,CAAQwC,KAAK,SAAS9C,UAAWD,EAAQsE,OAAQhE,QAAQ,YAAYK,MAAM,WACxE+B,EAAW,YAAa,UAE3B,kBAACnC,EAAA,EAAD,CAAQN,UAAWD,EAAQsE,OAAQ9D,UAAWC,IAC5CC,GAAIgC,EAAU,aAAD,OAAe0N,EAAf,aAA0B1N,EAA1B,qCAAkE0N,EAAlE,oBAA4F9P,QAAQ,WAAWK,MAAM,WADpI,qBAclBqU,GAAa9P,WAAa,CACxBuL,YAAatL,IAAUC,MAAMC,YAG/B,IAYeC,gBAZS,SAAAC,GAAK,MAAK,CAChCkL,YAAalL,EAAM0L,QAAQR,gBAGF,SAAA9N,GAAQ,OACjC8C,YAAmB,CACjBuL,cACAE,kBACAC,iBACAC,iBACCzO,KAEU2C,CAA6C0P,IC/iB7CS,GAVI,WACjB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO/H,OAAK,EAACC,KAAK,QAAQnN,UAAWiR,KACrC,kBAAC,IAAD,CAAO/D,OAAK,EAACC,KAAK,cAAcnN,UAAW0S,KAC3C,kBAAC,IAAD,CAAOxF,OAAK,EAACC,KAAK,sBAAsBnN,UAAWwU,O,wCCsB1C1P,gBARS,SAAAC,GAAK,MAAK,CAChCmQ,WAAYnQ,EAAMmK,QAAQC,YAC1BD,QAASnK,EAAMmK,QAAQA,YAGE,SAAA/M,GAAQ,OACjC8C,YAAmB,CAACkK,eAAaE,gBAAclN,KAElC2C,EA3BO,SAACZ,GACrB,OACE,6BACE,kBAACiR,GAAA,EAAD,CAAQ/G,KAAMlK,EAAMgR,WAAY1Q,QAAS,kBAAKN,EAAMmL,aAAaJ,QAAS/K,EAAMmL,aAC9E,kBAAC+F,GAAA,EAAD,sBAGA,kBAACC,GAAA,EAAD,KACGnR,EAAMgL,SAET,kBAACoG,GAAA,EAAD,CAAe9Q,QAAS,kBAAKN,EAAMmL,cACjC,kBAACtP,EAAA,EAAD,CAAQyE,QAASN,EAAMmL,aAAvB,gB,mFCMJvQ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ+E,QAAS,QAEXuR,QAAS,CACPC,aAAc,IAEhBlW,MAAO,CACLJ,SAAU,EACVuW,eAAgB,QAElBrJ,UAAW,CACTsJ,WAAY1W,EAAMK,QAAQ,GAC1BsW,cAAe3W,EAAMK,QAAQ,IAE/BuW,QAAS,CACPJ,aAAc,IAEhBK,aAAc7W,EAAM8W,OAAOP,QAC3BxH,QAAS,CACP7O,SAAU,EACVyE,OAAQ,QACRoS,SAAU,YAIRC,GAAO,SAAC9R,GACZ,IAAM1E,EAAUV,KADM,EAEH4H,mBAASC,OAAOC,SAASC,KAAKC,MAAM,MAAM,GAAGA,MAAM,KAAK,IAAnE8I,EAFc,oBAGdH,EAAavL,EAAbuL,SAMR,OAJAhF,qBAAU,WACRvG,EAAMyL,YAAYC,KAClB,IAGA,6BACE,yBAAKnQ,UAAWD,EAAQP,MACtB,kBAAC4P,GAAA,EAAD,MACA,kBAACnP,EAAA,EAAD,CAAQC,SAAS,YACf,kBAACC,EAAA,EAAD,CAASH,UAAWD,EAAQ+V,SAC1B,kBAAC1V,EAAA,EAAD,CAAYG,UAAWC,IAAMC,GAAE,iBAAYuP,EAASlL,IAArB,oBAA4CzE,QAAQ,KAAKK,MAAM,UAAU0R,QAAM,EAACpS,UAAWD,EAAQF,OAAlI,gBAGA,yBAAKG,UAAWD,EAAQoW,SAAUnG,EAASpL,MAC3C,kBAACyK,GAAA,EAAD,CAAYpF,aAAW,yBAAmBvJ,MAAM,WAC9C,kBAAC8V,GAAA,EAAD,CAAOC,aAAc,EAAG/V,MAAM,aAC5B,kBAAC,KAAD,QAGJ,kBAAC2O,GAAA,EAAD,CAAY9O,UAAWC,IAAMC,GAAE,uBAAkBuP,EAASlL,KAAOpE,MAAM,WACrE,kBAAC,KAAD,OAEF,kBAAC2O,GAAA,EAAD,CAAYtK,QAAS,kBAAIlE,KAAcH,MAAM,WAC3C,kBAAC,KAAD,SAIN,0BAAMV,UAAWD,EAAQuO,SACvB,yBAAKtO,UAAWD,EAAQqW,eACxB,kBAACM,GAAA,EAAD,CAAW7Q,SAAS,KAAK7F,UAAWD,EAAQ4M,WAC1C,kBAACD,GAAA,EAAD,KACE,kBAAC,GAAD,UAKR,kBAAC,GAAD,QAKN6J,GAAKtR,WAAa,CAChB+K,SAAU9K,IAAUC,MAAMC,YAG5B,IAOeC,gBAPS,SAAAC,GAAK,MAAK,CAChC0K,SAAU1K,EAAM+K,KAAKL,aAGI,SAAAtN,GAAQ,OACjC8C,YAAmB,CAAE0K,gBAAexN,KAEvB2C,CAA6CkR,I,yNCvGtDzU,GACW,eADXA,GAEM,WAFNA,GAGM,WAENI,GAAgB,CACpByU,SAAU,GACVC,YAAa,GACbC,cAAe,IA0BJC,GAAc,SAAClK,EAAOgE,EAAMmG,EAAOC,EAASC,EAAUC,GACjE,OAAO,SAAAxU,GACLzB,EAAI0B,IAAJ,2BAA4BiK,EAA5B,iBAA0CgE,EAA1C,kBAAwDmG,EAAxD,oBAAyEC,EAAzE,qBAA6FC,EAA7F,mBAAgHC,IAC/GtU,MAAK,SAAAC,GAAa,IAAD,EACQA,EAASE,KAAzB+N,EADQ,EACRA,KAAM3O,EADE,EACFA,MACdO,EAAS,CACPI,KAAMhB,GACN6U,SAAU7F,EACV+F,cAAe1U,OAGlBa,OAAM,SAAAC,GACLP,EACEgN,GAAY,+CACZxM,QAAQC,IAAIF,SAMPkU,GAAW,SAAC9U,GACvB,OAAO,SAAAK,GACLzB,EAAIqP,IAAJ,gCAAiCjO,EAAQyC,KAAOzC,GAC/CO,MAAK,SAAAC,GACJH,EAAS,CACPI,KAAMhB,GACN+G,GAAIxG,EAAQyC,SAGf9B,OAAM,SAAAC,GACLP,EACEgN,GAAY,+CACZxM,QAAQC,IAAIF,SAMP+T,GAAU,SAAC3U,GACtB,OAAO,SAAAK,GACLzB,EAAIqP,IAAJ,+BAAgCjO,EAAQyC,KAAOzC,GAC9CO,MAAK,SAAAC,GACJH,EAAS,CACLI,KAAMhB,GACN+G,GAAIxG,EAAQyC,SAEflC,MAAK,WACJF,EACEuO,GAAe5O,EAAQkB,eAI5BP,OAAM,SAAAC,GACLP,EACEgN,GAAY,+CACZxM,QAAQC,IAAIF,S,qNCnDd1D,GAAQ6X,aAAe,CAC3B/F,QAAS,CACPE,UAAU,CACR8F,KAAM,cAKNhY,GAAYC,aAAW,SAACC,GAAD,MAAW,CACtC4E,OAAQ,CACNkK,eAAgB,SAChBjK,UAAW,SACXP,OAAQ,QAEVyT,OAAQ,CACNC,SAAU,QACVC,WAAY,OAEdzU,KAAM,CACJc,OAAQ,MACRgC,SAAU,SAEZvB,KAAM,CACJC,QAAS,QAEXkT,UAAW,CACT5T,OAAQ,cAIN6T,GAAU,SAACjT,GACf,IAAM1E,EAAUV,KADS,EAEH4H,mBAASC,OAAOC,SAASC,KAAKC,MAAM,MAAM,GAAGA,MAAM,KAAK,IAAtE5E,EAFiB,oBAGlBkU,EAAwClS,EAAxCkS,SAAUE,EAA8BpS,EAA9BoS,cAAerG,EAAe/L,EAAf+L,YAC1BkB,EAAQmF,EAAcnF,MAJH,EAMCzK,mBAAS,GANV,mBAMjB2J,EANiB,KAMXe,EANW,OAOG1K,mBAAS,IAPZ,mBAOjB8P,EAPiB,KAOVY,EAPU,OAQyB1Q,mBAAS,IAAI2Q,KAAK,wBAR3C,mBAQjBC,EARiB,KAQCC,EARD,OASqB7Q,mBAAS2Q,KAAKG,KATnC,mBASjBC,EATiB,KASDC,EATC,OAUOhR,oBAAS,GAVhB,mBAUjB+P,EAViB,KAURkB,EAVQ,OAYajR,mBAAS,CAC7CkR,MAAO3H,EAAYnO,UAbI,mBAYjB+V,EAZiB,KAYLC,EAZK,KAgBzBrN,qBAAU,WACRvG,EAAMqS,YAAYrU,EAAWmO,EAAMmG,EAAOC,EAASa,EAAkBG,KACrE,IAEFhN,qBAAU,WACRqN,EAAc,CAACF,MAAO3H,EAAYnO,YAClC,CAACmO,EAAYnO,UAwDf,OACE,6BACE,kBAACjC,EAAA,EAAD,CAAYC,QAAQ,KAAKE,UAAU,MAAnC,gBACC,6BACC,kBAACmM,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAMR,MAAI,EAAClM,UAAWD,EAAQ0X,WAC5B,kBAACa,GAAA,EAAD,CAAWtO,KAAG,GACd,kBAACd,EAAA,EAAD,CACEG,QACE,kBAACkP,GAAA,EAAD,CACEjR,UAAS8Q,EAAWD,OAAOC,EAAWD,MACtCpT,QAAS,kBAvBN,SAACyL,GAClB,OAAGA,EAAYnO,SACbmO,EAAYnO,SAAU,EACtBgW,EAAc,CAACF,MAAO3H,EAAYnO,UAC3BoC,EAAM2M,WAAWZ,KAExBA,EAAYnO,SAAU,EACtBgW,EAAc,CAACF,MAAO3H,EAAYnO,UAC3BoC,EAAM2M,WAAWZ,IAeCgI,CAAWhI,IACxB5L,KAAK,WACLlE,MAAM,YAGViI,MAAM,wBAKZ,kBAACmB,GAAA,EAAD,KACE,kBAAC2O,GAAA,EAAD,iCACA,kBAACC,GAAA,EAAD,CACE7R,MAAOkQ,EACPxQ,SA3EQ,SAAC2B,GACjByP,EAASzP,EAAMtB,OAAOC,OACtBpC,EAAMqS,YAAYrU,EAAWmO,EAAM1I,EAAMtB,OAAOC,MAAOmQ,EAASa,EAAkBG,GAClFrG,EAAQ,IAyEA7I,WAAY,CAAE,aAAc,kBAC5B,kBAAC6P,GAAA,EAAD,CAAU9R,MAAO,IAAjB,MACA,kBAAC8R,GAAA,EAAD,CAAU9R,MAAO,IAAjB,MACA,kBAAC8R,GAAA,EAAD,CAAU9R,MAAO,IAAjB,QAGJ,kBAACiD,GAAA,EAAD,CAAa9J,UAAWD,EAAQuX,QAC9B,kBAACmB,GAAA,EAAD,yBACA,kBAACC,GAAA,EAAD,CACE7R,MAAOmQ,EACPzQ,SAjFe,SAAC2B,GACxBgQ,EAAWhQ,EAAMtB,OAAOC,OACxBpC,EAAMqS,YAAYrU,EAAWmO,EAAMmG,EAAO7O,EAAMtB,OAAOC,MAAOgR,EAAkBG,IAgFxElP,WAAY,CAAE,aAAc,kBAC5B,kBAAC6P,GAAA,EAAD,CAAU9R,OAAO,GAAjB,cACA,kBAAC8R,GAAA,EAAD,CAAU9R,OAAO,GAAjB,gBAGJ,kBAAC,KAAD,CAAyB+R,OAAQC,KAAMC,MAAOC,MAC5C,kBAAC,KAAD,CACE/Y,UAAWD,EAAQgD,KACnBiW,gBAAc,EACd3Y,QAAQ,SACR0G,OAAO,aACPlD,OAAO,SACPgF,GAAG,qBACHF,MAAM,KACNS,KAAK,QACL6P,mBAAmB,oBACnBpS,MAAOgR,EACPtR,SA/FmB,SAAC2S,GAC5BpB,EAAoBoB,GACpBhW,QAAQC,IAAI+V,IA8FJC,oBAAqB,CACnB,aAAc,iBAGlB,kBAAC,KAAD,CACEnZ,UAAWD,EAAQgD,KACnBiW,gBAAc,EACd3Y,QAAQ,SACR0G,OAAO,aACPlD,OAAO,SACPgF,GAAG,qBACHF,MAAM,SACNS,KAAK,QACL6P,mBAAmB,oBACnBpS,MAAOmR,EACPzR,SA3GiB,SAAC2S,GAC1BjB,EAAkBiB,GAClBzU,EAAMqS,YAAYrU,EAAWmO,EAAMmG,EAAOC,EAASa,EAAkBqB,IA0G7DC,oBAAqB,CACnB,aAAc,mBAKtB,kBAAClO,GAAA,EAAD,KACE,kBAACM,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,CAAOC,cAAY,EAACzB,aAAW,gBAC7B,kBAAC0B,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWE,MAAM,UAAjB,QACA,kBAACF,GAAA,EAAD,CAAWE,MAAM,UAAjB,QACA,kBAACF,GAAA,EAAD,CAAWE,MAAM,UAAjB,YACA,kBAACF,GAAA,EAAD,CAAWE,MAAM,UAAjB,mBACA,kBAACF,GAAA,EAAD,CAAWE,MAAM,UAAjB,aACA,kBAACF,GAAA,EAAD,CAAWE,MAAM,UAAjB,cACA,kBAACF,GAAA,EAAD,CAAWE,MAAM,WACjB,kBAACF,GAAA,EAAD,CAAWE,MAAM,aAGrB,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,CAAkBzM,MAAOA,IACrBoX,EAAStL,KAAK,SAAAhJ,GACd,OACE,kBAACuJ,GAAA,EAAD,CAAUwN,OAAK,EAAC5N,IAAKnJ,EAAQyC,IAAK8J,KAAK,WAAW3B,UAAW,GAC3D,kBAACpB,GAAA,EAAD,CAAWE,MAAM,UAAUhF,aAAOsS,aAAShX,EAAQiX,WAAY,mBAAoB,CAACC,SAAU,uBAC9F,kBAAC1N,GAAA,EAAD,CAAWE,MAAM,UAAU1J,EAAQuC,MACnC,kBAACiH,GAAA,EAAD,CAAWE,MAAM,UAAU1J,EAAQyF,OACnC,kBAAC+D,GAAA,EAAD,CAAWE,MAAM,UACf,kBAACrC,EAAA,EAAD,CAAQ9E,KAAK,YAAYwE,KAAK,QAAQvC,MAAOxE,EAAQ6D,MAAO7D,EAAQ6D,MAAO,EAAGsT,UAAW,GAAKC,UAAQ,KAExG,kBAAC5N,GAAA,EAAD,CAAWE,MAAM,UAAU1J,EAAQgB,WAAa,kBAAC,KAAD,MAAiB,kBAAC,KAAD,OACjE,kBAACwI,GAAA,EAAD,CAAWE,MAAM,UAAU1J,EAAQ0F,SACnC,kBAAC8D,GAAA,EAAD,CAAWE,MAAM,UACf,kBAACsD,GAAA,EAAD,CAAYtK,QAAS,kBAzIpB,SAAC1C,GACtB,OAAGA,EAAQ8U,UACT9U,EAAQ8U,UAAW,EACZ1S,EAAM0S,SAAS9U,KAEtBA,EAAQ8U,UAAW,EACZ1S,EAAM0S,SAAS9U,IAmIuBqX,CAAerX,KACvCA,EAAQ8U,SAAW,kBAAC,KAAD,CAAUzW,MAAM,cAAgB,kBAAC,KAAD,QAGxD,kBAACmL,GAAA,EAAD,CAAWE,MAAM,UACf,kBAACsD,GAAA,EAAD,CAAYtK,QAAS,kBArIrB,SAAC1C,GACrB,OAAGA,EAAQ2U,SACT3U,EAAQ2U,SAAU,EACXvS,EAAMuS,QAAQ3U,KAErBA,EAAQ2U,SAAU,EACXvS,EAAMuS,QAAQ3U,IA+HwBsX,CAActX,KACtCA,EAAQ2U,QAAU,kBAAC,KAAD,MAA0B,kBAAC,KAAD,gBAU/D,kBAACtK,GAAA,EAAD,CAAM1M,UAAWD,EAAQoE,OAAQwI,WAAS,EAACT,MAAI,EAAC8F,GAAI,GAAIpS,QAAS,GAC/D,kBAAC2J,EAAA,EAAD,CAAKhJ,UAAU,QACb,kBAACiS,GAAA,EAAD,CACEC,MAAOf,EACPd,KAAMA,EACNrK,SArLW,SAAC2B,EAAOrB,GAC7B8K,EAAQ9K,GACRpC,EAAMqS,YAAYrU,EAAWoE,EAAOkQ,EAAOC,EAASa,EAAkBG,WA4L1EN,GAAQzS,WAAa,CACnB5C,QAAS6C,IAAUC,MAAMC,YAG3B,IASeC,gBATS,SAAAC,GAAK,MAAK,CAChCkL,YAAalL,EAAM0L,QAAQR,YAC3BmG,SAAUrR,EAAMjD,QAAQsU,SACxBE,cAAevR,EAAMjD,QAAQwU,kBAGH,SAAAnU,GAAQ,OAClC8C,YAAmB,CAACsR,eAAaK,YAAUH,WAAS5F,eAAa1O,KAEpD2C,CAA8CqS,ICvSvD5V,GACQ,YADRA,GAEQ,WAFRA,GAGM,UAHNA,GAIS,aAJTA,GAKS,aAETI,GAAgB,CACpB0X,MAAO,GACPC,WAAY,GACZC,SAAU,IAqBCC,GAAY,SAACnJ,EAAMC,GAC9B,OAAO,SAAAnO,GACLzB,EAAI0B,IAAJ,8BAA+BiO,EAA/B,kBAA6CC,IAC5CjO,MAAK,SAAAC,GAAa,IAAD,EACQA,EAASE,KAAzB+N,EADQ,EACRA,KAAM3O,EADE,EACFA,MACdO,EAAS,CACPI,KAAMhB,GACN8X,MAAO9I,EACP+I,WAAY1X,OAGfa,OAAM,SAAAC,GACLP,EACEgN,GAAY,+CACZxM,QAAQC,IAAIF,SAyCP+W,GAAc,SAACC,GAC1B,OAAO,SAAAvX,GACLzB,EAAI4J,OAAJ,oBAAwBoP,IACvBrX,MAAK,SAAAC,GACJH,EAAS,CACPI,KAAMhB,GACN+G,GAAIoR,IAEHpX,EAASE,KAAKmX,KACfxX,EACEgN,GAAY7M,EAASE,KAAKmX,SAI/BlX,OAAM,SAAAC,GACLP,EACEgN,GAAY,+CACZxM,QAAQC,IAAIF,SClFd5D,GAAYC,aAAW,iBAAM,CACjC6a,OAAQ,CACNnW,aAAc,QAEhBG,OAAQ,CACNkK,eAAgB,SAChBjK,UAAW,SACXP,OAAQ,QAEVS,KAAM,CACJC,QAAS,QAEXkT,UAAW,CACT5T,OAAQ,cAINuW,GAAO,SAAC3V,GACZ,IAAM1E,EAAUV,KACRmR,EAAuB/L,EAAvB+L,YAAaoJ,EAAUnV,EAAVmV,MAFC,EAII3S,mBAAS,CACjCkR,MAAO3H,EAAY9M,OALC,mBAIdA,EAJc,KAIR2W,EAJQ,KAQtBrP,qBAAU,WACRvG,EAAMsV,UAAU,EAAG,MACnB,IAEF/O,qBAAU,WACRqP,EAAQ,CAAClC,MAAO3H,EAAY9M,SAC5B,CAAC8M,EAAY9M,OAcf,OACE,6BACE,kBAACtD,EAAA,EAAD,CAAYC,QAAQ,KAAKE,UAAU,MAAnC,YACA,kBAACmM,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAMR,MAAI,EAAClM,UAAWD,EAAQ0X,WAC5B,kBAACa,GAAA,EAAD,CAAWtO,KAAG,GACd,kBAACd,EAAA,EAAD,CACEG,QACE,kBAACkP,GAAA,EAAD,CACEjR,UAAS5D,EAAKyU,OAAOzU,EAAKyU,MAC1BpT,QAAS,kBAtBP,SAACyL,GACf,OAAGA,EAAY9M,MACb8M,EAAY9M,MAAO,EACnB2W,EAAQ,CAAClC,MAAO3H,EAAY9M,OACrBe,EAAM2M,WAAWZ,KAExBA,EAAY9M,MAAO,EACnB2W,EAAQ,CAAClC,MAAO3H,EAAY9M,OACrBe,EAAM2M,WAAWZ,IAcD8J,CAAQ9J,IACrB5L,KAAK,WACLlE,MAAM,YAGViI,MAAM,wBAKZ,kBAAC+D,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAM1M,UAAWD,EAAQoa,OAAQjO,MAAI,GACnC,kBAAC9L,EAAA,EAAD,CAAYC,QAAQ,MAApB,uBAIJ,kBAAC4K,GAAA,EAAD,KACE,kBAACM,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,CAAOC,cAAY,EAACzB,aAAW,gBAC7B,kBAAC0B,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWE,MAAM,UAAjB,SACA,kBAACF,GAAA,EAAD,CAAWE,MAAM,UAAjB,QACA,kBAACF,GAAA,EAAD,CAAWE,MAAM,aAGrB,kBAACC,GAAA,EAAD,KACI4N,EAAMvO,KAAK,SAAA3H,GACX,OACE,kBAACkI,GAAA,EAAD,CAAUwN,OAAK,EAAC5N,IAAK9H,EAAK4V,UAAW1K,KAAK,WAAW3B,UAAW,GAC9D,kBAACpB,GAAA,EAAD,CAAWE,MAAM,UAAjB,QAAgCrI,EAAKC,OACrC,kBAACkI,GAAA,EAAD,CAAWE,MAAM,UAAUhF,aAAOsS,aAAS3V,EAAK4V,WAAY,mBAAoB,CAACC,SAAU,uBAC3F,kBAAC1N,GAAA,EAAD,CAAWE,MAAM,UACf,kBAACzL,EAAA,EAAD,CAAQN,UAAWD,EAAQsE,OAAQU,QAAS,kBAAIN,EAAMuV,YAAYtW,EAAKoB,MAAMzE,QAAQ,YAAYK,MAAM,WAAvG,uBAetB0Z,GAAKnV,WAAa,CAChBuL,YAAatL,IAAUC,MAAMC,YAG/B,IAQeC,gBARS,SAAAC,GAAK,MAAK,CAChCkL,YAAalL,EAAM0L,QAAQR,YAC3BoJ,MAAOtU,EAAM5B,KAAKkW,UAGQ,SAAAlX,GAAQ,OAClC8C,YAAmB,CAACuU,aAAW3I,cAAY4I,gBAActX,KAE5C2C,CAA8C+U,IC/HvD/a,GAAYC,aAAW,iBAAM,CACjC+E,OAAQ,CACNJ,UAAW,QAEbK,KAAM,CACJC,QAAS,QAEXkT,UAAW,CACT5T,OAAQ,cAIN0W,GAAQ,SAAC9V,GACb,IAAM1E,EAAUV,KACRmR,EAAgB/L,EAAhB+L,YAFe,EAIKvJ,mBAAS,CACnCkR,MAAO3H,EAAYrH,QALE,mBAIfA,EAJe,KAIRqR,EAJQ,KAQvBxP,qBAAU,WACRwP,EAAS,CAACrC,MAAO3H,EAAYrH,UAC7B,CAACqH,EAAYrH,QAcf,OACE,6BACE,kBAAC/I,EAAA,EAAD,CAAYC,QAAQ,KAAKE,UAAU,MAAnC,kBACA,kBAACmM,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAMR,MAAI,EAAClM,UAAWD,EAAQ0X,WAC5B,kBAACa,GAAA,EAAD,CAAWtO,KAAG,GACd,kBAACd,EAAA,EAAD,CACEG,QACE,kBAACkP,GAAA,EAAD,CACEjR,UAAS6B,EAAMgP,OAAOhP,EAAMgP,MAC5BpT,QAAS,kBAtBN,SAACyL,GAChB,OAAGA,EAAYrH,OACbqH,EAAYrH,OAAQ,EACpBqR,EAAS,CAACrC,MAAO3H,EAAYrH,QACtB1E,EAAM2M,WAAWZ,KAExBA,EAAYrH,OAAQ,EACpBqR,EAAS,CAACrC,MAAO3H,EAAYrH,QACtB1E,EAAM2M,WAAWZ,IAcDiK,CAASjK,IACtB5L,KAAK,WACLlE,MAAM,YAGViI,MAAM,0BASlB4R,GAAMtV,WAAa,CACjBuL,YAAatL,IAAUC,MAAMC,YAG/B,IAOeC,gBAPS,SAAAC,GAAK,MAAK,CAChCkL,YAAalL,EAAM0L,QAAQR,gBAGD,SAAA9N,GAAQ,OAClC8C,YAAmB,CAAC4L,cAAYH,mBAAiBvO,KAEpC2C,CAA8CkV,IClFvDzY,GAAU,CACd4Y,UAAW,YACXC,SAAU,WACVC,WAAY,cAER1Y,GAAgB,CACpBI,KAAM,GACNC,YAAa,GACbsY,UAAW,IAgDAC,GAAc,SAACrY,GAC1B,OAAO,SAAAC,GACLzB,EAAI0B,IAAJ,oBAAqBF,IACpBG,MAAK,SAAAC,GACJH,EAAS,CACPI,KAAMhB,GAAQ8Y,WACdtY,KAAMO,EAASE,KACfR,YAAaM,EAASE,KAAKR,iBAG9BS,OAAM,SAAAC,GACLC,QAAQC,IAAIF,Q,8HClCZ5D,GAAYC,aAAW,iBAAM,CACjC+E,OAAQ,CACNJ,UAAW,QAEb8W,YAAa,CACX5U,QAAS,UAEXsR,UAAW,CACT5T,OAAQ,UAEVM,OAAQ,CACNC,UAAW,SACXP,OAAQ,QAEVmX,MAAO,CACLnX,OAAQ,SACRsC,QAAS,QAEXvB,KAAM,CACJiB,SAAU,SAEZoV,YAAa,CACXpX,OAAQ,OACRO,UAAW,SAEb8W,KAAM,CACJrX,OAAQ,UAEVsX,WAAY,CACVtX,OAAQ,QAEVS,KAAM,CACJC,QAAS,QAEX6W,OAAQ,CACNpX,aAAc,QAEhBqX,UAAW,CACT5V,WAAY,SAEd6V,aAAc,CACZlX,UAAW,MACXP,OAAQ,YAIN0X,GAAO,SAAC9W,GACZ,IAAM1E,EAAUV,KACRmR,EAAuC/L,EAAvC+L,YAAuBjO,GAAgBkC,EAA1B+W,SAA0B/W,EAAhBlC,aAFT,EAGA0E,mBAASC,OAAOC,SAASC,KAAKC,MAAM,MAAM,IAAxD5E,EAHc,sBAIIwE,oBAAS,GAJb,mBAIdwU,EAJc,KAIRC,EAJQ,OAKIzU,mBAAS,CACjCkR,MAAO3H,EAAYlO,OANC,mBAKdA,EALc,KAKRqZ,EALQ,KAStB3Q,qBAAU,WACRvG,EAAMqW,YAAYrY,GAClBkZ,EAAQ,CAACxD,MAAO3H,EAAYlO,SAC5B,CAACkO,EAAYlO,OAEf,IAdsB,EA0BU2E,mBAAS,GA1BnB,mBA0Bf2U,EA1Be,KA0BLC,EA1BK,KA4BhB5T,EAAe,SAACC,GACpB2T,EAAY3T,EAAMtB,OAAOC,QAGrBiV,EAAW,WAEbJ,GADCD,IAOL,OACE,6BACE,kBAACrb,EAAA,EAAD,CAAYC,QAAQ,KAAKE,UAAU,MAAnC,6BACA,kBAACmM,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAMR,MAAI,EAAClM,UAAWD,EAAQ0X,WAC5B,kBAACa,GAAA,EAAD,CAAWtO,KAAG,GACd,kBAACd,EAAA,EAAD,CACEG,QACE,kBAACkP,GAAA,EAAD,CACEjR,UAAShF,EAAK6V,OAAO7V,EAAK6V,MAC1BpT,QAAS,kBApCP,SAACyL,GACf,OAAGA,EAAYlO,MACbkO,EAAYlO,MAAO,EACnBqZ,EAAQ,CAACxD,MAAO3H,EAAYlO,OACrBmC,EAAM2M,WAAWZ,KAExBA,EAAYlO,MAAO,EACnBqZ,EAAQ,CAACxD,MAAO3H,EAAYlO,OACrBmC,EAAM2M,WAAWZ,IA4BDuL,CAAQvL,IACrB5L,KAAK,WACLlE,MAAM,YAGViI,MAAM,wBAKZ,kBAACmB,GAAA,EAAD,KACE,kBAAC2O,GAAA,EAAD,cACA,kBAACC,GAAA,EAAD,CACE7R,MAAO+U,EACPrV,SAAU0B,EACV+T,cAAY,EACZhc,UAAWD,EAAQkc,YACnBnT,WAAY,CAAE,aAAc,kBAE5B,kBAAC6P,GAAA,EAAD,CAAU9R,MAAO,GAAjB,eACA,kBAAC8R,GAAA,EAAD,CAAU9R,MAAO,GAAjB,iBAIJ,kBAACoE,GAAA,EAAD,CAAOjL,UAAWD,EAAQib,OACxB,kBAACtO,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAM1M,UAAWD,EAAQkb,YAAa/O,MAAI,EAAC8F,GAAI,GAC7C,kBAAC5R,EAAA,EAAD,sBAEF,kBAACsM,GAAA,EAAD,CAAM1M,UAAWD,EAAQoE,OAAQ+H,MAAI,EAAC8F,GAAI,GACxC,kBAACtJ,EAAA,EAAD,CACErI,QAAQ,WACRsI,MAAM,QACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,OACLkE,WAAY,CAAEC,UAAW,IACzBmL,gBAAiB,CAAEC,QAAQ,MAG/B,kBAACzH,GAAA,EAAD,CAAM1M,UAAWD,EAAQub,aAAcpP,MAAI,EAAC8F,GAAI,GAC9C,kBAAC1R,EAAA,EAAD,CAAQD,QAAQ,YAAYK,MAAM,UAAUwb,QAAS,kBAAC,KAAD,OAArD,gBAMN,kBAACjR,GAAA,EAAD,CAAOjL,UAAWD,EAAQib,OACxB,kBAACtO,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAM1M,UAAWD,EAAQkb,YAAa/O,MAAI,EAAC8F,GAAI,GAC7C,kBAAC5R,EAAA,EAAD,eAEF,kBAACsM,GAAA,EAAD,CAAM1M,UAAWD,EAAQoE,OAAQ+H,MAAI,EAAC8F,GAAI,GACxC,kBAACtJ,EAAA,EAAD,CACErI,QAAQ,WACRsI,MAAM,QACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,OACLkE,WAAY,CAAEC,UAAW,IACzBmL,gBAAiB,CAAEC,QAAQ,KAE7B,kBAACzL,EAAA,EAAD,CACErI,QAAQ,WACRsI,MAAM,mBACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,aACLkE,WAAY,CAAEC,UAAW,IACzBmL,gBAAiB,CAAEC,QAAQ,MAG/B,kBAACzH,GAAA,EAAD,CAAM1M,UAAWD,EAAQoE,OAAQ+H,MAAI,EAAC8F,GAAI,GACxC,kBAACtJ,EAAA,EAAD,CACErI,QAAQ,WACRsI,MAAM,SACN9E,OAAO,QACPoQ,WAAS,EACTrP,KAAK,QACLkE,WAAY,CAAEC,UAAW,IACzBmL,gBAAiB,CAAEC,QAAQ,MAG/B,kBAACzH,GAAA,EAAD,CAAM1M,UAAWD,EAAQoE,OAAQ+H,MAAI,EAAC8F,GAAI,GACxC,kBAAClI,GAAA,EAAD,KACE,kBAAC2O,GAAA,EAAD,6BACA,kBAACC,GAAA,EAAD,CACE7R,MAAO+U,EACPrV,SAAU0B,EACV+T,cAAY,EACZhc,UAAWD,EAAQkc,YACnBnT,WAAY,CAAE,aAAc,kBAE7BvG,EAAY8I,KAAI,SAAAC,GACf,OACE,kBAACqN,GAAA,EAAD,CAAUnN,IAAKF,EAAQxG,IAAK+B,MAAOyE,EAAQ1G,MAAO0G,EAAQ1G,YAMlE,kBAAC8H,GAAA,EAAD,CAAM1M,UAAWD,EAAQub,aAAcpP,MAAI,EAAC8F,GAAI,GAC9C,kBAAC1R,EAAA,EAAD,CAAQD,QAAQ,YAAYK,MAAM,UAAUwb,QAAS,kBAAC,KAAD,OAArD,gBAON,yBAAKlc,UAAWD,EAAQoE,QACtB,kBAAC7D,EAAA,EAAD,CAAQ+U,IAAI,sBAAsBrV,UAAWyb,EAAM1b,EAAQob,WAAapb,EAAQuE,KAC9EsC,OAAO,SAASQ,KAAI,iDAA4C3E,EAA5C,YACpBpC,QAAQ,YAAYK,MAAM,UAC1Bwb,QAAS,kBAAC,KAAD,OAHX,aAMA,kBAAC5b,EAAA,EAAD,CAAQN,UAAWD,EAAQob,WAAYpW,QAAS,kBAAK+W,KAAYzb,QAAQ,WAAWK,MAAO+a,EAAM,UAAY,YAAaS,QAAST,EAAM,kBAAC,KAAD,MAAc,kBAAC,KAAD,OACpJA,EAAM,SAAS,YAElB,kBAACnb,EAAA,EAAD,CAAQN,UAAWyb,EAAM1b,EAAQuE,KAAMvE,EAAQob,WAAYpW,QAAS,kBAAK+W,KAAYzb,QAAQ,YAAYK,MAAM,UAAUwb,QAAS,kBAAC,KAAD,OAAlI,WAKF,kBAACjR,GAAA,EAAD,CAAOjL,UAAWD,EAAQqb,QACvB7Y,EAAY2I,MAAK,SAAC1J,EAAG2J,GAAJ,OAAU3J,EAAE4J,MAAQD,EAAEC,MAAO,GAAK,KAAGC,KAAI,SAAAC,GACzD,OACE,kBAACC,GAAA,EAAD,CAAgBC,IAAKF,EAAQxG,KAC3B,kBAAC2G,GAAA,EAAD,CAAOC,cAAY,EAACzB,aAAW,gBAC7B,kBAAC0B,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,QAAS,EAAGC,MAAM,QAC3B,kBAACrD,EAAA,EAAD,CACEE,SAAU6S,EACVpb,QAAQ,WACRsI,MAAM,eACN9E,OAAO,QACPgD,MAAOyE,EAAQ1G,KACfqP,WAAS,EACTrP,KAAK,aACLkE,WAAY,CAAEC,UAAW,IACzBmL,gBAAiB,CAAEC,QAAQ,MAG/B,kBAACtI,GAAA,EAAD,KACE,kBAAC/B,GAAA,EAAD,KACE,kBAAC2O,GAAA,EAAD,uBACA,kBAACC,GAAA,EAAD,CACE9P,SAAU6S,EACV5U,MAAO+U,EACPrV,SAAU0B,EACV+T,cAAY,EACZhc,UAAWD,EAAQkc,YACnBnT,WAAY,CAAE,aAAc,kBAE5B,kBAAC6P,GAAA,EAAD,CAAU9R,MAAO,GAAjB,KACA,kBAAC8R,GAAA,EAAD,CAAU9R,MAAO,GAAjB,QAIN,kBAACgF,GAAA,EAAD,KACE,kBAACvL,EAAA,EAAD,CAAQsI,SAAU6S,EAAMpb,QAAQ,WAAWK,MAAM,WAC/C,kBAAC,KAAD,UAKR,kBAACsL,GAAA,EAAD,KACGV,EAAQW,SAASf,MAAK,SAAC1J,EAAG2J,GAAJ,OAAU3J,EAAE4J,MAAQD,EAAEC,MAAO,GAAK,KAAGC,KAAI,SAAAa,GAC9D,OACE,kBAACN,GAAA,EAAD,CAAUJ,IAAKU,EAAKpH,KAClB,kBAAC+G,GAAA,EAAD,CAAWE,MAAM,QACf,kBAACrD,EAAA,EAAD,CACEE,SAAU6S,EACVpb,QAAQ,WACRsI,MAAM,QACN9E,OAAO,QACPgD,MAAOqF,EAAKtH,KACZqP,WAAS,EACTrP,KAAK,aACLkE,WAAY,CAAEC,UAAW,IACzBmL,gBAAiB,CAAEC,QAAQ,KAE7B,kBAACzL,EAAA,EAAD,CACEE,SAAU6S,EACVpb,QAAQ,WACRsI,MAAM,mBACN9E,OAAO,QACPgD,MAAOqF,EAAKC,YACZ8H,WAAS,EACTrP,KAAK,aACLkE,WAAY,CAAEC,UAAW,IACzBmL,gBAAiB,CAAEC,QAAQ,MAG/B,kBAACtI,GAAA,EAAD,CAAWE,MAAM,SACjB,kBAACrD,EAAA,EAAD,CACEE,SAAU6S,EACVpb,QAAQ,WACRsI,MAAM,SACN9E,OAAO,QACPgD,MAAQqF,EAAKrF,MAAOuF,eAAe,QAAS,CAACC,MAAO,WAAYC,SAAU,QAC1E2H,WAAS,EACTrP,KAAK,aACLkE,WAAY,CAAEC,UAAW,IACzBmL,gBAAiB,CAAEC,QAAQ,MAG7B,kBAACtI,GAAA,EAAD,KACE,kBAAC/B,GAAA,EAAD,KACE,kBAAC2O,GAAA,EAAD,qBACA,kBAACC,GAAA,EAAD,CACE9P,SAAU6S,EACV5U,MAAO+U,EACPrV,SAAU0B,EACV+T,cAAY,EACZhc,UAAWD,EAAQkc,YACnBnT,WAAY,CAAE,aAAc,kBAE5B,kBAAC6P,GAAA,EAAD,CAAU9R,MAAO,GAAjB,UACA,kBAAC8R,GAAA,EAAD,CAAU9R,MAAO,GAAjB,aAIN,kBAACgF,GAAA,EAAD,KACE,kBAAC/B,GAAA,EAAD,KACE,kBAAC2O,GAAA,EAAD,uBACA,kBAACC,GAAA,EAAD,CACE9P,SAAU6S,EACV5U,MAAO+U,EACPrV,SAAU0B,EACV+T,cAAY,EACZhc,UAAWD,EAAQkc,YACnBnT,WAAY,CAAE,aAAc,kBAE5B,kBAAC6P,GAAA,EAAD,CAAU9R,MAAO,GAAjB,KACA,kBAAC8R,GAAA,EAAD,CAAU9R,MAAO,GAAjB,QAIN,kBAACgF,GAAA,EAAD,CAAWE,MAAM,SACf,kBAACzL,EAAA,EAAD,CAAQsI,SAAU6S,EAAMpb,QAAQ,WAAWK,MAAM,WAC/C,kBAAC,KAAD,qBAe5B6a,GAAKtW,WAAa,CAChBuL,YAAatL,IAAUC,MAAMC,WAC7B7C,YAAa2C,IAAUC,MAAMC,WAC7BoW,SAAUtW,IAAUC,MAAMC,YAG5B,IASeC,gBATS,SAAAC,GAAK,MAAK,CAChCkL,YAAalL,EAAM0L,QAAQR,YAC3BgL,SAAUlW,EAAMhD,KAAKA,KACrBC,YAAa+C,EAAMhD,KAAKC,gBAGE,SAAAG,GAAQ,OAClC8C,YAAmB,CAAC4L,cAAYH,kBAAgB6J,gBAAcpY,KAEjD2C,CAA8CkW,IClY9CY,GAbE,WACf,OACE,6BACE,kBAAC/b,EAAA,EAAD,CAAYC,QAAQ,KAAKE,UAAU,MAAnC,cACA,kBAACmM,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAMR,MAAI,GAAV,oCCIF7M,GAAYC,aAAW,SAACC,GAAD,MAAW,CACtC8E,OAAQ,CACNJ,UAAW,QAEbwT,UAAW,CACT5T,OAAQ,cAINuY,GAAc,SAAC3X,GACnB,IAAM1E,EAAUV,KACRmR,EAAgB/L,EAAhB+L,YAFqB,EAGWvJ,mBAAS,CAC/CkR,MAAO3H,EAAY6L,cAJQ,mBAGrBA,EAHqB,KAGRC,EAHQ,KAO7BtR,qBAAU,WACRsR,EAAe,CAACnE,MAAO3H,EAAY6L,gBACnC,CAAC7L,EAAY6L,cAcf,OACE,6BACE,kBAACjc,EAAA,EAAD,CAAYC,QAAQ,KAAKE,UAAU,MAAnC,YACA,kBAACmM,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAMR,MAAI,EAAClM,UAAWD,EAAQ0X,WAC5B,kBAACa,GAAA,EAAD,CAAWtO,KAAG,GACd,kBAACd,EAAA,EAAD,CACEG,QACE,kBAACkP,GAAA,EAAD,CACEjR,UAAS+U,EAAYlE,OAAOkE,EAAYlE,MACxCpT,QAAS,kBAtBA,SAACyL,GACtB,OAAGA,EAAY6L,aACb7L,EAAY6L,aAAc,EAC1BC,EAAe,CAACnE,MAAO3H,EAAY6L,cAC5B5X,EAAM2M,WAAWZ,KAExBA,EAAY6L,aAAc,EAC1BC,EAAe,CAACnE,MAAO3H,EAAY6L,cAC5B5X,EAAM2M,WAAWZ,IAcD+L,CAAe/L,IAC5B5L,KAAK,WACLlE,MAAM,YAGViI,MAAM,0BASlByT,GAAYnX,WAAa,CACvBuL,YAAatL,IAAUC,MAAMC,YAG/B,IAOeC,gBAPS,SAAAC,GAAK,MAAK,CAChCkL,YAAalL,EAAM0L,QAAQR,gBAGD,SAAA9N,GAAQ,OAClC8C,YAAmB,CAAC4L,cAAYH,mBAAiBvO,KAEpC2C,CAA8C+W,ICnEvD/c,GAAYC,aAAW,SAACC,GAAD,MAAW,CACtC8E,OAAQ,CACNJ,UAAW,QAEbwT,UAAW,CACT5T,OAAQ,cAIN2Y,GAAW,SAAC/X,GAChB,IAAM1E,EAAUV,KACRmR,EAAgB/L,EAAhB+L,YAFkB,EAGQvJ,mBAAS,CACzCkR,MAAO3H,EAAYxL,WAJK,mBAGlBA,EAHkB,KAGRyX,EAHQ,KAO1BzR,qBAAU,WACRyR,EAAY,CAACtE,MAAO3H,EAAYxL,aAChC,CAACwL,EAAYxL,WAcf,OACE,6BACE,kBAAC5E,EAAA,EAAD,CAAYC,QAAQ,KAAKE,UAAU,MAAnC,YACA,kBAACmM,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAMR,MAAI,EAAClM,UAAWD,EAAQ0X,WAC5B,kBAACa,GAAA,EAAD,CAAWtO,KAAG,GACd,kBAACd,EAAA,EAAD,CACEG,QACE,kBAACkP,GAAA,EAAD,CACEjR,UAAStC,EAASmT,OAAOnT,EAASmT,MAClCpT,QAAS,kBAtBH,SAACyL,GACnB,OAAGA,EAAYxL,UACbwL,EAAYxL,UAAW,EACvByX,EAAY,CAACtE,MAAO3H,EAAYxL,WACzBP,EAAM2M,WAAWZ,KAExBA,EAAYxL,UAAW,EACvByX,EAAY,CAACtE,MAAO3H,EAAYxL,WACzBP,EAAM2M,WAAWZ,IAcDkM,CAAYlM,IACzB5L,KAAK,WACLlE,MAAM,YAGViI,MAAM,0BASlB6T,GAASvX,WAAa,CACpBuL,YAAatL,IAAUC,MAAMC,YAG/B,IAOeC,gBAPS,SAAAC,GAAK,MAAK,CAChCkL,YAAalL,EAAM0L,QAAQR,gBAGD,SAAA9N,GAAQ,OAClC8C,YAAmB,CAAC4L,cAAYH,mBAAiBvO,KAEpC2C,CAA8CmX,ICrD9ChH,GAfI,WACjB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO/H,OAAK,EAACC,KAAK,WAAWnN,UAAWmX,KACxC,kBAAC,IAAD,CAAOjK,OAAK,EAACC,KAAK,gBAAgBnN,UAAW6Z,KAC7C,kBAAC,IAAD,CAAO3M,OAAK,EAACC,KAAK,iBAAiBnN,UAAWga,KAC9C,kBAAC,IAAD,CAAO9M,OAAK,EAACC,KAAK,oBAAoBnN,UAAWgb,KACjD,kBAAC,IAAD,CAAO9N,OAAK,EAACC,KAAK,oBAAoBnN,UAAW4b,KACjD,kBAAC,IAAD,CAAO1O,OAAK,EAACC,KAAK,uBAAuBnN,UAAW6b,KACpD,kBAAC,IAAD,CAAO3O,OAAK,EAACC,KAAK,oBAAoBnN,UAAWic,KACjD,kBAAC,IAAD,CAAO/O,OAAK,EAACC,KAAK,yBAAyBnN,UAAWwU,OC0BtD1V,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ+E,QAAS,QAEXuR,QAAS,CACPC,aAAc,IAEhB4G,YAAY,aACVpY,QAAS,OACTyB,WAAY,SACZqI,eAAgB,WAChBlI,QAAS,SACN5G,EAAM8W,OAAOP,SAElB9H,OAAQ,CACN4O,OAAQrd,EAAMqd,OAAOC,OAAS,EAC9BC,WAAYvd,EAAMwd,YAAY5b,OAAO,CAAC,QAAS,UAAW,CACxD6b,OAAQzd,EAAMwd,YAAYC,OAAOC,MACjCC,SAAU3d,EAAMwd,YAAYG,SAASC,iBAGzCC,YAAa,CACX5F,WAvBgB,IAwBhB1T,MAAM,eAAD,OAxBW,IAwBX,OACLgZ,WAAYvd,EAAMwd,YAAY5b,OAAO,CAAC,QAAS,UAAW,CACxD6b,OAAQzd,EAAMwd,YAAYC,OAAOC,MACjCC,SAAU3d,EAAMwd,YAAYG,SAASG,kBAGzC3d,WAAY,CACVC,YAAa,IAEf2d,iBAAkB,CAChB/Y,QAAS,QAEX1E,MAAO,CACLJ,SAAU,EACVuW,eAAgB,QAElBuH,YAAa,CACXrd,SAAU,WACVsd,WAAY,SACZ1Z,MA3CgB,IA4ChBgZ,WAAYvd,EAAMwd,YAAY5b,OAAO,QAAS,CAC5C6b,OAAQzd,EAAMwd,YAAYC,OAAOC,MACjCC,SAAU3d,EAAMwd,YAAYG,SAASG,kBAGzCI,iBAAiB,aACfC,UAAW,SACXZ,WAAYvd,EAAMwd,YAAY5b,OAAO,QAAS,CAC5C6b,OAAQzd,EAAMwd,YAAYC,OAAOC,MACjCC,SAAU3d,EAAMwd,YAAYG,SAASC,gBAEvCrZ,MAAOvE,EAAMK,QAAQ,IACpBL,EAAMoe,YAAYC,GAAG,MAAQ,CAC5B9Z,MAAOvE,EAAMK,QAAQ,KAGzBwW,aAAc7W,EAAM8W,OAAOP,QAC3BxH,QAAS,CACP7O,SAAU,EACVyE,OAAQ,QACRoS,SAAU,QAEZ3J,UAAW,CACTsJ,WAAY1W,EAAMK,QAAQ,GAC1BsW,cAAe3W,EAAMK,QAAQ,IAE/Bob,MAAO,CACL7U,QAAS5G,EAAMK,QAAQ,GACvB2E,QAAS,OACT+R,SAAU,OACVuH,cAAe,UAEjBC,YAAa,CACX5Z,OAAQ,KAEV0F,KAAM,CACJoM,eAAgB,OAChBtV,MAAO,SAETyV,QAAS,CACPJ,aAAc,IAEhBgI,OAAQ,CACNhY,SAAU,OACVjC,MAAO,OACPI,OAAQ,OACR8Z,gBAAiB,UACjB5Z,UAAW,UAEbL,MAAO,CACLF,OAAQ,SACRG,aAAc,MACdC,UAAW,OACXH,MAAO,IACPI,OAAQ,KAEV0O,KAAK,CACHxO,UAAW,cAIT6Z,GAAc,SAACxZ,GACnB,IAAM1E,EAAUV,KACRmR,EAAgB/L,EAAhB+L,YACAtK,EAAgBsK,EAAhBtK,MAAOtB,EAAS4L,EAAT5L,KAHc,EAIVqC,mBAASC,OAAOC,SAASC,KAAKC,MAAM,MAAM,IAArD8I,EAJqB,sBAKPlJ,mBAASC,OAAOC,SAASC,KAAKC,MAAM,MAAM,GAAGA,MAAM,KAAK,IAAtE5E,EALqB,oBAO7BuI,qBAAU,WACLvI,GACDgC,EAAMwM,eAAexO,KAEvB,IAX2B,MAaLwE,oBAAS,GAbJ,mBAatB0H,EAbsB,KAahBuP,EAbgB,KAqB7B,OACE,6BACE,yBAAKle,UAAWD,EAAQP,MACtB,kBAAC4P,GAAA,EAAD,MACA,kBAACnP,EAAA,EAAD,CAAQC,SAAS,WAAWF,UAAWme,aAAKpe,EAAQiO,OAAQW,GAAQ5O,EAAQqd,cAC1E,kBAACjd,EAAA,EAAD,CAASH,UAAWD,EAAQ+V,SAC1B,kBAACzG,GAAA,EAAD,CACEC,KAAK,QACL5O,MAAM,UACNuJ,aAAW,cACXlF,QAjBa,WACvBmZ,GAAQ,IAiBEle,UAAWme,aAAKpe,EAAQL,WAAYiP,GAAQ5O,EAAQud,mBACpD,kBAAC,KAAD,OAEF,kBAACld,EAAA,EAAD,CAAYG,UAAWC,IAAMC,GAAE,oBAAe0P,EAAf,aAA0B1N,EAA1B,oBAAuDpC,QAAQ,KAAKK,MAAM,UAAU0R,QAAM,EAACpS,UAAWD,EAAQF,OAA7I,gBAGA,kBAACwP,GAAA,EAAD,CAAY9O,UAAWC,IAAMC,GAAE,kCAA6B0P,EAA7B,aAAwC1N,GAAa/B,MAAM,WACxF,kBAAC0d,GAAA,EAAD,CAAQpe,UAAWD,EAAQge,QAASnZ,EAAMA,EAAKyC,MAAM,GAAI,GAAI,QAE/D,kBAACgI,GAAA,EAAD,CAAYpF,aAAW,4BAA4BvJ,MAAM,WACvD,kBAAC8V,GAAA,EAAD,CAAOC,aAAc,EAAG/V,MAAM,aAC5B,kBAAC,KAAD,QAGJ,kBAAC2O,GAAA,EAAD,CAAY9O,UAAWC,IAAMC,GAAE,kCAA6B0P,EAA7B,aAAwC1N,GAAa/B,MAAM,WACxF,kBAAC,KAAD,OAEF,kBAAC2O,GAAA,EAAD,CAAYtK,QAAS,kBAAIlE,KAAcH,MAAM,WAC3C,kBAAC,KAAD,SAIN,kBAAC6O,GAAA,EAAD,CAAQlP,QAAQ,YAAYN,QAAS,CAACib,MAAOmD,aAAKpe,EAAQwd,aAAc5O,GAAQ5O,EAAQ0d,mBAAoB9O,KAAMA,GAChH,yBAAK3O,UAAWD,EAAQ4c,aACtB,kBAACtN,GAAA,EAAD,CAAYtK,QAvCI,WACxBmZ,GAAQ,KAuCE,kBAAC,KAAD,QAGJ,kBAAC/O,GAAA,EAAD,MACA,kBAACL,GAAA,EAAD,KACE,6BACE,kBAACmD,GAAA,EAAD,CAAMjS,UAAWD,EAAQ6S,MACvB,yBAAKyL,QAAS1P,GACZ,kBAACjK,EAAA,EAAD,CAAW1E,UAAWD,EAAQgE,MAAOY,MAAM,sBAAsB9E,MAAM,0BACvE,kBAACO,EAAA,EAAD,KAAaoQ,EAAY5L,OAE3B,kBAACuN,GAAA,EAAD,CAAakM,QAAS1P,GACpB,kBAACvO,EAAA,EAAD,CAAYC,QAAQ,KAAKK,MAAM,gBAAgBH,UAAU,KACtDiQ,EAAYtK,MAAOoY,WAAW9N,EAAYtK,OAAOqY,QAAQ,GAAI,OAEhE,kBAACne,EAAA,EAAD,CAAYM,MAAM,gBAAgBH,UAAU,KACzCiQ,EAAYgO,OADf,yBAGA,kBAAC9U,EAAA,EAAD,CAAQ9E,KAAK,YAAYiC,MAAOX,GAAc,EAAGsT,UAAW,GAAKC,UAAQ,MAG7E,kBAAC1K,GAAA,EAAD,CAAU1K,QAAM,EAAC9D,UAAWC,IAAMC,GAAE,oBAAe0P,EAAf,aAA0B1N,EAA1B,qBAClC,kBAACuM,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,kBAExB,kBAACH,GAAA,EAAD,CAAU1K,QAAM,EAAC9D,UAAWC,IAAMC,GAAE,yBAAoB0P,EAApB,aAA+B1N,EAA/B,qBAClC,kBAACuM,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,cAExB,kBAACH,GAAA,EAAD,CAAU1K,QAAM,EAAC9D,UAAWC,IAAMC,GAAE,0BAAqB0P,EAArB,aAAgC1N,IAClE,kBAACuM,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,qBAExB,kBAACH,GAAA,EAAD,CAAU1K,QAAM,EAAC9D,UAAWC,IAAMC,GAAE,6BAAwB0P,EAAxB,aAAmC1N,IACrE,kBAACuM,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,cAExB,kBAACH,GAAA,EAAD,CAAU1K,QAAM,EAAC9D,UAAWC,IAAMC,GAAE,6BAAwB0P,EAAxB,aAAmC1N,IACrE,kBAACuM,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,cAExB,kBAACH,GAAA,EAAD,CAAU1K,QAAM,EAAC9D,UAAWC,IAAMC,GAAE,gCAA2B0P,EAA3B,aAAsC1N,IACxE,kBAACuM,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,cAExB,kBAACH,GAAA,EAAD,CAAU1K,QAAM,EAAC9D,UAAWC,IAAMC,GAAE,6BAAwB0P,EAAxB,aAAmC1N,IACrE,kBAACuM,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,gBAExB,kBAACH,GAAA,EAAD,CAAU1K,QAAM,EAAC9D,UAAWC,IAAMC,GAAE,iBAAY0P,EAAZ,qBAClC,kBAACnB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,kBAI9B,kBAACC,GAAA,EAAD,OAEA,kBAAC,GAAD,MACA,0BAAMnP,UAAWD,EAAQuO,SACvB,yBAAKtO,UAAWD,EAAQqW,eACxB,kBAACM,GAAA,EAAD,CAAW7Q,SAAS,KAAK7F,UAAWD,EAAQ4M,WAC1C,kBAACD,GAAA,EAAD,KACE,kBAAC,GAAD,YASduR,GAAYhZ,WAAa,CACvB9C,MAAO+C,IAAUC,MAAMC,YAGzB,IASeC,gBATS,SAAAC,GAAK,MAAK,CAChCnD,MAAOmD,EAAMmZ,KAAKtc,MAClBqO,YAAalL,EAAM0L,QAAQR,YAC3BR,SAAU1K,EAAM+K,KAAKL,aAGI,SAAAtN,GAAQ,OACjC8C,YAAmB,CAACyL,kBAAgBf,gBAAcxN,KAErC2C,CAA6C4Y,ICxS7CS,GAVU,WACvB,IAAMC,EAAQC,cAEd,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOnR,OAAK,EAACC,KAAI,UAAKiR,EAAME,KAAOte,UAAW,kBAAI,4CCuBzCue,GA3BH,WACV,OACE,6BACE,4BAAI,yBAAKC,IAAI,OAAOjS,IAAI,iCACxB,gCACE,6BACE,4BACE,4BAAI,kBAAC,IAAD,CAAMrM,GAAG,KAAT,cACJ,iCACA,4BAAI,kBAAC,IAAD,CAAMA,GAAG,oBAAT,oBAIV,6BACE,kBAAC,GAAD,OAEF,6BACE,gCACE,8DAAmC,kBAAC,IAAD,CAAMA,GAAG,KAAT,iBACnC,6EACA,wD,UCnBJqB,GAAU,CACdkd,KAAM,OACNC,MAAO,SAEH/c,GAAgB,CACpBC,MAAM,GACNgR,MAAM,GACN9C,KAAK,IAeMoO,GAAO,SAACS,GACnB,OAAO,SAAAxc,GACLzB,EAAIqC,KAAK,QAAS4b,GACjBtc,MAAK,SAAAC,GlCrB0B,IAACnB,EAAOS,EkCsBtCO,EAAS,CACPI,KAAMhB,GAAQkd,KACd7c,MAAOU,EAASE,OAEfF,EAASE,KAAKE,MACfP,EACEgN,GAAY7M,EAASE,KAAKE,SlC5BCvB,EkC+BRmB,EAASE,KAAKrB,MlC/BCS,EkC+BMU,EAASE,KAAKsN,KlC9B9DvP,aAAaqe,QATU,SASSzd,GAChCZ,aAAaqe,QATM,SASSC,KAAKC,UAAUld,IkC8BrCxB,EAAQK,KAAR,iBAAuB6B,EAASE,KAAKsN,KAAKvL,IAA1C,yBAGH9B,OAAM,SAAAC,GACLP,EACEgN,GAAY,+CACZxM,QAAQC,IAAIF,SAMPqc,GAAQ,SAACnM,GACpB,OAAO,SAAAzQ,GACLzB,EAAIqC,KAAK,cAAe6P,GACvBvQ,MAAK,SAAAC,GACJH,EAAS,CACPI,KAAMhB,GAAQmd,MACd9L,MAAOtQ,EAASE,OAEfF,EAASE,KAAKE,MACfP,EACEgN,GAAY7M,EAASE,KAAKE,QAG5BP,EACEgN,GAAY7M,EAASE,KAAKmX,KAC1BvZ,EAAQK,KAAK,cAIlBgC,OAAM,SAAAC,GACLP,EACEgN,GAAY,+CACZxM,QAAQC,IAAIF,SAMPsc,GAAQ,SAAClP,GACpB,OAAO,SAAA3N,GACLzB,EAAIqC,KAAK,uBAAwB+M,GAChCzN,MAAK,SAAAC,GACJH,EAAS,CACLI,KAAMhB,GAAQmd,MACd5O,KAAMxN,EAASE,OAEhBF,EAASE,KAAKE,MACfP,EACEgN,GAAY7M,EAASE,KAAKE,QAG5BP,EACEgN,GAAY7M,EAASE,KAAKmX,KAC1BvZ,EAAQK,KAAK,cAIlBgC,OAAM,SAAAC,GACLP,EACEgN,GAAY,iDACZxM,QAAQC,IAAIF,S,+BC/Ed5D,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoN,UAAW,CACT9G,SAAU,KAEZmV,MAAO,CACL/W,UAAW1E,EAAMK,QAAQ,GACzB2E,QAAS,OACTsZ,cAAe,SACf7X,WAAY,UAEd+X,OAAQ,CACNla,OAAQtE,EAAMK,QAAQ,GACtBoe,gBAAiBze,EAAM8R,QAAQE,UAAU8F,MAE3CxX,MAAO,CACLJ,SAAU,GAEZwD,MAAO,CACLvC,MAAO,MACPqF,SAAU,IAEZyZ,KAAM,CACJpb,UAAW,OAEbqb,OAAQ,CACN5b,OAAQtE,EAAMK,QAAQ,EAAG,EAAG,QAoHjByF,gBARS,SAAAC,GAAK,MAAK,CAChCmK,QAASnK,EAAMmK,QAAQA,QACvBE,SAAUrK,EAAMmK,QAAQE,aAGC,SAAAjN,GAAQ,OACjC8C,YAAmB,CAACiZ,QAAM5O,gBAAcC,iBAAepN,KAE1C2C,EAhHD,SAACZ,GACb,IAAM1E,EAAUV,KADO,EAEmB4H,oBAAS,GAF5B,mBAEhByY,EAFgB,KAEDC,EAFC,KAIvB3U,qBAAU,WACRvG,EAAMqL,iBACN,IAEF,IAAMiE,EAAS6L,aAAW,CACxB1M,cAAe,CAAEC,MAAO,GAAI0M,SAAU,IACtClM,iBAAkBC,KAAW,CAC3BT,MAAOS,OACJT,MAAM,qBACNU,SAAS,yBACZgM,SAAUjM,OACPC,SAAS,yBACTiM,IAAI,GAAI,uBAEX1X,SAAU,SAAAzB,GACRlC,EAAMga,KAAK9X,GACXlC,EAAMqL,kBAIZ,OACE,6BACE,kBAAC7P,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKL,UAAWD,EAAQF,OAA5C,gBAGA,kBAACS,EAAA,EAAD,CAAQC,UAAWC,IAAMC,GAAE,IAAOC,MAAM,WAAxC,UAGJ,kBAACgW,GAAA,EAAD,CAAW1W,UAAWD,EAAQ4M,UAAWpM,UAAU,OAAOsF,SAAS,MACjE,yBAAK7F,UAAWD,EAAQib,OACtB,kBAACoD,GAAA,EAAD,CAAQpe,UAAWD,EAAQge,QACzB,kBAAC,KAAD,OAEF,kBAAC3d,EAAA,EAAD,CAAYG,UAAU,KAAKF,QAAQ,MAAnC,SAGA,0BAAM+H,SAAU2L,EAAOC,cACrB,kBAACtL,EAAA,EAAD,CACErI,QAAQ,WACRyC,KAAK,QACL8B,KAAK,QACLf,OAAO,SACPoQ,WAAS,EACTtL,MAAM,QACNpC,SAAUwN,EAAO9L,aACjB8X,OAAQhM,EAAOiM,WACfnZ,MAAOkN,EAAOpN,OAAOwM,MACrBrK,WAAY,CAAEC,UAAW,MAE3B,6BACGgL,EAAOM,QAAQlB,OAASY,EAAOO,OAAOnB,MACrC,kBAAC/S,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOnB,OACnD,MAEN,kBAACzK,EAAA,EAAD,CACErI,QAAQ,WACRyC,KAAK,WACL8B,KAAK,WACLf,OAAO,SACPoQ,WAAS,EACTtL,MAAM,QACNpC,SAAUwN,EAAO9L,aACjB8X,OAAQhM,EAAOiM,WACfnZ,MAAOkN,EAAOpN,OAAOkZ,SACrB/W,WAAY,CAAEC,UAAW,MAE3B,6BACGgL,EAAOM,QAAQwL,UAAY9L,EAAOO,OAAOuL,SACxC,kBAACzf,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOuL,UACnD,MAEN,kBAAC,KAAD,CAAWI,QAAQ,2CAA2C1Z,SAAU,kBAAMoZ,GAAiB,MAC/F,kBAACrf,EAAA,EAAD,CAAQwC,KAAK,SAASiC,QAAS,kBAAIN,EAAMoL,gBAAgBjH,SAAU8W,EAAezL,WAAS,EAAC5T,QAAQ,YAAYK,MAAM,UAAUV,UAAWD,EAAQ0f,OAAQM,OAAQhM,EAAOiM,YAA1K,UAGA,kBAACtT,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAMR,MAAI,EAAC8F,IAAE,GACX,kBAAC,IAAD,CAAMvR,GAAG,kBAAkBJ,QAAQ,SAAnC,wBAIF,kBAACqM,GAAA,EAAD,CAAM1M,UAAWD,EAAQyf,KAAMtT,MAAI,EAAC8F,IAAE,GACpC,kBAAC,IAAD,CAAMvR,GAAG,IAAIJ,QAAQ,SAArB,kBAMN,yBAAKge,OAAQ5Z,EAAMkL,UACjB,kBAACuQ,GAAA,EAAD,OAEF,kBAAC,GAAD,YCjIJ7gB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyb,MAAO,CACL/W,UAAW1E,EAAMK,QAAQ,GACzB2E,QAAS,OACTsZ,cAAe,SACf7X,WAAY,UAEd+X,OAAQ,CACNla,OAAQtE,EAAMK,QAAQ,GACtBoe,gBAAiBze,EAAM8R,QAAQE,UAAU8F,MAE3CpU,MAAO,CACLvC,MAAO,MACPqF,SAAU,IAEZyZ,KAAM,CACJzZ,SAAU,IAEZ0Z,OAAQ,CACN5b,OAAQtE,EAAMK,QAAQ,EAAG,EAAG,QA+EjByF,gBARS,SAAAC,GAAK,MAAK,CAChCmK,QAASnK,EAAMmK,QAAQA,QACvBE,SAAUrK,EAAMmK,QAAQE,aAGC,SAAAjN,GAAQ,OACjC8C,YAAmB,CAAC8Z,SAAO1P,eAAaC,iBAAenN,KAE1C2C,EA3ED,SAACZ,GACb,IAAM1E,EAAUV,KADO,EAEmB4H,oBAAS,GAF5B,mBAEhByY,EAFgB,KAEDC,EAFC,KAIjB5L,EAAS6L,aAAW,CACxB1M,cAAe,CAAEC,MAAO,IACxBQ,iBAAkBC,KAAW,CAC3BT,MAAOS,OACJT,MAAM,kBACNU,SAAS,2BAEZzL,SAAU,SAAAzB,GACRlC,EAAM6a,MAAM3Y,MAIlB,OACE,6BACE,kBAAC,GAAD,MACA,kBAAC1G,EAAA,EAAD,CAAQC,SAAS,QAAQF,UAAWD,EAAQiO,QAC1C,kBAAC7N,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAK+R,QAAM,GAA/B,kBAKF,kBAACsE,GAAA,EAAD,CAAWnW,UAAU,OAAOsF,SAAS,MACnC,yBAAK7F,UAAWD,EAAQib,OACtB,kBAACoD,GAAA,EAAD,CAAQpe,UAAWD,EAAQge,QACzB,kBAAC,KAAD,OAEF,kBAAC3d,EAAA,EAAD,CAAYG,UAAU,KAAKF,QAAQ,MAAnC,mBAGA,0BAAM+H,SAAU2L,EAAOC,cACrB,kBAACtL,EAAA,EAAD,CACErI,QAAQ,WACRyC,KAAK,QACL8B,KAAK,QACLf,OAAO,SACPoQ,WAAS,EACTtL,MAAM,QACNpC,SAAUwN,EAAO9L,aACjB8X,OAAQhM,EAAOiM,WACfnZ,MAAOkN,EAAOpN,OAAOwM,MACrBrK,WAAY,CAAEC,UAAW,MAE3B,6BACGgL,EAAOM,QAAQlB,OAASY,EAAOO,OAAOnB,MACrC,kBAAC/S,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOnB,OACnD,MAEN,kBAAC,KAAD,CAAW8M,QAAQ,2CAA2C1Z,SAAU,kBAAMoZ,GAAiB,MAC/F,kBAACrf,EAAA,EAAD,CAAQwC,KAAK,SAASiC,QAAS,kBAAKN,EAAMoL,gBAAgBjH,SAAU8W,EAAezL,WAAS,EAAC5T,QAAQ,YAAYK,MAAM,UAAUV,UAAWD,EAAQ0f,OAAQM,OAAQhM,EAAOiM,YAA3K,2BAIF,yBAAK3B,OAAQ5Z,EAAMkL,UACjB,kBAACuQ,GAAA,EAAD,OAEF,kBAAC,GAAD,YChFJ7gB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoN,UAAW,CACT9G,SAAU,KAEZmV,MAAO,CACL/W,UAAW1E,EAAMK,QAAQ,GACzB2E,QAAS,OACTsZ,cAAe,SACf7X,WAAY,UAEd+X,OAAQ,CACNla,OAAQtE,EAAMK,QAAQ,GACtBoe,gBAAiBze,EAAM8R,QAAQE,UAAU8F,MAE3CpU,MAAO,CACLvC,MAAO,MACPqF,SAAU,IAEZyZ,KAAM,CACJzZ,SAAU,IAEZ0Z,OAAQ,CACN5b,OAAQtE,EAAMK,QAAQ,EAAG,EAAG,QA2HjByF,gBARS,SAAAC,GAAK,MAAK,CAChCmQ,WAAYnQ,EAAMmK,QAAQC,YAC1BD,QAASnK,EAAMmK,QAAQA,YAGE,SAAA/M,GAAQ,OACjC8C,YAAmB,CAAC+Z,SAAO7P,eAAaE,gBAAclN,KAEzC2C,EAvHD,SAACZ,GACb,IAAM1E,EAAUV,KADO,EAEmB4H,oBAAS,GAF5B,mBAEhByY,EAFgB,KAEDC,EAFC,OAGS1Y,oBAAS,GAHlB,mBAGhB0I,EAHgB,KAGNwQ,EAHM,OAKLlZ,mBAASC,OAAOC,SAASC,KAAKC,MAAM,MAAM,IAApD3F,EALe,sBAMLuF,mBAASC,OAAOC,SAASC,KAAKC,MAAM,MAAM,IAApD8L,EANe,oBAQjBY,EAAS6L,aAAW,CACxB1M,cAAe,CAAE2M,SAAU,GAAIO,qBAAsB,IACrDzM,iBAAkBC,KAAW,CAC3BiM,SAAUjM,OACPC,SAAS,yBACTwM,QAAQ,sCACP,iFAEDP,IAAI,GAAI,qBACXM,qBAAsBxM,OACnB0M,MAAM,CAAC1M,KAAQ,YAAa,MAAO,wBACnCC,SAAS,uBAEZzL,SAAU,SAAAzB,GACRwZ,GAAY,GACZ,IAAM9P,EAAO,CACXwP,SAAUlZ,EAAOkZ,SACjBne,MAAOA,EACPyR,MAAOA,GAET1O,EAAM8a,MAAMlP,MAIlB,OACE,6BACE,kBAACpQ,EAAA,EAAD,CAAQC,SAAS,QAAQF,UAAWD,EAAQiO,QAC1C,kBAAC7N,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAK+R,QAAM,GAA/B,kBAKF,kBAACsE,GAAA,EAAD,CAAW1W,UAAWD,EAAQ4M,UAAWpM,UAAU,OAAOsF,SAAS,MACjE,yBAAK7F,UAAWD,EAAQib,OACtB,kBAACoD,GAAA,EAAD,CAAQpe,UAAWD,EAAQge,QACzB,kBAAC,KAAD,OAEF,kBAAC3d,EAAA,EAAD,CAAYG,UAAU,KAAKF,QAAQ,MAAnC,mBAGA,0BAAM+H,SAAU2L,EAAOC,cACrB,kBAACtL,EAAA,EAAD,CACErI,QAAQ,WACRyC,KAAK,WACL8B,KAAK,WACLf,OAAO,SACPoQ,WAAS,EACTtL,MAAM,aACNpC,SAAUwN,EAAO9L,aACjB8X,OAAQhM,EAAOiM,WACfnZ,MAAOkN,EAAOpN,OAAOkZ,SACrB/W,WAAY,CAAEC,UAAW,MAE3B,6BACGgL,EAAOM,QAAQwL,UAAY9L,EAAOO,OAAOuL,SACxC,kBAACzf,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAOuL,UACnD,MAEN,kBAACnX,EAAA,EAAD,CACErI,QAAQ,WACRyC,KAAK,WACL8B,KAAK,uBACLf,OAAO,SACPoQ,WAAS,EACTtL,MAAM,mBACNpC,SAAUwN,EAAO9L,aACjB8X,OAAQhM,EAAOiM,WACfnZ,MAAOkN,EAAOpN,OAAOyZ,qBACrBtX,WAAY,CAAEC,UAAW,MAE3B,6BACGgL,EAAOM,QAAQ+L,sBAAwBrM,EAAOO,OAAO8L,qBACpD,kBAAChgB,EAAA,EAAD,CAAYJ,UAAWD,EAAQkD,OAAQ8Q,EAAOO,OAAO8L,sBACnD,MAEN,kBAAC,KAAD,CAAWH,QAAQ,2CAA2C1Z,SAAU,kBAAMoZ,GAAiB,MAC/F,kBAACrf,EAAA,EAAD,CAAQwC,KAAK,SAAS8F,SAAU8W,EAAezL,WAAS,EAAC5T,QAAQ,YAAYK,MAAM,UAAUV,UAAWD,EAAQ0f,OAAQM,OAAQhM,EAAOiM,YAAvI,WAKF,kBAACtK,GAAA,EAAD,CAAQ/G,KAAMlK,EAAMgR,WAAY1Q,QAAS,kBAAKob,GAAY,IAAO3Q,QAAS/K,EAAMmL,aAC9E,kBAAC+F,GAAA,EAAD,sBAGA,kBAACC,GAAA,EAAD,KACGnR,EAAMgL,SAET,kBAACoG,GAAA,EAAD,KACE,kBAACvV,EAAA,EAAD,CAAQyE,QAASN,EAAMmL,aAAvB,YAIJ,yBAAKyO,OAAQ1O,GACX,kBAACuQ,GAAA,EAAD,aC/IGK,GARD,WACZ,OACE,0CCSEC,GAAe,SAAC,GAAD,IAAcC,EAAd,EAAGlgB,UAAyBmgB,EAA5B,oCACnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAlc,GAAK,OvCZwD,OAApC3D,aAAaa,QAHzB,UuCiBjB,kBAAC8e,EAAchc,GAEf,kBAAC,IAAD,CAAUhE,GAAI,CAAEmgB,SAAU,SAAUtb,MAAO,CAAEub,KAAMpc,EAAM0C,kBAwBlD2Z,GAlBA,kBACb,kBAAC,IAAD,CAAQngB,QAASA,GACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8M,OAAK,EAACC,KAAK,IAAInN,UAAWT,IACjC,kBAAC,IAAD,CAAO2N,OAAK,EAACC,KAAK,SAASnN,UAAWwgB,KACtC,kBAAC,IAAD,CAAOtT,OAAK,EAACC,KAAK,kBAAkBnN,UAAWygB,KAC/C,kBAAC,IAAD,CAAOtT,KAAK,kBAAkBnN,UAAW0gB,KACzC,kBAAC,IAAD,CAAOvT,KAAK,UAAUnN,UAAWgO,KACjC,kBAAC,GAAD,CAAcb,KAAK,QAAQnN,UAAWgW,KACtC,kBAAC,GAAD,CAAc7I,KAAK,WAAWnN,UAAWmX,KACzC,kBAAC,GAAD,CAAchK,KAAK,OAAOnN,UAAWue,KACrC,kBAAC,GAAD,CAAcpR,KAAK,SAASnN,UAAWggB,KACvC,kBAAC,IAAD,CAAO9S,OAAK,EAACC,KAAK,aAAanN,UAAW,kBAAI,kEAC9C,kBAAC,IAAD,CAAUE,GAAG,kBChCJygB,GAJH,kBACV,kBAAC,GAAD,O,UCFIpf,GAAU,CACdqf,WAAY,YACZC,YAAa,YACbC,aAAc,cACdC,UAAW,YAEPpf,GAAgB,CACpBiH,MAAO,GACPoY,UAAW,ICRPzf,GACe,oBAGfI,GAAgB,CACpBsf,cAAe,ICQXC,GAAcC,YAAgB,CAClCjD,KTFyB,WAAoC,IAAnCnZ,EAAkC,uDAA1BpD,GAAeyf,EAAW,uCAC5D,OAAOA,EAAO7e,MACZ,KAAKhB,GAAQkd,KACX,OAAO,eAAI1Z,EAAX,CAAkBnD,MAAOwf,EAAOxf,QAClC,KAAKL,GAAQmd,MACX,OAAO,eAAI3Z,EAAX,CAAkB6N,MAAOwO,EAAOxO,QAClC,KAAKrR,GAAQ8f,MACX,OAAO,eAAItc,EAAX,CAAkB+K,KAAMsR,EAAOtR,OACjC,QACE,OAAO/K,ISNXC,OzCF2B,WAAoC,IAAnCD,EAAkC,uDAA1BpD,EAAeyf,EAAW,uCAC9D,OAAOA,EAAO7e,MACZ,KAAKhB,EAAQC,MACX,OAAO,eAAIuD,EAAX,CAAkBnD,MAAOwf,EAAOxf,MAAOC,QAASuf,EAAOvf,UACzD,KAAKN,EAAQG,SACX,OAAO,eAAIqD,EAAX,CAAkBhD,KAAMqf,EAAOrf,KAAMC,YAAaof,EAAOpf,cAC3D,KAAKT,EAAQE,IACX,OAAO,eAAIsD,EAAX,CAAkBjD,QAASsf,EAAOtf,UACpC,QACE,OAAOiD,IyCNX+K,K/BJyB,WAAoC,IAAnC/K,EAAkC,uDAA1BpD,GAAeyf,EAAW,uCAC5D,OAAOA,EAAO7e,MACZ,KAAKhB,GAEL,KAAKA,GACH,OAAO,eAAIwD,EAAX,CAAkB0K,SAAU2R,EAAO3R,WACrC,QACE,OAAO1K,I+BFX0L,Q9BA4B,WAAoC,IAAnC1L,EAAkC,uDAA1BpD,GAAeyf,EAAW,uCAC/D,OAAOA,EAAO7e,MACZ,KAAKhB,GACH,OAAO,eAAIwD,EAAX,CAAkBiL,UAAWoR,EAAOpR,UAAWE,eAAgBkR,EAAOlR,iBACxE,KAAK3O,GACH,OAAO,eAAIwD,GACb,KAAKxD,GAEL,KAAKA,GACH,OAAO,eAAIwD,EAAX,CAAkBkL,YAAamR,EAAOnR,cACxC,KAAK1O,GACH,OAAO,eAAIwD,EAAX,CAAkBkL,YAAa,KACjC,KAAK1O,GACH,OAAO,eAAIwD,GACb,QACE,OAAOA,I8BdXjD,QvBL4B,WAAoC,IAAnCiD,EAAkC,uDAA1BpD,GAAeyf,EAAW,uCAC/D,OAAOA,EAAO7e,MAEZ,KAAKhB,GACH,OAAO,eAAIwD,EAAX,CAAkBqR,SAAUgL,EAAOhL,SAAUE,cAAe8K,EAAO9K,gBACrE,KAAK/U,GACH,IAAM+f,EAAM,aAAOvc,EAAMqR,UAMzB,OALAkL,EAAOC,SAAQ,SAAAzf,GACVA,EAAQyC,MAAQ6c,EAAO7c,MACxBzC,EAAQ8U,UAAW,MAGhB,eAAI7R,EAAX,CAAkBqR,SAAUkL,IAC9B,KAAK/f,GACH,IAAM+G,EAAK8Y,EAAO9Y,GACZkZ,EAAYzc,EAAMqR,SAASW,QAAO,SAAAjV,GAAO,OAAIA,EAAQyC,MAAQ+D,KACnE,OAAO,eAAIvD,EAAX,CAAkBqR,SAAUoL,IAC9B,QACE,OAAOzc,IuBZXhD,KlBTyB,WAAoC,IAAnCgD,EAAkC,uDAA1BpD,GAAeyf,EAAW,uCAC5D,OAAOA,EAAO7e,MACZ,KAAKhB,GAAQ4Y,UACX,OAAO,eAAIpV,EAAX,CAAkBhD,KAAMqf,EAAOrf,KAAMuY,UAAW8G,EAAO9G,YACzD,KAAK/Y,GAAQkgB,SACX,OAAO,eAAI1c,EAAX,CAAkBhD,KAAMqf,EAAOrf,OACjC,KAAKR,GAAQ8Y,WACX,OAAO,eAAItV,EAAX,CAAkBhD,KAAMqf,EAAOrf,KAAMC,YAAaof,EAAOpf,cAC3D,KAAKT,GAAQmgB,YAEb,QACE,OAAO3c,IkBDX6D,MFV0B,WAAoC,IAAnC7D,EAAkC,uDAA1BpD,GAAeyf,EAAW,uCAC7D,OAAOA,EAAO7e,MACZ,KAAKhB,GAAQogB,UACX,OAAO,eAAI5c,EAAX,CAAkBkL,YAAamR,EAAOnR,cACxC,QACE,OAAOlL,IEMX5B,KrBPyB,WAAoC,IAAnC4B,EAAkC,uDAA1BpD,GAAeyf,EAAW,uCAC5D,OAAOA,EAAO7e,MACZ,KAAKhB,GACH,OAAO,eAAIwD,EAAX,CAAkBsU,MAAO+H,EAAO/H,MAAOC,WAAY8H,EAAO9H,aAC5D,KAAK/X,GACH,OAAO,eAAIwD,GACb,KAAKxD,GACH,OAAO,eAAIwD,EAAX,CAAkBwU,SAAU6H,EAAO7H,WACrC,KAAKhY,GACH,OAAOwD,EACT,KAAKxD,GACH,IAAM+G,EAAK8Y,EAAO9Y,GACZ+Q,EAAQtU,EAAMsU,MAAMtC,QAAQ,SAAA5T,GAAI,OAAIA,EAAKoB,MAAQ+D,KACvD,OAAO,eAAIvD,EAAX,CAAkBsU,MAAOA,IAC3B,QACE,OAAOtU,IqBPXmK,QhCb4B,WAAoC,IAAnCnK,EAAkC,uDAA1BpD,GAAeyf,EAAW,uCAC/D,OAAOA,EAAO7e,MACZ,KAAKhB,GACH,OAAO,eAAIwD,EAAX,CAAkBmK,QAASkS,EAAOlS,QAASC,aAAa,IAC1D,KAAK5N,GACH,OAAO,eAAIwD,EAAX,CAAkBmK,QAAS,GAAIC,aAAa,EAAOC,UAAU,IAC/D,KAAK7N,GACH,OAAO,eAAIwD,EAAX,CAAkBqK,UAAU,IAC9B,KAAK7N,GACH,OAAO,eAAIwD,EAAX,CAAkBqK,UAAU,IAC9B,QACE,OAAOrK,IgCGX6c,aDhBiC,WAAoC,IAAnC7c,EAAkC,uDAA1BpD,GAAeyf,EAAW,uCACpE,OAAOA,EAAO7e,MACZ,KAAKhB,GACH,OAAO,eAAIwD,EAAX,CAAkB6c,aAAcR,EAAOQ,eACzC,QACE,OAAO7c,MCcA8c,GAAQC,YAAgBC,KAAhBD,CAAuBE,IAAvBF,CAAoCZ,ICrBzDe,IAAS7B,OACP,kBAAC,IAAD,CAAUyB,MAAOA,IACf,kBAAC,GAAD,OAEFK,SAASC,eAAe,W","file":"static/js/main.d9d4c3a1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Site = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            SuggestInBox\r\n          </Typography>\r\n          <Button component={Link} to={`/login`} color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Site;","import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","import history from './history';\r\nexport const TOKEN_KEY = \"@token\";\r\nexport const INFOS = \"@infos\";\r\n\r\nexport const isAuthenticated = () => localStorage.getItem(TOKEN_KEY) !== null;\r\n\r\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\r\nexport const getInfos = () => localStorage.getItem(INFOS);\r\n\r\nexport const setInfosLocalStorage = (token, infos) => {\r\n  localStorage.setItem(TOKEN_KEY, token);\r\n  localStorage.setItem(INFOS, JSON.stringify(infos));\r\n};\r\nexport const setTokenLocalStorage = (token) => {\r\n  localStorage.setItem(TOKEN_KEY, token);\r\n};\r\nexport const logoutUser = () => {\r\n  localStorage.removeItem(TOKEN_KEY);\r\n  localStorage.removeItem(INFOS);\r\n  history.push('/login');\r\n};","import axios from \"axios\";\r\nimport { getToken } from \"./auth\";\r\n\r\nconst api = axios.create({\r\n  //baseURL: \"https://api.suggestinbox.com.br\"\r\n  baseURL: \"http://localhost:3001\"\r\n});\r\n\r\napi.interceptors.request.use(async config => {\r\n  const token = getToken();\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport default api;","import api from '../services/api';\r\nimport history from \"../services/history\";\r\n\r\nconst ACTIONS = {\r\n  INFOS: 'INFOS',\r\n  ADD: 'ADD_SUGGEST',\r\n  GET_MENU: 'GET_MENU'\r\n}\r\nconst INITIAL_STATE = {\r\n  infos:[],\r\n  idTable: [],\r\n  suggest:[],\r\n  menu: [],\r\n  sectionMenu: [],\r\n}\r\nexport const clientReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.INFOS:\r\n      return {...state, infos: action.infos, idTable: action.idTable}\r\n    case ACTIONS.GET_MENU:\r\n      return {...state, menu: action.menu, sectionMenu: action.sectionMenu}\r\n    case ACTIONS.ADD:\r\n      return {...state, suggest: action.suggest}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//OBTER INFOS DA COMPANIA\r\nexport const getInfo = (idCompany, idTable) => {\r\n  return dispatch => {\r\n    api.get(`/client/company/${idCompany}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.INFOS,\r\n        infos: Response.data,\r\n        idTable: idTable\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//ENVIAR SUGGEST\r\nexport const submitSuggest = (suggest) => {\r\n  if(suggest.recommends === 'y'){\r\n    suggest.recommends = true;\r\n  }else{\r\n    suggest.recommends = false;\r\n  }\r\n  return dispatch => {\r\n    api.post(`/client/company/${suggest.companyId}`, suggest)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ADD,\r\n        suggest: Response.data,\r\n      });\r\n    }, history.push(`/client/opiniao/sucesso/?${suggest.companyId}`))\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//LISTAR MENU\r\nexport const getMenu = (idCompany) => {\r\n  return dispatch => {\r\n    api.get(`/client/company/menu/${idCompany}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.GET_MENU,\r\n        menu: Response.data,\r\n        sectionMenu: Response.data.sectionMenu,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//ENVIAR CALL\r\nexport const addCall = (idCompany, idTable) => {\r\n  const call = {\r\n    table: idTable,\r\n    companyId: idCompany\r\n  };\r\n  console.log(call);\r\n  return dispatch => {\r\n    api.post(`/client/company/call/${idCompany}`, call)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ADD_CALL,\r\n      });\r\n    }) //history.push(`/suggest/call/success`))\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { addCall } from '../../../store/clientReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: 'auto',\r\n      width: '100%',\r\n    },\r\n  },\r\n  photo: {\r\n    margin: '0 auto',\r\n    marginBottom: '10px',\r\n    marginTop: '20px',\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    margin: 'auto',\r\n    marginBottom: '20px',\r\n  },\r\n  button: {\r\n    marginBottom: \"20px\"\r\n  },\r\n  hide: {\r\n    display: 'none'\r\n  }\r\n}));\r\n\r\nconst MainClient = (props) => {\r\n  const { infos, idTable } = props;\r\n  const classes = useStyles();\r\n\r\n  return(\r\n    <div className={classes.root}>\r\n      <CardMedia className={classes.photo} image=\"/assets/logoBar.png\" title=\"Contemplative Reptile\"/>\r\n      <div className={classes.center}>\r\n        <h3>{infos.name}</h3>\r\n        <p>{infos.slogan}</p>\r\n      </div>\r\n      <Button className={props.infos.suggest? classes.button : classes.hide} component={Link} to={`/client/opiniao/?${infos._id}?table=${idTable? idTable: 0}`} variant=\"contained\" color=\"primary\">\r\n        Dar opinião\r\n      </Button>\r\n      <Button className={props.infos.menu? classes.button : classes.hide} \r\n        component={Link} to={`/client/cardapio/?${infos._id}?table=${idTable? idTable: 0}`} \r\n        variant=\"contained\" color=\"primary\">\r\n        Cardápio online\r\n      </Button>\r\n      <Button className={props.infos.call && idTable != 0? classes.button : classes.hide} \r\n        onClick={() => props.addCall(infos._id, idTable)}\r\n        component={Link} to={`/client/atencao/?${infos._id}?table=${idTable? idTable: 0}`} \r\n        variant=\"contained\" color=\"primary\">\r\n        Chamar Garçom\r\n      </Button>\r\n      <Button className={props.infos.delivery? classes.button : classes.hide} \r\n        component={Link} to={`/client/opiniao/?${infos._id}?table=${idTable? idTable: 0}`} variant=\"contained\" color=\"primary\">\r\n        Delivery\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nMainClient.prototypes = {\r\n  infos: PropTypes.array.isRequired,\r\n  idTable: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos,\r\n  idTable: state.client.idTable\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({addCall}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainClient);","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { submitSuggest } from '../../../store/clientReducer'\r\nimport { connect } from 'react-redux';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport Star from '@material-ui/icons/Star';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: 'auto',\r\n      width: '100%',\r\n      background: '#fafafa',\r\n    },\r\n  },\r\n  name: {\r\n    textAlign: 'center',\r\n  },\r\n  span: {  \r\n    textAlign: 'center'\r\n  },\r\n  namePhone: {\r\n    width: '250px'\r\n  },\r\n  ident: {\r\n    marginTop: '10px',\r\n    maxWidth: \"200px\",\r\n  },\r\n  unknown: {\r\n    fontSize: \"12px\",\r\n  },\r\n  center: {\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    minHeight: '160px'\r\n  },\r\n  stars: {\r\n    padding: '28px',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    minHeight: '150px'\r\n  },\r\n  recommends: {\r\n    padding: '20px',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    minHeight: '150px'\r\n  },\r\n  yesNo: {\r\n    margin: '0 auto',\r\n  },\r\n  button: {\r\n    margin: '8px',\r\n    marginTop: '25px'\r\n  }\r\n}));\r\n\r\nconst NumberFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='(##) #########'\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst FormClient = (props) => {\r\n  const classes = useStyles();\r\n  const { infos } = props;\r\n  const [companyId] = useState(window.location.href.split('?')[1]);\r\n  const [checked, setChecked] = useState(false);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [skipped, setSkipped] = useState(new Set());\r\n  const steps = [\"\", \"\", \"\", \"\"];\r\n\r\n  const isStepSkipped = (step) => {\r\n    return skipped.has(step);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const [values, setValues] = useState({\r\n    name: '',\r\n    phone: '',\r\n    stars: 0,\r\n    opinion: '',\r\n    recommends: '',\r\n    companyId\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    switch(event.target.value){\r\n      case '1':\r\n        setValues({...values, [event.target.name]: 1 });\r\n        break;\r\n      case '2':\r\n        setValues({...values, [event.target.name]: 2 });\r\n        break;\r\n      case '3':\r\n        setValues({...values, [event.target.name]: 3 });\r\n        break;\r\n      case '4':\r\n        setValues({...values, [event.target.name]: 4 });\r\n        break;\r\n      case '5':\r\n        setValues({...values, [event.target.name]: 5 });\r\n        break;\r\n      default:\r\n        setValues({...values, [event.target.name]: event.target.value });\r\n        break;\r\n    }\r\n  };\r\n  const checkChange = (event) => {\r\n    setValues({name: '', phone: ''});\r\n    setChecked(event.target.checked);\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    props.submitSuggest(values);\r\n  }\r\n\r\n  function getStepContent(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <div className={classes.center}>\r\n            <TextField className={classes.namePhone}\r\n              label=\"Nome\"\r\n              disabled={checked}\r\n              value={values.name} \r\n              onChange={handleChange}\r\n              name=\"name\"\r\n              id=\"standard-basic\"\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <TextField className={classes.namePhone}\r\n              label=\"Telefone\"\r\n              disabled={checked}\r\n              value={values.phone}\r\n              onChange={handleChange}\r\n              name=\"phone\"\r\n              id=\"formatted-numberformat-input\"\r\n              InputProps={{inputComponent: NumberFormatCustom}}\r\n            />\r\n            <FormControlLabel className={classes.ident}\r\n              label={<Typography className={classes.unknown}>Desejo não me identificar{infos.promo? \" e não participar da promoção\": \"\"}</Typography>}\r\n              size=\"small\"\r\n              control={<Checkbox color=\"primary\" onChange={checkChange} name=\"checked\" />}\r\n            />\r\n          </div>\r\n        );\r\n      case 1:\r\n        return (\r\n          <div className={classes.center}>\r\n            <Box className={classes.stars} component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n              <Typography>Toque para classificar nosso estabelecimento</Typography>\r\n              <Rating\r\n                name=\"stars\"\r\n                onChange={handleChange}\r\n                defaultValue={0}\r\n                value={values.stars}\r\n                icon={<Star fontSize=\"large\" />}\r\n                emptyIcon={<StarBorderIcon fontSize=\"large\" />}\r\n              />\r\n            </Box>\r\n          </div>\r\n        );\r\n      case 2:\r\n        return (\r\n          <div className={classes.center}>\r\n            <FormControl className={classes.recommends} component=\"fieldset\">\r\n              <Typography>Nos recomendaria a um amigo?</Typography>\r\n              <RadioGroup className={classes.yesNo} onChange={handleChange} value={values.recommends} row aria-label=\"position\" name=\"recommends\">\r\n                <FormControlLabel\r\n                  value=\"y\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Sim\"\r\n                  name=\"recommends\"\r\n                  labelPlacement=\"bottom\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"n\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Não\"\r\n                  name=\"recommends\"\r\n                  labelPlacement=\"bottom\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </div>\r\n        );\r\n      case 3:\r\n        return (\r\n          <div className={classes.center}>\r\n            <TextField\r\n            label=\"Deixe sua opinião\"\r\n            multiline\r\n            rows={4}\r\n            rowsMax={7}\r\n            variant=\"outlined\"\r\n            value={values.opinion} \r\n            onChange={handleChange}\r\n            name=\"opinion\"\r\n            id=\"text-basic\" \r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return (\r\n          <div>\r\n            ok\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <h3 className={classes.name}>{props.infos.name}</h3>\r\n      <p className={classes.name}>{props.infos.slogan}</p>\r\n      <form className={classes.root} onSubmit={handleSubmit}>\r\n        <Stepper activeStep={activeStep}>\r\n          <Step>\r\n            <StepLabel/>\r\n          </Step>\r\n          <Step>\r\n            <StepLabel/>\r\n          </Step>\r\n          <Step>\r\n            <StepLabel/>\r\n          </Step>\r\n          <Step>\r\n            <StepLabel/>\r\n          </Step>\r\n        </Stepper>\r\n        <div className={classes.center}>\r\n          {getStepContent(activeStep)}\r\n          <div className={classes.buttons}>\r\n            <Button variant=\"contained\" disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n              Voltar\r\n            </Button>\r\n            {activeStep === steps.length? (\r\n              <Button className={classes.button} variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                Enviar\r\n              </Button>\r\n            ) : (\r\n              <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length -1 ? \"Enviar\" : \"Próximo\"}\r\n              </Button>)\r\n            }\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nFormClient.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({submitSuggest}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormClient);","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { getMenu, addCall } from '../../../store/clientReducer';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { TableHead } from '@material-ui/core';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: 'auto',\r\n      width: '100%',\r\n    },\r\n  },\r\n  photo: {\r\n    margin: '0 auto',\r\n    marginBottom: '10px',\r\n    marginTop: '20px',\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    margin: 'auto',\r\n    marginBottom: '20px',\r\n  },\r\n  button: {\r\n    marginTop: '20px',\r\n  },\r\n  buttonEnd: {\r\n    marginTop: '20px',\r\n    marginBottom: '50px'\r\n  },\r\n  hide: {\r\n    display: 'none'\r\n  }\r\n}));\r\n\r\nconst MenuClient = (props) =>{\r\n  const classes = useStyles();\r\n  const { menu, sectionMenu, infos, idTable } = props;\r\n\r\n  const [companyId] = useState(window.location.href.split('?')[1]);\r\n\r\n  useEffect(() => {\r\n    props.getMenu(companyId);\r\n  },[])\r\n\r\n  return(\r\n    <div className={classes.root}>\r\n      <div className={classes.center}>\r\n        <CardMedia className={classes.photo} image=\"/assets/logoBar.png\" title=\"Contemplative Reptile\"/>\r\n        <h3>{infos.name}</h3>\r\n        <p>{infos.slogan}</p>\r\n      </div>\r\n      <h3 className={classes.center}>{menu.name}</h3>\r\n      <Paper className={classes.menu}>\r\n        {sectionMenu.sort((a, b) => a.index > b.index? 1 : -1).map(section => {\r\n          return (\r\n            <TableContainer key={section._id}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell colSpan={2} align='center'>\r\n                      <h4>{section.name}</h4>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {section.itemMenu.sort((a, b) => a.index > b.index? 1 : -1).map(item => {\r\n                    return (\r\n                      <TableRow key={item._id}>\r\n                        <TableCell align='left'>\r\n                          <h5>{item.name}</h5> \r\n                          <h6><i>({item.description})</i></h6>\r\n                        </TableCell>\r\n                        <TableCell align='right'>{(item.value).toLocaleString(\"pt-BR\", {style: \"currency\", currency: \"BRL\"})}</TableCell>\r\n                      </TableRow>\r\n                    )\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          )})}\r\n      </Paper>\r\n        <Button className={classes.button}\r\n          component={Link} to={`/client/?${infos._id}?table=${idTable}`}\r\n          variant=\"contained\" color=\"primary\">\r\n          Voltar ao Menu\r\n        </Button>\r\n        <Button className={props.infos.call && idTable != 0? classes.buttonEnd : classes.hide} \r\n          onClick={() => props.addCall(infos._id, idTable)}\r\n          component={Link} to={`/client/atencao/?${infos._id}?table=${idTable? idTable: 0}`} \r\n          variant=\"contained\" color=\"primary\">\r\n          Chamar garçom\r\n        </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nMenuClient.prototypes = {\r\n  infos: PropTypes.array.isRequired,\r\n  idTable: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos,\r\n  idTable: state.client.idTable,\r\n  menu: state.client.menu,\r\n  sectionMenu: state.client.sectionMenu,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({getMenu, addCall}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuClient);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: 'auto',\r\n      width: '100%',\r\n    },\r\n  },\r\n  centerText: {\r\n    textAlign: 'center',\r\n  },\r\n  okText: {\r\n    textAlign: 'center',\r\n    margin: '15px'\r\n  },\r\n  button: {\r\n    marginTop: '15px'\r\n  },\r\n  photo: {\r\n    margin: '0 auto',\r\n    marginBottom: '10px',\r\n    marginTop: '20px',\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n}));\r\n\r\nconst AtentionClient = (props) => {\r\n  const classes = useStyles();\r\n  const { infos } = props;\r\n\r\n  return(\r\n    <Grid container className={classes.root}>\r\n      <CardMedia className={classes.photo} image=\"/assets/logoBar.png\" title=\"Contemplative Reptile\"/>\r\n      <h3 className={classes.centerText}>{props.infos.name}</h3>\r\n      <p className={classes.centerText}>{props.infos.slogan}</p>\r\n      <Typography className={classes.okText} variant=\"h5\">Chamado enviado!</Typography>\r\n      <Typography className={classes.centerText}>Chegaremos assim que possível.</Typography>\r\n      <Typography className={classes.centerText}>Enquanto isso você pode ver nosso cardápio online no botão abaixo:</Typography>\r\n      <Button className={classes.button} component={Link} to={`/client/cardapio/?${infos._id}?table=${infos.idTable? infos.idTable: 0}`} variant=\"contained\" color=\"primary\">\r\n        Cardápio online\r\n      </Button>\r\n      <Button className={classes.button} component={Link} to={`/client/?${infos._id}?table=${infos.idTable}`} variant=\"contained\" color=\"primary\">\r\n        Voltar ao Menu\r\n      </Button>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nAtentionClient.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nexport default connect(mapStateToProps)(AtentionClient);","import React, { useState, useEffect} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { getInfo } from '../../../store/clientReducer';\r\n\r\nconst AboutClient = (props) => {\r\n  const { infos } = props;\r\n  const [ idUrl ] = useState(window.location.href.split('?')[1]);\r\n\r\n  useEffect(()=> {\r\n    console.log(idUrl);\r\n  },[idUrl]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>{infos.name}</h3>\r\n      <p>{infos.history}</p>\r\n      <h4>Localização</h4>\r\n      <p>{infos.localization}</p>\r\n      <iframe title='mapa' src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d63695.95624351804!2d-38.560086091509596!3d-3.810670390317004!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x7c74e4a78a20565%3A0xce1304c86cef7da7!2sR.%20A%20-%20Passar%C3%A9%2C%20Fortaleza%20-%20CE%2C%2060810-670!5e0!3m2!1spt-BR!2sbr!4v1595268668224!5m2!1spt-BR!2sbr\" width=\"250\" height=\"200\" frameBorder=\"0\" aria-hidden=\"false\" tabIndex=\"0\"/>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({getInfo}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AboutClient);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport ScratchCard from 'react-scratchcard';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: 'auto',\r\n      width: '100%',\r\n      touchAction: 'none',\r\n    },\r\n  },\r\n  centerText: {\r\n    border: '2px solid',\r\n    textAlign: 'center',\r\n    padding: '55px 0'\r\n  },\r\n  okText: {\r\n    textAlign: 'center',\r\n    margin: '15px'\r\n  },\r\n  button: {\r\n    marginTop: '15px'\r\n  },\r\n  \r\n}));\r\n\r\nconst ConfirmClient = (props) => {\r\n  const classes = useStyles();\r\n  const { infos } = props;\r\n\r\n  const settings = {\r\n    width: 200,\r\n    height: 200,\r\n    image: \"/assets/scratch.jpg\",\r\n    finishPercent: 50,\r\n    onComplete: () => console.log('The card is now clear!')\r\n  };\r\n  \r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Typography className={classes.okText} variant=\"h5\">Obrigado pela sua opinião!</Typography>\r\n      <ScratchCard {...settings}>\r\n        <Typography className={classes.centerText}>\r\n          Tente novamente na sua próxima visita!\r\n        </Typography>\r\n      </ScratchCard>\r\n      <Button className={classes.button} component={Link} to={`/client/?${infos._id}?table=${infos.idTable? infos.idTable: 0}`} variant=\"contained\" color=\"primary\">\r\n        Voltar ao início\r\n      </Button>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nConfirmClient.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nexport default connect(mapStateToProps)(ConfirmClient);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport MainClient from './MainClient';\r\nimport FormClient from './FormClient';\r\nimport MenuClient from './MenuClient';\r\nimport AtentionClient from './AtentionClient';\r\nimport AboutClient from './AboutClient';\r\nimport ConfirmClient from './ConfirmClient';\r\n\r\nconst RoutesApp = () => (\r\n  <Switch>\r\n    <Route exact path='/client' component={MainClient}/>\r\n    <Route exact path='/client/opiniao' component={FormClient}/>\r\n    <Route exact path='/client/opiniao/sucesso' component={ConfirmClient}/>\r\n    <Route exact path='/client/atencao' component={AtentionClient}/>\r\n    <Route exact path='/client/sobrenos' component={AboutClient}/>\r\n    <Route exact poth='/client/cardapio' component={MenuClient}/>\r\n  </Switch>\r\n)\r\n\r\nexport default RoutesApp;","import React, { useState, useEffect} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport RoutesClient from './routesClient';\r\nimport { getInfo } from '../../store/clientReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport MarkunreadMailboxIcon from '@material-ui/icons/MarkunreadMailbox';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  img:{\r\n    padding: '10px'\r\n  },\r\n  menu: {\r\n    height: '25px'\r\n  },\r\n  links:{\r\n    margin: 'auto'\r\n  },\r\n  labelLink:{\r\n    padding: '10px',\r\n  },\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  list: {\r\n    width: 200,\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  content: {\r\n    margin: 'auto',\r\n    padding: '30px',\r\n    maxWidth: '450px',\r\n  },\r\n}));\r\n\r\nconst Client = (props) => {\r\n  const { infos } = props;\r\n  const [ idCompany ] = useState(window.location.href.split('?')[1]);\r\n  const [ idTable ] = useState(window.location.href.split('table=')[1]);\r\n\r\n  const [state, setState] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    props.getInfo(idCompany, idTable);\r\n  },[idCompany]);\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    setState(open);\r\n  };\r\n\r\n  const list = (\r\n    <div className={classes.list} onClick={toggleDrawer(false)} role=\"presentation\" onKeyDown={toggleDrawer(false)}>\r\n      <List>\r\n        <ListItem button component={Link} to={`/client/?${infos._id}?table=${idTable? idTable: 0}`}>\r\n          <ListItemIcon><HomeIcon/></ListItemIcon>\r\n          <ListItemText primary='Início'/>\r\n        </ListItem>\r\n        <Divider/>\r\n        <ListItem button component={Link} to={`/client/sobrenos/?${infos._id}?table=${idTable? idTable: 0}`}>\r\n          <ListItemIcon><InfoIcon/></ListItemIcon>\r\n          <ListItemText primary='Sobre nós'/>\r\n        </ListItem>\r\n        <Divider/>\r\n        <ListItem button component={Link} to='/'>\r\n          <ListItemIcon><MarkunreadMailboxIcon/></ListItemIcon>\r\n          <ListItemText primary='Sobre o SuggestInBox' />\r\n        </ListItem>\r\n        <Divider/>\r\n      </List>\r\n    </div>\r\n  )\r\n  return(\r\n    <div>\r\n      <CssBaseline />\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton onClick={toggleDrawer(true)} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Drawer open={state} onClose={toggleDrawer(false)}>\r\n            {list}\r\n          </Drawer>\r\n          <Typography variant=\"button\" className={classes.links}>\r\n            <Button color=\"inherit\" component={Link} to={`/client/?${infos._id}?table=${idTable? idTable: 0}`}>SuggestInBox</Button>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.content}>\r\n        <RoutesClient/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nClient.prototypes = {\r\n  infos: PropTypes.array.isRequired,\r\n  idTable: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos,\r\n  idTable: state.client.idTable\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({getInfo}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Client);","const INITIAL_STATE = {\r\n  message: '',\r\n  showMessage: false,\r\n  progress: true\r\n}\r\nexport const ACTIONS = {\r\n  SHOW_MESSAGE: 'SHOW_MESSAGE',\r\n  HIDE_MESSAGE: 'HIDE_MESSAGE',\r\n  HIDE_PROGRESS: 'HIDE_PROGRESS',\r\n  SHOW_PROGRESS: 'SHOW_PROGRESS'\r\n}\r\nexport const messageReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.SHOW_MESSAGE:\r\n      return {...state, message: action.message, showMessage: true}\r\n    case ACTIONS.HIDE_MESSAGE:\r\n      return {...state, message: '', showMessage: false, progress: true}\r\n    case ACTIONS.SHOW_PROGRESS:\r\n      return {...state, progress: false}\r\n    case ACTIONS.HIDE_PROGRESS:\r\n      return {...state, progress: true}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//MOSTAR MENSAGEM CAPTURADA DAS REQUESTS\r\nexport const showMessage = (message) => {\r\n  return{\r\n    type: ACTIONS.SHOW_MESSAGE,\r\n    message: message,\r\n  }\r\n}\r\n//FECHAR MENSAGENS\r\nexport const hideMessage = () => {\r\n  return { \r\n    type: ACTIONS.HIDE_MESSAGE \r\n  }\r\n}\r\n//PROGRESS DA REQUISIÇÃO\r\nexport const showProgress = () => {\r\n  return {\r\n    type: ACTIONS.SHOW_PROGRESS\r\n  }\r\n}\r\n//FECHAR PROGRESSO\r\nexport const hideProgress = () => {\r\n  return {\r\n    type: ACTIONS.HIDE_PROGRESS\r\n  }\r\n}","import api from '../services/api';\r\nimport history from '../services/history';\r\nimport { showMessage } from './messageReducer';\r\n\r\nconst ACTIONS = {\r\n  LIST_USERS: 'LISTUSERS',\r\n  BY_ID_USER: 'BYIDUSER',\r\n  UPDATE_USER: 'UPDATEUSER',\r\n}\r\nconst INITIAL_STATE = {\r\n  users: [],\r\n  userById: [],\r\n  infosUsers: [],\r\n}\r\nexport const userReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.BY_ID_USER:\r\n      return {...state, userById: action.userById}\r\n    case ACTIONS.UPDATE_USER:\r\n      return {...state, userById: action.userById}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//LISTAR TODOS USUÁRIOS\r\nexport const listUser = (page, nOfItems) => {\r\n  return dispatch => {\r\n    api.get(`/adm/user?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_USERS,\r\n        users: docs,\r\n        infosUsers: infos,\r\n      });\r\n      if(Response.data.error){\r\n        dispatch(\r\n          showMessage(Response.data.error)\r\n        )\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servidor indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )}\r\n    );\r\n  }\r\n}\r\n//GET BY ID USER\r\nexport const getUserById = (idUser) => {\r\n  return dispatch => {\r\n    api.get(`/adm/user/${idUser}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_USER,\r\n        userById: Response.data,\r\n      });\r\n      if(Response.data.error){\r\n        dispatch(\r\n          showMessage(Response.data.error)\r\n        )\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servidor indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )}\r\n    );\r\n  }\r\n}\r\n//UPDATE USER\r\nexport const updateUser = (user, idUser) => {\r\n  return dispatch => {\r\n    api.put(`/adm/user/${idUser}`, user)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_USER,\r\n        userById: Response.data\r\n      });\r\n      if(Response.data.error){\r\n        dispatch(\r\n          showMessage(Response.data.error)\r\n        )\r\n      }else{\r\n        dispatch(\r\n          showMessage(\"Usuário atualizado com sucesso!\"),\r\n          history.push(`/user/?${idUser}?page=1&limit=25`)\r\n        )\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servidor indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )}\r\n    );\r\n  }\r\n}","import api from '../services/api';\r\nimport history from '../services/history';\r\nimport { showMessage } from './messageReducer';\r\n\r\nconst ACTIONS = {\r\n  LIST_COMPANIES: 'LIST_COMPANIES',\r\n  BY_ID_COMPANY: 'BY_ID_COMPANY',\r\n  UPDATE_COMPANY: 'UPDATE_COMPANY',\r\n  ATV_COMPANY: 'ATV_COMPANY',\r\n  CLEAN_COMPANY: 'CLEAN_COMPANY',\r\n  ADD_COMPANY: 'ADD_COMPANY',\r\n}\r\nconst INITIAL_STATE = {\r\n  companies: [],\r\n  companyById: [],\r\n  infosCompanies: [],\r\n  companyAtv: [],\r\n  suggest: []\r\n}\r\nexport const companyReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.LIST_COMPANIES:\r\n      return {...state, companies: action.companies, infosCompanies: action.infosCompanies}\r\n    case ACTIONS.ADD_COMPANY:\r\n      return {...state}\r\n    case ACTIONS.BY_ID_COMPANY:\r\n      return {...state, companyById: action.companyById}\r\n    case ACTIONS.UPDATE_COMPANY:\r\n      return {...state, companyById: action.companyById};\r\n    case ACTIONS.CLEAN_COMPANY:\r\n      return {...state, companyById: []}\r\n    case ACTIONS.ATV_COMPANY:\r\n      return {...state}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//LISTAR COMPANIAS\r\nexport const listCompanies = (page, nOfItems) => {\r\n  return dispatch => {\r\n    api.get(`/adm/company?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_COMPANIES,\r\n        companies: docs,\r\n        infosCompanies: infos,\r\n      });\r\n      if(Response.data.error){\r\n        dispatch(\r\n          showMessage(Response.data.error),\r\n        )\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//ADICIONAR COMPANY\r\nexport const addCompany = (company, idUser) => {\r\n  return dispatch => {\r\n    api.post('/adm/company', company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ADD_COMPANY,\r\n      });\r\n      if(Response.data.error){\r\n        dispatch(\r\n          showMessage(Response.data.error)\r\n        )\r\n      }else{\r\n        dispatch(\r\n          showMessage(\"Companhia cadastrada com sucesso!\")\r\n        );\r\n        history.push(`/user/?${idUser}?page=1&limit=25`)\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servido indisponivel, tente mais tarde!\"),\r\n        console.log(error)\r\n      )\r\n    });\r\n  }\r\n}\r\n//GET BY ID COMPANY\r\nexport const getCompanyById = (idCompany) => {\r\n  return dispatch => {\r\n    api.get(`/adm/company/${idCompany}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_COMPANY,\r\n        companyById: Response.data,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servido indisponivel, tente mais tarde!\"),\r\n        console.log(error)\r\n      )\r\n    })\r\n  }\r\n}\r\n//UPDATE COMPANY\r\nexport const updateCompany = (company, idCompany, idUser) => {\r\n  return dispatch => {\r\n    api.put(`/adm/company/${idCompany}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_COMPANY,\r\n        companyById: Response.data,\r\n      });\r\n      if(Response.data.error){\r\n        dispatch(\r\n          showMessage(Response.data.error),\r\n          history.push(`/suggest/?${idUser}/?${idCompany}?page=1&limit=25`)\r\n        )\r\n      }else{\r\n        dispatch(\r\n          showMessage('Companhia atualizada com sucesso!'),\r\n          history.push(`/suggest/?${idUser}/?${idCompany}?page=1&limit=25`)\r\n        )\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servido indisponivel, tente mais tarde!\"),\r\n        console.log(error)\r\n      )\r\n    });\r\n  }\r\n}\r\n//LIMPAR CAMPOS COMPANY NAS ATAULIZAÇÕES\r\nexport const cleanCompany = () => {\r\n  return {\r\n    type: ACTIONS.CLEAN_COMPANY,\r\n  }\r\n}\r\n//ATIVAR / DESATIVAR: MENU, PROMO, CALL\r\nexport const atvCompany = (company) => {\r\n  return dispatch => {\r\n    api.put(`/adm/company/${company._id}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ATV_COMPANY,\r\n      });\r\n      if(Response.data.error){\r\n        dispatch(\r\n          showMessage(Response.data.error)\r\n        )\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servido indisponivel, tente mais tarde!\"),\r\n        console.log(error)\r\n      )\r\n    })\r\n  }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { listCompanies } from '../../../store/companyReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  item: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  center: {\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    margin: '20px'\r\n  },\r\n  button: {\r\n    margin: '15px'\r\n  }\r\n}));\r\n\r\nconst Companies = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { companies, infosCompanies } = props;\r\n  const [ idUrl ] = useState(window.location.href.split('/?')[1].split('?')[0]);\r\n  const nOfPages = infosCompanies.pages;\r\n  const [page, setPage] = useState(1);\r\n  const [nOfItems, setNoOfItems] = useState(10);\r\n\r\n  useEffect(() => {\r\n    props.listCompanies(page, nOfItems);\r\n  },[page, nOfItems]);\r\n\r\n  const handleChange=(event, value)=>{\r\n    setPage(value);\r\n  }\r\n  const handleNofItems=(event)=>{\r\n    setNoOfItems(event.target.value);\r\n    setPage(1);\r\n  }\r\n\r\n  const mapCompanies = (\r\n    <React.Fragment>\r\n      {companies.map( company => {\r\n          return(\r\n            <Grid key={company._id} item md={4} sm={6} xs={12}>\r\n              <div className={classes.item}>  \r\n                <Card>\r\n                  <CardActionArea component={Link} to={`/suggest/?${idUrl}/?${company._id}?page=${page}&limit=${nOfItems}`}>\r\n                    <CardContent>\r\n                      <Typography noWrap variant=\"h5\" component=\"h2\">\r\n                        {company.name}\r\n                      </Typography>\r\n                      <Typography noWrap variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {company.address.city} - {company.address.state}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                  <CardActions className={classes.center}>\r\n                    <Button component={Link} to={`/suggest/?${idUrl}/?${company._id}?page=${page}&limit=${nOfItems}`} variant=\"contained\" color=\"primary\">\r\n                      Gerenciar\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </div>\r\n            </Grid>\r\n          )\r\n        })\r\n      }\r\n    </React.Fragment>\r\n  )\r\n\r\n  return(\r\n    <div className={classes.root}>\r\n      <Typography className={classes.center} variant=\"h5\" component=\"h2\">Companhias</Typography>\r\n      <Button className={classes.button} component={Link} to={`/user/setup-company/?${idUrl}`} variant=\"contained\" color=\"primary\">\r\n        Adicionar Companhia\r\n      </Button>\r\n      <Grid container item xs={12} spacing={3}>\r\n        {mapCompanies}\r\n      </Grid>\r\n      <Grid className={classes.center} container item xs={12} spacing={3}>\r\n        <Box component=\"span\">\r\n          <Pagination\r\n            count={nOfPages}\r\n            page={page}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nCompanies.prototypes = {\r\n  companies: PropTypes.array.isRequired,\r\n  infosCompanies: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companies: state.company.companies,\r\n  infosCompanies: state.company.infosCompanies,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({\r\n    listCompanies,\r\n  }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Companies);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport NumberFormat from 'react-number-format';\r\nimport * as Yup from 'yup';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider, Button, TextField, Card, Typography, Grid} from '@material-ui/core';\r\nimport { getUserById, updateUser } from '../../../store/userReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 8\r\n  },\r\n  button: {\r\n    float: 'right',\r\n    margin: 8,\r\n  },\r\n  media: {\r\n    margin: 'auto',\r\n    width: 140,\r\n    height: 140,\r\n  },\r\n  card: {\r\n    marginBottom: 10,\r\n  },\r\n  center: {\r\n    margin: 'auto',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  grid: {\r\n    justifyContent: 'center',\r\n    padding: 8\r\n  }\r\n}));\r\n\r\nconst ZipFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='#####-###'\r\n    />\r\n  );\r\n}\r\n\r\nZipFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst CpfFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='###.###.###-##'\r\n    />\r\n  );\r\n}\r\n\r\nCpfFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst PhoneFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='(##) #########'\r\n    />\r\n  );\r\n}\r\n\r\nPhoneFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst SetupUser = (props) => {\r\n  const classes = useStyles();\r\n  const { userById } = props;\r\n\r\n  const [idUrl] = useState(window.location.href.split('/?')[1]);\r\n  const defaultFormShape = {\r\n    email: '',\r\n    name: '',\r\n    cpf: '',\r\n    phone: '',\r\n    address: {\r\n      state: '',\r\n      city: '',\r\n      street: '',\r\n      number: '',\r\n      type: '',\r\n      district: '',\r\n      zip: '',\r\n      obs: ''\r\n    },\r\n  };\r\n\r\n  useEffect(()=>{\r\n    props.getUserById(idUrl);\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <Formik \r\n        initialValues= {userById._id? userById : defaultFormShape}\r\n        enableReinitialize\r\n        validationSchema={Yup.object({\r\n          email: Yup.string()\r\n            .required('Email obrigatório!'),\r\n          name: Yup.string()\r\n            .required('Nome obrigatório!'),\r\n          cpf: Yup.string()\r\n            .required('Cpf obrigatório!'),\r\n          phone: Yup.string()\r\n            .required('Telefone obrigatório!'),\r\n          address: Yup.object({\r\n            zip: Yup.string()\r\n              .required('Cep obrigatorio!'),\r\n            street: Yup.string()\r\n              .required('Rua obrigatorio!'),\r\n            district: Yup.string()\r\n              .required('Bairro obrigatorio!'),\r\n            city: Yup.string()\r\n              .required('Cidade obrigatorio!'),\r\n            state: Yup.string()\r\n              .required('Estado obrigatorio!'),\r\n            number: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n            type: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n            obs: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n          }),\r\n        })}\r\n\r\n        onSubmit={(values) => {\r\n          const { name, email, phone, cpf } = values;\r\n          const { state, city, street, number, type, district, zip, obs } = values.address;\r\n          const address = {state, city, street, number, type, district, zip, obs};\r\n          const userUpdate = { name, email, cpf, phone, address };\r\n          props.updateUser(userUpdate, userById._id);\r\n        }}>\r\n        {formik => (\r\n          <Card >\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <p style={{margin: 10}}>Dados do Administrador</p>\r\n              <Grid container>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={5}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Nome:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"name\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('name')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.name && formik.errors.name ? (\r\n                        <Typography className={classes.error}>{formik.errors.name}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"CPF:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"cpf\"\r\n                      InputProps={{inputComponent: CpfFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('cpf')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.cpf && formik.errors.cpf ? (\r\n                        <Typography className={classes.error}>{formik.errors.cpf}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Email:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"email\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('email')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.email && formik.errors.email ? (\r\n                        <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Telefone:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"phone\"\r\n                      InputProps={{inputComponent: PhoneFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('phone')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.phone && formik.errors.phone ? (\r\n                        <Typography className={classes.error}>{formik.errors.phone}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{margin: 10}}>Endereço</p>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cep:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.zip\"\r\n                      InputProps={{inputComponent: ZipFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.zip')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.zip}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Rua:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.street\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.street')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.street}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Bairro:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.district\"\r\n                      inputProps={{ maxLength: 40 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.district')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.district}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cidade:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.city\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.city')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.city}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Estado:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.state\"\r\n                      inputProps={{ maxLength: 30 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.state')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.state}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Número:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.number\"\r\n                      inputProps={{ maxLength: 6 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.number')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.number}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Tipo:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.type\"\r\n                      inputProps={{ maxLength: 20 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.type')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.type}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Complemento:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.obs\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.obs')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.obs}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Divider/>\r\n                  <Button type=\"submit\" className={classes.button} variant=\"contained\" color=\"primary\">\r\n                    Atualizar\r\n                  </Button>\r\n                  <Button className={classes.button} component={Link} to={`/user/?${userById._id}?page=1&limit=25`} variant=\"outlined\" color=\"primary\">\r\n                    Cancelar\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nSetupUser.prototypes = {\r\n  userById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userById: state.user.userById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ getUserById, updateUser }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupUser);"," import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport NumberFormat from 'react-number-format';\r\nimport * as Yup from 'yup';\r\nimport QRCode from 'qrcode.react';\r\n\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider, Button, TextField, Card, Typography, Grid} from '@material-ui/core';\r\nimport { addCompany, getCompanyById, updateCompany, cleanCompany } from '../../../store/companyReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 8\r\n  },\r\n  qrCode:{\r\n    textAlign: 'center',\r\n    maxWidth: '200px',\r\n    margin: '15px'\r\n  },\r\n  button: {\r\n    float: 'right',\r\n    margin: 8,\r\n  },\r\n  buttonQr: {\r\n    margin: '5px',\r\n    padding: '5px',\r\n    fontSize: '12px',\r\n    width: '90px'\r\n  },\r\n  buttonPhoto:{\r\n    margin: '5px',\r\n    padding: '5px',\r\n    fontSize: '12px',\r\n    width: '110px'\r\n  },\r\n  media: {\r\n    margin: 'auto',\r\n    width: 140,\r\n    height: 140,\r\n  },\r\n  cardMain: {\r\n    marginBottom: '10px'\r\n  },\r\n  card: {\r\n    marginBottom: 10,\r\n  },\r\n  sectionImg: {\r\n    justifyContent: 'center'\r\n  },\r\n  photo: {\r\n    marginBottom: '5px',\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  center: {\r\n    margin: 'auto',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  grid: {\r\n    justifyContent: 'center',\r\n    padding: 8\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  qrCodeTable: {\r\n    textAlign: 'center',\r\n    maxWidth: '300px',\r\n    margin: '15px'\r\n  },\r\n  nTable: {\r\n    width: '90px'\r\n  },\r\n  title: {\r\n    margin: '15px'\r\n  }\r\n}));\r\n\r\nconst ZipFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='#####-###'\r\n    />\r\n  );\r\n}\r\n\r\nZipFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst CnpjFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='##.###.###/####-##'\r\n    />\r\n  );\r\n}\r\n\r\nCnpjFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst PhoneFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='(##) #########'\r\n    />\r\n  );\r\n}\r\n\r\nPhoneFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst SetupCompany = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n\r\n  const [idUser] = useState(window.location.href.split('/?')[1]);\r\n  const [idCompany] = useState(window.location.href.split('/?')[2]);\r\n\r\n  const defaultFormShape = {\r\n    name: '',\r\n    cnpj: '',\r\n    slogan: '',\r\n    history: '',\r\n    localization: '',\r\n    email: '',\r\n    phone: '',\r\n    address: {\r\n      state: '',\r\n      city: '',\r\n      street: '',\r\n      number: '',\r\n      type: '',\r\n      district: '',\r\n      zip: '',\r\n      obs: ''\r\n    },\r\n  };\r\n  \r\n  const [ nTable, setNTable ] = useState(0);\r\n  const tableChange = (event) => {\r\n    setNTable(event.target.value);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(idCompany){\r\n      props.getCompanyById(idCompany);\r\n    }else{\r\n      props.cleanCompany();\r\n    }\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.cardMain}>\r\n        <Grid container className={classes.sectionImg}>\r\n          <Grid className={classes.qrCode} item>\r\n            <CardMedia\r\n              className={classes.photo}\r\n              image=\"/assets/logoBar.png\"\r\n              title=\"Contemplative Reptile\"\r\n            />\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              style={{ display: 'none' }}\r\n              id=\"raised-button-file\"\r\n              multiple\r\n              type=\"file\"\r\n            />\r\n            <Typography className={classes.title}>Foto perfil</Typography>\r\n            <label htmlFor=\"raised-button-file\">\r\n              <Button className={classes.buttonPhoto} variant=\"outlined\" component=\"span\" color=\"primary\">\r\n                Alterar Foto\r\n              </Button>\r\n            </label>\r\n          </Grid>\r\n          <Grid className={idCompany?  classes.qrCode : classes.hide} item>\r\n            <QRCode value={`https://app.suggestinbox.com.br/client/?${idCompany}?table=0`}/>\r\n            <Typography className={classes.title}>QR Code geral</Typography>\r\n            <Button rel=\"noopener noreferrer\" className={classes.buttonQr} target=\"_blank\" href={`http://app.suggestinbox.com.br/client/?${idCompany}?table=0`} variant=\"contained\" color=\"primary\">\r\n              Ver Perfil\r\n            </Button>\r\n            <Button rel=\"noopener noreferrer\" className={classes.buttonQr} target=\"_blank\" href={`http://app.suggestinbox.com.br/client/?${idCompany}?table=0`} variant=\"outlined\" color=\"primary\">\r\n              Imprimir\r\n            </Button>\r\n          </Grid>\r\n          <Grid className={idCompany?  classes.qrCodeTable : classes.hide} item>\r\n            <QRCode value={`https://app.suggestinbox.com.br/client/?${idCompany}?table=${nTable}`}/>\r\n            <Typography className={classes.title}>QR Code por mesa</Typography>\r\n            <TextField\r\n              className={classes.nTable}\r\n              id=\"standard-number\"\r\n              label=\"Nº da mesa\"\r\n              type=\"number\"\r\n              value={nTable}\r\n              onChange={tableChange}\r\n              size=\"small\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <Button rel=\"noopener noreferrer\" className={classes.buttonQr} target=\"_blank\" href={`http://app.suggestinbox.com.br/client/?${idCompany}?table=${nTable}`} variant=\"contained\" color=\"primary\">\r\n              Ver Perfil\r\n            </Button>\r\n            <Button rel=\"noopener noreferrer\" className={classes.buttonQr} target=\"_blank\" href={`localhost:3000/client/?${idCompany}?table=0`} variant=\"outlined\" color=\"primary\">\r\n              Imprimir\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n\r\n      <Formik \r\n        initialValues= {idCompany? companyById : defaultFormShape}\r\n        enableReinitialize\r\n        validationSchema={Yup.object({\r\n          name: Yup.string()\r\n            .required('Nome obrigatório!'),\r\n          cnpj: Yup.string()\r\n            .required('Cnpj obrigatório!'),\r\n          slogan: Yup.string()\r\n            .required('Slogan obrigatório'),\r\n          history: Yup.string()\r\n            .required('História obrigatória'),\r\n          localization: Yup.string()\r\n            .required('Localização obrigatória'),\r\n          email: Yup.string()\r\n            .required('Email obrigatório!'),\r\n          phone: Yup.string()\r\n            .required('Telefone obrigatório!'),\r\n          address: Yup.object({\r\n            zip: Yup.string()\r\n              .required('Cep obrigatorio!'),\r\n            street: Yup.string()\r\n              .required('Rua obrigatorio!'),\r\n            district: Yup.string()\r\n              .required('Bairro obrigatorio!'),\r\n            city: Yup.string()\r\n              .required('Cidade obrigatorio!'),\r\n            state: Yup.string()\r\n              .required('Estado obrigatorio!'),\r\n            number: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n          }),\r\n        })}\r\n\r\n        onSubmit={(values) => {\r\n          if(companyById._id){\r\n            const { name, slogan, history, localization, email, cnpj, phone } = values;\r\n            const { state, city, street, number, type, district, zip, obs } = values.address;\r\n            const address = {state, city, street, number, type, district, zip, obs};\r\n            const companyUpdate = { name, slogan, history, localization, email, cnpj, phone, address };\r\n            props.updateCompany(companyUpdate, companyById._id, idUser);\r\n          }else{\r\n            props.addCompany(values, idUser);\r\n          }\r\n        }}>\r\n        {formik => (\r\n          <Card >\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <p style={{margin: 10}}>Dados da companhia</p>\r\n              <Grid container>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Nome:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"name\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('name')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.name && formik.errors.name ? (\r\n                        <Typography className={classes.error}>{formik.errors.name}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Slogan:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"slogan\"\r\n                      inputProps={{ maxLength: 50 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('slogan')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.slogan && formik.errors.slogan ? (\r\n                        <Typography className={classes.error}>{formik.errors.slogan}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"História:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"history\"\r\n                      inputProps={{ maxLength: 250 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('history')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.history && formik.errors.history ? (\r\n                        <Typography className={classes.error}>{formik.errors.history}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Localização:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"localization\"\r\n                      inputProps={{ maxLength: 250 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('localization')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.localization && formik.errors.localization ? (\r\n                        <Typography className={classes.error}>{formik.errors.localization}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Email:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"email\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('email')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.email && formik.errors.email ? (\r\n                        <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Telefone:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"phone\"\r\n                      InputProps={{inputComponent: PhoneFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('phone')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.phone && formik.errors.phone ? (\r\n                        <Typography className={classes.error}>{formik.errors.phone}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"CNPJ:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"cnpj\"\r\n                      InputProps={{inputComponent: CnpjFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('cnpj')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.cnpj && formik.errors.cnpj ? (\r\n                        <Typography className={classes.error}>{formik.errors.cnpj}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{margin: 10}}>Endereço</p>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cep:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.zip\"\r\n                      InputProps={{inputComponent: ZipFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.zip')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.zip}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Rua:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.street\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.street')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.street}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Bairro:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.district\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.district')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.district}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cidade:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.city\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.city')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.city}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Estado:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.state\"\r\n                      inputProps={{ maxLength: 30 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.state')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.state}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Número:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.number\"\r\n                      inputProps={{ maxLength: 10 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.number')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.number}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Divider/>\r\n                  <Button type=\"submit\" className={classes.button} variant=\"contained\" color=\"primary\">\r\n                    {idCompany? 'Atualizar': 'Salvar'}\r\n                  </Button>\r\n                  <Button className={classes.button} component={Link} \r\n                    to={idCompany? `/suggest/?${idUser}/?${idCompany}?page=1&limit=25` : `/user/?${idUser}?page=1&limit=25`} variant=\"outlined\" color=\"primary\">\r\n                    Cancelar\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nSetupCompany.prototypes = {\r\n  companyById: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ \r\n    addCompany, \r\n    getCompanyById, \r\n    updateCompany, \r\n    cleanCompany, \r\n  }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupCompany);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Companies from './Companies';\r\nimport SetupUser from './SetupUser';\r\nimport SetupCompany from './SetupCompany';\r\n\r\nconst RoutesUser = () => {\r\n  return(\r\n    <Switch>\r\n      <Route exact path='/user' component={Companies}/>\r\n      <Route exact path='/user/setup' component={SetupUser}/>\r\n      <Route exact path='/user/setup-company' component={SetupCompany}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default RoutesUser;","import React from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\r\nimport { showMessage, hideMessage } from '../../store/messageReducer';\r\n\r\nconst MessageDialog = (props) => {\r\n  return(\r\n    <div>\r\n      <Dialog open={props.openDialog} onClick={()=> props.hideMessage} onClose={props.hideMessage}>\r\n        <DialogTitle>\r\n          Atenção\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {props.message}\r\n        </DialogContent>\r\n        <DialogActions onClick={()=> props.hideMessage}>\r\n          <Button onClick={props.hideMessage}>Fechar</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  openDialog: state.message.showMessage,\r\n  message: state.message.message\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({showMessage, hideMessage}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageDialog);","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from '../../services/auth';\r\nimport { getUserById } from '../../store/userReducer';\r\nimport PropTypes from 'prop-types';\r\nimport RoutesUser from './routesUser';\r\nimport MessageDialog from '../../components/Dialog';\r\nimport history from '../../services/history';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textDecoration: 'none',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  profile: {\r\n    paddingRight: 17\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n}));\r\n\r\nconst User = (props) => {\r\n  const classes = useStyles();\r\n  const [ idUser ] = useState(window.location.href.split('/?')[1].split('?')[0]);\r\n  const { userById } = props;\r\n  \r\n  useEffect(() => {\r\n    props.getUserById(idUser);\r\n  },[]);\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\">\r\n          <Toolbar className={classes.toolbar}>\r\n            <Typography component={Link} to={`/user/?${userById._id}?page=1&limit=25`} variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              SuggestInBox\r\n            </Typography>\r\n            <div className={classes.profile}>{userById.name}</div>\r\n            <IconButton aria-label=\"Ver notificações\" color=\"inherit\">\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton component={Link} to={`/user/setup/?${userById._id}`} color=\"inherit\">\r\n              <SettingsIcon/>\r\n            </IconButton>\r\n            <IconButton onClick={()=>logoutUser()} color=\"inherit\">\r\n              <ExitToAppIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid>\r\n              <RoutesUser />\r\n            </Grid>\r\n          </Container>\r\n        </main>\r\n      </div>\r\n      <MessageDialog/>\r\n    </div>\r\n  );\r\n};\r\n\r\nUser.prototypes = {\r\n  userById: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userById: state.user.userById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ getUserById }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(User);","import api from '../services/api';\r\nimport { getCompanyById } from './companyReducer';\r\nimport { showMessage } from './messageReducer';\r\n\r\nconst ACTIONS = {\r\n  LIST_SUGGESTS: 'LISTSUGGESTS',\r\n  FAVORITE: 'FAVORITE',\r\n  OUT_LINE: 'OUT_LINE',\r\n}\r\nconst INITIAL_STATE = {\r\n  suggests: [],\r\n  suggestById: [],\r\n  infosSuggests: [],\r\n}\r\n\r\nexport const suggestReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    //*********************SUGGESTS*********************\r\n    case ACTIONS.LIST_SUGGESTS:\r\n      return {...state, suggests: action.suggests, infosSuggests: action.infosSuggests}\r\n    case ACTIONS.FAVORITE:\r\n      const listUp = [...state.suggests]\r\n      listUp.forEach(suggest => {\r\n        if(suggest._id === action._id){\r\n          suggest.favorite = true;\r\n        }\r\n      })\r\n      return {...state, suggests: listUp}\r\n    case ACTIONS.OUT_LINE:\r\n      const id = action.id;\r\n      const suggests1 = state.suggests.filter(suggest => suggest._id !== id) \r\n      return {...state, suggests: suggests1}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//*******************************************SUGGESTS*********************************************\r\n//LISTAR SUGGESTS\r\nexport const listSuggest = (idUrl, page, limit, outlier, fromDate, toDate) => {\r\n  return dispatch => {\r\n    api.get(`/adm/all-suggest/${idUrl}?page=${page}&limit=${limit}&outlier=${outlier}&fromDate=${fromDate}&toDate=${toDate}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_SUGGESTS,\r\n        suggests: docs,\r\n        infosSuggests: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servidor indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )}\r\n    );\r\n  }\r\n}\r\n//FAVORITAR SUGGEST\r\nexport const favorite = (suggest) => {\r\n  return dispatch => {\r\n    api.put(`/adm/favorite-suggest/${suggest._id}`, suggest )\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.FAVORITE,\r\n        id: suggest._id\r\n      }) \r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servidor indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )}\r\n    );\r\n  }\r\n}\r\n//ARQUIVAR SUGGEST\r\nexport const outlier = (suggest) => {\r\n  return dispatch => {\r\n    api.put(`/adm/outlier-suggest/${suggest._id}`, suggest )\r\n    .then(Response => {\r\n      dispatch({\r\n          type: ACTIONS.OUT_LINE,\r\n          id: suggest._id\r\n      })\r\n    }).then(() => {\r\n        dispatch(\r\n          getCompanyById(suggest.companyId)\r\n        )\r\n      }\r\n    )\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servidor indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )}\r\n    );\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { listSuggest, favorite, outlier } from '../../../../store/suggestReducer';\r\nimport { atvCompany } from '../../../../store/companyReducer';\r\nimport { parseISO } from 'date-fns';\r\nimport { format } from 'date-fns-tz';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport { ptBR } from \"date-fns/locale\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Box from '@material-ui/core/Box';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport { IconButton } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport RestoreFromTrashIcon from '@material-ui/icons/RestoreFromTrash';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    secondary:{\r\n      main: '#FFB701'\r\n    }\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  center: {\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    margin: '20px'\r\n  },\r\n  filter: {\r\n    minWidth: '110px',\r\n    marginLeft: '9px'\r\n  },\r\n  data: {\r\n    margin: '9px',\r\n    maxWidth: '140px'\r\n  },\r\n  hide: {\r\n    display: 'none'\r\n  },\r\n  buttonAtv: {\r\n    margin: '15px 0'\r\n  }\r\n}));\r\n\r\nconst Suggest = (props) => {\r\n  const classes = useStyles();\r\n  const [ idCompany ] = useState(window.location.href.split('/?')[2].split('?')[0]);\r\n  const {suggests, infosSuggests, companyById} = props;\r\n  const pages = infosSuggests.pages;\r\n  \r\n  const [ page, setPage ] = useState(1);\r\n  const [ limit, setLimit ] = useState(25);\r\n  const [ selectedDateFrom, setSelectedDateFrom ] = useState(new Date('2020-01-01T00:00:00'));\r\n  const [ selectedDateTo, setSelectedDateTo ] = useState(Date.now);\r\n  const [ outlier, setOutlier ] = useState(false);\r\n\r\n  const [ suggestAtv, setSuggestAtv ] = useState({\r\n    check: companyById.suggest\r\n  });\r\n  \r\n  useEffect(() => {\r\n    props.listSuggest(idCompany, page, limit, outlier, selectedDateFrom, selectedDateTo);\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    setSuggestAtv({check: companyById.suggest});\r\n  },[companyById.suggest])\r\n\r\n  const handleChangePage=(event, value)=>{\r\n    setPage(value);\r\n    props.listSuggest(idCompany, value, limit, outlier, selectedDateFrom, selectedDateTo);\r\n  }\r\n  const handleLimit=(event)=>{\r\n    setLimit(event.target.value);\r\n    props.listSuggest(idCompany, page, event.target.value, outlier, selectedDateFrom, selectedDateTo);\r\n    setPage(1);\r\n  }\r\n  const handleChangSuggest=(event)=>{\r\n    setOutlier(event.target.value);\r\n    props.listSuggest(idCompany, page, limit, event.target.value, selectedDateFrom, selectedDateTo);\r\n  }\r\n  const handleDateChangeFrom = (date) => {\r\n    setSelectedDateFrom(date);\r\n    console.log(date);\r\n  };\r\n  const handleDateChangeTo = (date) => {\r\n    setSelectedDateTo(date);\r\n    props.listSuggest(idCompany, page, limit, outlier, selectedDateFrom, date);\r\n  };\r\n\r\n  //FAV E ARQ\r\n  const favoriteUpdate = (suggest) => {\r\n    if(suggest.favorite){\r\n      suggest.favorite = false;\r\n      return props.favorite(suggest);\r\n    }else{\r\n      suggest.favorite = true;\r\n      return props.favorite(suggest);\r\n    }\r\n  }\r\n  const outlierUpdate = (suggest) => {\r\n    if(suggest.outlier){\r\n      suggest.outlier = false;\r\n      return props.outlier(suggest);\r\n    }else{\r\n      suggest.outlier = true;\r\n      return props.outlier(suggest);\r\n    }\r\n  }\r\n\r\n  const atvSuggest = (companyById) => {\r\n    if(companyById.suggest){\r\n      companyById.suggest = false;\r\n      setSuggestAtv({check: companyById.suggest});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.suggest = true;\r\n      setSuggestAtv({check: companyById.suggest});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Sugestões</Typography>\r\n       <div>\r\n        <Grid container>\r\n          <Grid item className={classes.buttonAtv}>\r\n            <FormGroup row>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={suggestAtv.check? suggestAtv.check: false}\r\n                  onClick={()=>atvSuggest(companyById)}\r\n                  name=\"checkedA\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Ativar/Desativar\"\r\n            />\r\n            </FormGroup>\r\n          </Grid>\r\n        </Grid>\r\n        <FormControl>\r\n          <FormHelperText>Número por página:</FormHelperText>\r\n          <Select\r\n            value={limit}\r\n            onChange={handleLimit}\r\n            inputProps={{ 'aria-label': 'Without label' }}>\r\n            <MenuItem value={25}>25</MenuItem>\r\n            <MenuItem value={50}>50</MenuItem>\r\n            <MenuItem value={75}>75</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.filter}>\r\n          <FormHelperText>Mostrar somente:</FormHelperText>\r\n          <Select\r\n            value={outlier}\r\n            onChange={handleChangSuggest}\r\n            inputProps={{ 'aria-label': 'Without label' }}>\r\n            <MenuItem value={false}>Válidas</MenuItem>\r\n            <MenuItem value={true}>Arquivadas</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <MuiPickersUtilsProvider locale={ptBR} utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            className={classes.data}\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"normal\"\r\n            id=\"date-picker-inline\"\r\n            label=\"De\"\r\n            size=\"small\"\r\n            invalidDateMessage=\"Data inválida.\"\r\n            value={selectedDateFrom}\r\n            onChange={handleDateChangeFrom}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n          <KeyboardDatePicker\r\n            className={classes.data}\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Até\"\r\n            size=\"small\"\r\n            invalidDateMessage=\"Data inválida.\"\r\n            value={selectedDateTo}\r\n            onChange={handleDateChangeTo}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </div>\r\n      <Paper>\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align='center'>Data</TableCell>\r\n                <TableCell align='center'>Nome</TableCell>\r\n                <TableCell align='center'>Telefone</TableCell>\r\n                <TableCell align='center'>Avaliação</TableCell>\r\n                <TableCell align='center'>Recomenda</TableCell>\r\n                <TableCell align='center'>Opinião</TableCell>\r\n                <TableCell align='center'/>\r\n                <TableCell align='center'/>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <MuiThemeProvider theme={theme}>\r\n                { suggests.map( suggest => {\r\n                  return (\r\n                    <TableRow hover key={suggest._id} role=\"checkbox\" tabIndex={-1}>\r\n                      <TableCell align='center'>{format(parseISO(suggest.createdAt), 'dd/MM/yyyy HH:mm', {timeZone: 'America/Sao_Paulo'} )}</TableCell>\r\n                      <TableCell align='center'>{suggest.name}</TableCell>\r\n                      <TableCell align='center'>{suggest.phone}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <Rating name=\"read-only\" size=\"small\" value={suggest.stars? suggest.stars: 0} precision={0.5} readOnly/>\r\n                      </TableCell>\r\n                      <TableCell align='center'>{suggest.recommends? (<CheckIcon/>) : (<CloseIcon/>)}</TableCell>\r\n                      <TableCell align='center'>{suggest.opinion}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <IconButton onClick={() => favoriteUpdate(suggest)}>\r\n                          {suggest.favorite? (<StarIcon color='secondary'/>):(<StarBorderIcon/>)}\r\n                        </IconButton>\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <IconButton onClick={() => outlierUpdate(suggest)}>\r\n                          {suggest.outlier? (<RestoreFromTrashIcon/>):(<DeleteOutlineIcon/>)}\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )\r\n                })}\r\n              </MuiThemeProvider>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Grid className={classes.center} container item xs={12} spacing={3}>\r\n          <Box component=\"span\">\r\n            <Pagination\r\n              count={pages}\r\n              page={page}\r\n              onChange={handleChangePage}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nSuggest.prototypes = {\r\n  suggest: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n  suggests: state.suggest.suggests,\r\n  infosSuggests: state.suggest.infosSuggests,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({listSuggest, favorite, outlier, atvCompany}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Suggest);","import api from '../services/api';\r\nimport history from '../services/history';\r\nimport { showMessage } from './messageReducer';\r\n\r\nconst ACTIONS = {\r\n  LIST_CALLS: 'LISTCALLS',\r\n  BY_ID_CALL: 'BYIDCALL',\r\n  ADD_CALL: 'ADDCALL',\r\n  UPDATE_CALL: 'UPDATECALL',\r\n  DELETE_CALL: 'DELETECALL',\r\n}\r\nconst INITIAL_STATE = {\r\n  calls: [],\r\n  infosCalls: [],\r\n  callById: [],\r\n}\r\nexport const callReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.LIST_CALLS:\r\n      return {...state, calls: action.calls, infosCalls: action.infosCalls}\r\n    case ACTIONS.ADD_CALL:\r\n      return {...state}\r\n    case ACTIONS.BY_ID_CALL:\r\n      return {...state, callById: action.callById}\r\n    case ACTIONS.UPDATE_CALL:\r\n      return state;\r\n    case ACTIONS.DELETE_CALL:\r\n      const id = action.id;\r\n      const calls = state.calls.filter( call => call._id !== id);\r\n      return {...state, calls: calls}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//LISTAR CALLS\r\nexport const listCalls = (page, nOfItems) => {\r\n  return dispatch => {\r\n    api.get(`/adm/all-calls?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_CALLS,\r\n        calls: docs,\r\n        infosCalls: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servidor indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )\r\n    });\r\n  }\r\n}\r\n//GET BY ID CALL\r\nexport const getCallById = (id) => {\r\n  return dispatch => {\r\n    api.get(`/adm/call/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_CALL,\r\n        callById: Response.data,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servidor indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )\r\n    });\r\n  }\r\n}\r\n//UPDATE CALL\r\nexport const updateCall = (company, id, idUser) => {\r\n  return dispatch => {\r\n    api.put(`/adm/call/${id}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_CALL,\r\n      })\r\n    }, history.push(`/suggest/call/?${idUser}/?${id}?page=1&limit=25`))\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servidor indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )\r\n    });\r\n  }\r\n}\r\n//DELETE CALL\r\nexport const destroyCall = (idCall) => {\r\n  return dispatch => {\r\n    api.delete(`/adm/call/${idCall}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.DELETE_CALL,\r\n        id: idCall\r\n      });\r\n      if(Response.data.msg){\r\n        dispatch(\r\n          showMessage(Response.data.msg)\r\n        )\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servidor indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )}\r\n    );\r\n  }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { listCalls, destroyCall } from '../../../../store/callReducer';\r\nimport { atvCompany } from '../../../../store/companyReducer';\r\nimport { parseISO } from 'date-fns';\r\nimport { format } from 'date-fns-tz';\r\n\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst useStyles = makeStyles(() =>({\r\n  tables: {\r\n    marginBottom: '25px',\r\n  },\r\n  center: {\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    margin: '20px'\r\n  },\r\n  hide: {\r\n    display: 'none'\r\n  },\r\n  buttonAtv: {\r\n    margin: '15px 0'\r\n  }\r\n}));\r\n\r\nconst Call = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById, calls } = props;\r\n\r\n  const [ call, setCall ] = useState({\r\n    check: companyById.call\r\n  });\r\n\r\n  useEffect(() => {\r\n    props.listCalls(1, 25)\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    setCall({check: companyById.call});\r\n  },[companyById.call])\r\n\r\n  const atvCall = (companyById) => {\r\n    if(companyById.call){\r\n      companyById.call = false;\r\n      setCall({check: companyById.call});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.call = true;\r\n      setCall({check: companyById.call});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Chamadas</Typography>\r\n      <Grid container>\r\n        <Grid item className={classes.buttonAtv}>\r\n          <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={call.check? call.check : false}\r\n                onClick={()=>atvCall(companyById)}\r\n                name=\"checkedA\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Ativar/Desativar\"\r\n          />\r\n          </FormGroup>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid className={classes.tables} item>\r\n          <Typography variant=\"h6\">Chamados por mesa</Typography>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Paper>\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align='center'>Local</TableCell>\r\n                <TableCell align='center'>Hora</TableCell>\r\n                <TableCell align='center'></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              { calls.map( call => {\r\n                return (\r\n                  <TableRow hover key={call.createdAt} role=\"checkbox\" tabIndex={-1}>\r\n                    <TableCell align='center'>Mesa {call.table}</TableCell>\r\n                    <TableCell align='center'>{format(parseISO(call.createdAt), 'dd/MM/yyyy HH:mm', {timeZone: 'America/Sao_Paulo'} )}</TableCell>\r\n                    <TableCell align='center'>\r\n                      <Button className={classes.button} onClick={()=>props.destroyCall(call._id)} variant=\"contained\" color=\"primary\">\r\n                        Atendida\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nCall.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n  calls: state.call.calls,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({listCalls, atvCompany, destroyCall}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Call);","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { atvCompany, getCompanyById } from '../../../../store/companyReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() =>({\r\n  button: {\r\n    marginTop: '25px',\r\n  },\r\n  hide: {\r\n    display: 'none'\r\n  },\r\n  buttonAtv: {\r\n    margin: '15px 0'\r\n  }\r\n}));\r\n\r\nconst Promo = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n  \r\n  const [ promo, setPromo ] = useState({\r\n    check: companyById.promo\r\n  });\r\n\r\n  useEffect(() => {\r\n    setPromo({check: companyById.promo});\r\n  },[companyById.promo])\r\n\r\n  const atvPromo = (companyById) => {\r\n    if(companyById.promo){\r\n      companyById.promo = false;\r\n      setPromo({check: companyById.promo});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.promo = true;\r\n      setPromo({check: companyById.promo});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Promoção</Typography>\r\n      <Grid container>\r\n        <Grid item className={classes.buttonAtv}>\r\n          <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={promo.check? promo.check : false}\r\n                onClick={()=>atvPromo(companyById)}\r\n                name=\"checkedA\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Ativar/Desativar\"\r\n          />\r\n          </FormGroup>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nPromo.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({atvCompany, getCompanyById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Promo);","import api from '../services/api';\r\n\r\nconst ACTIONS = {\r\n  LIST_MENU: 'LIST_MENU',\r\n  ATV_MENU: 'ATV_MENU',\r\n  BY_ID_MENU: 'BY_ID_MENU'\r\n}\r\nconst INITIAL_STATE = {\r\n  menu: [],\r\n  sectionMenu: [],\r\n  infosMenu: [],\r\n}\r\nexport const menuReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.LIST_MENU:\r\n      return {...state, menu: action.menu, infosMenu: action.infosMenu}\r\n    case ACTIONS.ADD_MENU:\r\n      return {...state, menu: action.menu}\r\n    case ACTIONS.BY_ID_MENU:\r\n      return {...state, menu: action.menu, sectionMenu: action.sectionMenu}\r\n    case ACTIONS.UPDATE_MENU:\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//LISTAR TODOS OS MENUS\r\nexport const getMenu = (idCompany) => {\r\n  return dispatch => {\r\n    api.get(`/adm/menu/${idCompany}`)\r\n    .then(Response => {\r\n      const { docs } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_MENU,\r\n        menu: docs,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//ADICIONAR MENU\r\nexport const addMenu = (menu, id) => {\r\n  return dispatch => {\r\n    api.post('/adm/menu', menu)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ADD_MENU,\r\n        menu: Response.data,\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//GET BY ID MENU\r\nexport const getMenuById = (idCompany) => {\r\n  return dispatch => {\r\n    api.get(`/adm/menu/${idCompany}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_MENU,\r\n        menu: Response.data,\r\n        sectionMenu: Response.data.sectionMenu,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n//UPDATE COMPANY\r\nexport const updateMenu = (menu, id, idUser) => {\r\n  return dispatch => {\r\n    api.put(`/adm/menu/${id}`, menu)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_MENU,\r\n        //company: Response.data\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { atvCompany, getCompanyById } from '../../../../store/companyReducer';\r\nimport { getMenuById } from '../../../../store/menuReducer';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(() =>({\r\n  button: {\r\n    marginTop: '25px',\r\n  },\r\n  formControl: {\r\n    padding: '15px 0'\r\n  },\r\n  buttonAtv: {\r\n    margin: '15px 0'\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    margin: '20px 0',\r\n    padding: '15px'\r\n  },\r\n  name: {\r\n    maxWidth: '200px'\r\n  },\r\n  sectionName: {\r\n    margin: 'auto',\r\n    textAlign: 'start',\r\n  },\r\n  visu: {\r\n    margin: '15px 0'\r\n  },\r\n  buttonEdit: {\r\n    margin: '15px'\r\n  },\r\n  hide: {\r\n    display: 'none'\r\n  },\r\n  paper2: {\r\n    marginBottom: '50px'\r\n  },\r\n  tableHead: {\r\n    background: 'black'\r\n  },\r\n  centerButton: {\r\n    textAlign: 'end',\r\n    margin: 'auto',\r\n  }\r\n}));\r\n\r\nconst Menu = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById, menuById, sectionMenu } = props;\r\n  const [ idCompany ] = useState(window.location.href.split('/?')[2]);\r\n  const [ edit, setEdit ] = useState(true);\r\n  const [ menu, setMenu ] = useState({\r\n    check: companyById.menu\r\n  });\r\n\r\n  useEffect(() => {\r\n    props.getMenuById(idCompany);\r\n    setMenu({check: companyById.menu});\r\n  },[companyById.menu])\r\n\r\n  const atvMenu = (companyById) => {\r\n    if(companyById.menu){\r\n      companyById.menu = false;\r\n      setMenu({check: companyById.menu});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.menu = true;\r\n      setMenu({check: companyById.menu});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  const [menuType, setMenuType] = useState(1);\r\n\r\n  const handleChange = (event) => {\r\n    setMenuType(event.target.value);\r\n  };\r\n\r\n  const editMenu = () => {\r\n    if(edit){\r\n      setEdit(false);\r\n    }else{\r\n      setEdit(true);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Cardápio / Catálogo</Typography>\r\n      <Grid container>\r\n        <Grid item className={classes.buttonAtv}>\r\n          <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={menu.check? menu.check : false}\r\n                onClick={()=>atvMenu(companyById)}\r\n                name=\"checkedA\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Ativar/Desativar\"\r\n          />\r\n          </FormGroup>\r\n        </Grid>\r\n      </Grid>\r\n      <FormControl>\r\n        <FormHelperText>Tipo:</FormHelperText>\r\n        <Select\r\n          value={menuType}\r\n          onChange={handleChange}\r\n          displayEmpty\r\n          className={classes.selectEmpty}\r\n          inputProps={{ 'aria-label': 'Without label' }}\r\n        >\r\n          <MenuItem value={1}>Cardápio</MenuItem>\r\n          <MenuItem value={2}>Catálogo</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <Paper className={classes.paper}>\r\n        <Grid container>\r\n          <Grid className={classes.sectionName} item xs={2}>\r\n            <Typography>Seção:</Typography>\r\n          </Grid>\r\n          <Grid className={classes.center} item xs={6}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Nome:\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              name=\"name\"\r\n              inputProps={{ maxLength: 70 }}\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.centerButton} item xs={4}>\r\n            <Button variant=\"contained\" color=\"primary\" endIcon={<AddCircleOutlineIcon/>}>\r\n              Adicionar\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <Grid container>\r\n          <Grid className={classes.sectionName} item xs={1}>\r\n            <Typography>Item:</Typography>\r\n          </Grid>\r\n          <Grid className={classes.center} item xs={5}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Nome:\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              name=\"name\"\r\n              inputProps={{ maxLength: 70 }}\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Descrição:\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              name=\"Descrition\"\r\n              inputProps={{ maxLength: 70 }}\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.center} item xs={1}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Valor:\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              name=\"value\"\r\n              inputProps={{ maxLength: 70 }}\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.center} item xs={2}>\r\n            <FormControl>\r\n              <FormHelperText>Seção do item:</FormHelperText>\r\n              <Select\r\n                value={menuType}\r\n                onChange={handleChange}\r\n                displayEmpty\r\n                className={classes.selectEmpty}\r\n                inputProps={{ 'aria-label': 'Without label' }}\r\n              >\r\n              {sectionMenu.map(section => {\r\n                return (\r\n                  <MenuItem key={section._id} value={section.name}>{section.name}</MenuItem>\r\n                )\r\n              })}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid className={classes.centerButton} item xs={2}>\r\n            <Button variant=\"contained\" color=\"primary\" endIcon={<AddCircleOutlineIcon/>}>\r\n              Adicionar\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n\r\n      <div className={classes.center}> \r\n        <Button rel=\"noopener noreferrer\" className={edit? classes.buttonEdit : classes.hide} \r\n          target=\"_blank\" href={`http://app.suggestinbox.com.br/client/?${idCompany}?table=1`} \r\n          variant=\"contained\" color=\"primary\"\r\n          endIcon={<VisibilityIcon/>}>\r\n          Vizualiar\r\n        </Button>\r\n        <Button className={classes.buttonEdit} onClick={()=> editMenu()} variant=\"outlined\" color={edit? \"default\" : \"secondary\"} endIcon={edit? <EditIcon/> : <CancelIcon/> }>\r\n          {edit? \"Editar\":\"Cancelar\"}\r\n        </Button>\r\n        <Button className={edit? classes.hide: classes.buttonEdit} onClick={()=> editMenu()} variant=\"contained\" color=\"primary\" endIcon={<SaveIcon />}>\r\n          Salvar\r\n        </Button>\r\n      </div>\r\n\r\n      <Paper className={classes.paper2}>\r\n        {sectionMenu.sort((a, b) => a.index > b.index? 1 : -1).map(section => {\r\n          return (\r\n            <TableContainer key={section._id}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell colSpan={3} align='left'>\r\n                      <TextField\r\n                        disabled={edit}\r\n                        variant=\"outlined\"\r\n                        label=\"Seção:\"\r\n                        margin=\"dense\"\r\n                        value={section.name}\r\n                        fullWidth\r\n                        name=\"Descrition\"\r\n                        inputProps={{ maxLength: 70 }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                      /> \r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <FormControl>\r\n                        <FormHelperText>Posição:</FormHelperText>\r\n                        <Select\r\n                          disabled={edit}\r\n                          value={menuType}\r\n                          onChange={handleChange}\r\n                          displayEmpty\r\n                          className={classes.selectEmpty}\r\n                          inputProps={{ 'aria-label': 'Without label' }}\r\n                        >\r\n                          <MenuItem value={1}>1</MenuItem>\r\n                          <MenuItem value={2}>2</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Button disabled={edit} variant=\"outlined\" color=\"primary\">\r\n                        <DeleteIcon/>\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {section.itemMenu.sort((a, b) => a.index > b.index? 1 : -1).map(item => {\r\n                    return (\r\n                      <TableRow key={item._id}>\r\n                        <TableCell align='left'>\r\n                          <TextField\r\n                            disabled={edit}\r\n                            variant=\"outlined\"\r\n                            label=\"Nome:\"\r\n                            margin=\"dense\"\r\n                            value={item.name}\r\n                            fullWidth\r\n                            name=\"Descrition\"\r\n                            inputProps={{ maxLength: 70 }}\r\n                            InputLabelProps={{ shrink: true }}\r\n                          />\r\n                          <TextField\r\n                            disabled={edit}\r\n                            variant=\"outlined\"\r\n                            label=\"Descrição:\"\r\n                            margin=\"dense\"\r\n                            value={item.description}\r\n                            fullWidth\r\n                            name=\"Descrition\"\r\n                            inputProps={{ maxLength: 70 }}\r\n                            InputLabelProps={{ shrink: true }}\r\n                          /> \r\n                        </TableCell>\r\n                        <TableCell align='right'>\r\n                        <TextField\r\n                          disabled={edit}\r\n                          variant=\"outlined\"\r\n                          label=\"Valor:\"\r\n                          margin=\"dense\"\r\n                          value={(item.value).toLocaleString(\"pt-BR\", {style: \"currency\", currency: \"BRL\"})}\r\n                          fullWidth\r\n                          name=\"Descrition\"\r\n                          inputProps={{ maxLength: 70 }}\r\n                          InputLabelProps={{ shrink: true }}\r\n                        /> \r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <FormControl>\r\n                            <FormHelperText>Seção:</FormHelperText>\r\n                            <Select\r\n                              disabled={edit}\r\n                              value={menuType}\r\n                              onChange={handleChange}\r\n                              displayEmpty\r\n                              className={classes.selectEmpty}\r\n                              inputProps={{ 'aria-label': 'Without label' }}\r\n                            >\r\n                              <MenuItem value={1}>Comida</MenuItem>\r\n                              <MenuItem value={2}>Bebida</MenuItem>\r\n                            </Select>\r\n                          </FormControl>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <FormControl>\r\n                            <FormHelperText>Posição:</FormHelperText>\r\n                            <Select\r\n                              disabled={edit}\r\n                              value={menuType}\r\n                              onChange={handleChange}\r\n                              displayEmpty\r\n                              className={classes.selectEmpty}\r\n                              inputProps={{ 'aria-label': 'Without label' }}\r\n                            >\r\n                              <MenuItem value={1}>1</MenuItem>\r\n                              <MenuItem value={2}>2</MenuItem>\r\n                            </Select>\r\n                          </FormControl>\r\n                        </TableCell>\r\n                        <TableCell align='right'>\r\n                          <Button disabled={edit} variant=\"outlined\" color=\"primary\">\r\n                            <DeleteIcon/>\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          )})}\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nMenu.prototypes = {\r\n  companyById: PropTypes.array.isRequired,\r\n  sectionMenu: PropTypes.array.isRequired,\r\n  menuById: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n  menuById: state.menu.menu,\r\n  sectionMenu: state.menu.sectionMenu,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({atvCompany, getCompanyById, getMenuById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Menu);","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst Finances = () => {\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Financeiro</Typography>\r\n      <Grid container>\r\n        <Grid item>\r\n          Financeiro em desenvolvimento\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Finances;","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { atvCompany, getCompanyById } from '../../../../store/companyReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  button: {\r\n    marginTop: '25px',\r\n  },\r\n  buttonAtv: {\r\n    margin: '15px 0'\r\n  }\r\n}));\r\n\r\nconst Reservation = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n  const [ reservation, setReservation ] = useState({\r\n    check: companyById.reservation\r\n  });\r\n\r\n  useEffect(() => {\r\n    setReservation({check: companyById.reservation});\r\n  },[companyById.reservation])\r\n\r\n  const atvReservation = (companyById) => {\r\n    if(companyById.reservation){\r\n      companyById.reservation = false;\r\n      setReservation({check: companyById.reservation});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.reservation = true;\r\n      setReservation({check: companyById.reservation});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Reservas</Typography>\r\n      <Grid container>\r\n        <Grid item className={classes.buttonAtv}>\r\n          <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={reservation.check? reservation.check : false}\r\n                onClick={()=>atvReservation(companyById)}\r\n                name=\"checkedA\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Ativar/Desativar\"\r\n          />\r\n          </FormGroup>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nReservation.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({atvCompany, getCompanyById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Reservation);","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { atvCompany, getCompanyById } from '../../../../store/companyReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  button: {\r\n    marginTop: '25px',\r\n  },\r\n  buttonAtv: {\r\n    margin: '15px 0'\r\n  }\r\n}));\r\n\r\nconst Delivery = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n  const [ delivery, setDelivery ] = useState({\r\n    check: companyById.delivery\r\n  });\r\n\r\n  useEffect(() => {\r\n    setDelivery({check: companyById.delivery});\r\n  },[companyById.delivery])\r\n\r\n  const atvDelivery = (companyById) => {\r\n    if(companyById.delivery){\r\n      companyById.delivery = false;\r\n      setDelivery({check: companyById.delivery});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.delivery = true;\r\n      setDelivery({check: companyById.delivery});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Delivery</Typography>\r\n      <Grid container>\r\n        <Grid item className={classes.buttonAtv}>\r\n          <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={delivery.check? delivery.check : false}\r\n                onClick={()=>atvDelivery(companyById)}\r\n                name=\"checkedA\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Ativar/Desativar\"\r\n          />\r\n          </FormGroup>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nDelivery.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({atvCompany, getCompanyById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Delivery);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Suggest from './Suggests';\r\nimport Call from './Call';\r\nimport Promo from './Promo';\r\nimport Menu from './Menu';\r\nimport Finances from './Finances';\r\nimport Reservation from './Reservation';\r\nimport Delivery from './Delivery';\r\nimport SetupCompany from '../SetupCompany';\r\n\r\nconst RoutesUser = () => {\r\n  return(\r\n    <Switch>\r\n      <Route exact path='/suggest' component={Suggest}/>\r\n      <Route exact path='/suggest/call' component={Call}/>\r\n      <Route exact path='/suggest/promo' component={Promo}/>\r\n      <Route exact path='/suggest/cardapio' component={Menu}/>\r\n      <Route exact path='/suggest/finances' component={Finances}/>\r\n      <Route exact path='/suggest/reservation' component={Reservation}/>\r\n      <Route exact path='/suggest/delivery' component={Delivery}/>\r\n      <Route exact path='/suggest/setup-company' component={SetupCompany}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default RoutesUser;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from '../../../services/auth';\r\nimport { getCompanyById } from '../../../store/companyReducer';\r\nimport { getUserById } from '../../../store/userReducer';\r\nimport PropTypes from 'prop-types';\r\nimport MessageDialog from '../../../components/Dialog';\r\n\r\nimport clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MoodIcon from '@material-ui/icons/Mood';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport AlarmOnIcon from '@material-ui/icons/AlarmOn';\r\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\r\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nimport RoutesUser from './routesUser';\r\n\r\nconst drawerWidth = 210;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textDecoration: 'none',\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  icon: {\r\n    textDecoration: 'none',\r\n    color: 'white',\r\n  },\r\n  profile: {\r\n    paddingRight: 17\r\n  },\r\n  avatar: {\r\n    fontSize: '12px',\r\n    width: '22px',\r\n    height: '22px',\r\n    backgroundColor: '#f50057',\r\n    textAlign: 'center',\r\n  },\r\n  photo: {\r\n    margin: '0 auto',\r\n    marginBottom: '5px',\r\n    marginTop: '20px',\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  card:{\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nconst MainSuggest = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n  const { stars, name } = companyById;\r\n  const [ idUser ] = useState(window.location.href.split('/?')[1]);\r\n  const [ idCompany ] = useState(window.location.href.split('/?')[2].split('?')[0]);\r\n\r\n  useEffect(() => {\r\n    if(idCompany){\r\n      props.getCompanyById(idCompany);\r\n    }\r\n  },[]);\r\n\r\n  const [open, setOpen] = useState(true );\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component={Link} to={`/suggest/?${idUser}/?${idCompany}?page=1&limit=25`} variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                SuggestInBox\r\n            </Typography>\r\n            <IconButton component={Link} to={`/suggest/setup-company/?${idUser}/?${idCompany}`} color=\"inherit\">\r\n              <Avatar className={classes.avatar}>{name? name.split('', 1): \"...\"}</Avatar>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton component={Link} to={`/suggest/setup-company/?${idUser}/?${idCompany}`} color=\"inherit\">\r\n              <SettingsIcon/>\r\n            </IconButton>\r\n            <IconButton onClick={()=>logoutUser()} color=\"inherit\">\r\n              <ExitToAppIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer variant=\"permanent\" classes={{paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)}} open={open}>\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            <div>      \r\n              <Card className={classes.card}>\r\n                <div hidden={!open}>\r\n                  <CardMedia className={classes.photo} image=\"/assets/logoBar.png\" title=\"Contemplative Reptile\"/>\r\n                  <Typography>{companyById.name}</Typography>\r\n                </div>\r\n                <CardContent hidden={!open}>\r\n                  <Typography variant=\"h3\" color=\"textSecondary\" component=\"p\">\r\n                    {companyById.stars? parseFloat(companyById.stars).toFixed(1): \"0.0\"}\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\" component=\"p\">\r\n                    {companyById.nStars} classificações\r\n                  </Typography>\r\n                  <Rating name=\"read-only\" value={stars? stars: 0} precision={0.5} readOnly/>\r\n                </CardContent>\r\n              </Card>\r\n              <ListItem button component={Link} to={`/suggest/?${idUser}/?${idCompany}?page=1&limit=25`}>\r\n                <ListItemIcon>\r\n                  <EqualizerIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Sugestões\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/call/?${idUser}/?${idCompany}?page=1&limit=25`}>\r\n                <ListItemIcon>\r\n                  <EmojiPeopleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Chamadas\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/promo/?${idUser}/?${idCompany}`}>\r\n                <ListItemIcon>\r\n                  <MoodIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Promoções\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/cardapio/?${idUser}/?${idCompany}`}>\r\n                <ListItemIcon>\r\n                  <MenuBookIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Cardapio\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/delivery/?${idUser}/?${idCompany}`}>\r\n                <ListItemIcon>\r\n                  <MotorcycleIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Delivery\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/reservation/?${idUser}/?${idCompany}`}>\r\n                <ListItemIcon>\r\n                  <AlarmOnIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Reservas\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/finances/?${idUser}/?${idCompany}`}>\r\n                <ListItemIcon>\r\n                  <AttachMoneyIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Financeiro\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/user/?${idUser}?page=1&limit=25`}>\r\n                <ListItemIcon>\r\n                  <BusinessIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Companhias\" />\r\n              </ListItem>\r\n            </div>\r\n          </List>\r\n        <Divider />\r\n        </Drawer>\r\n        <MessageDialog/>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid>\r\n              <RoutesUser />\r\n            </Grid>\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMainSuggest.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.auth.infos,\r\n  companyById: state.company.companyById,\r\n  userById: state.user.userById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({getCompanyById, getUserById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainSuggest);","import React from 'react';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\n\r\nconst RoutesAppSuggest = () => {\r\n  const match = useRouteMatch();\r\n\r\n  return(\r\n    <Switch>\r\n      <Route exact path={`${match.url}`} component={()=><h1>SUGGEST</h1>}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default RoutesAppSuggest;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport RoutesAdm from './routesAdm';\r\n\r\nconst Adm = () => {\r\n  return(\r\n    <div>\r\n      <h1><img alt='logo' src='/assets/logo_palpitebox.png'/></h1>\r\n      <header>\r\n        <nav>\r\n          <ul>\r\n            <li><Link to='/'>Início</Link></li>\r\n            <li>|</li>\r\n            <li><Link to='/client/sobrenos'>Sobre nós</Link></li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n      <div>\r\n        <RoutesAdm/>\r\n      </div>\r\n      <div>\r\n        <footer>\r\n          <p>Colocar Suggest na sua empresa, <Link to='/'>clique aqui!</Link></p>\r\n          <p>Suggest In Box - Todos os direitos reservados.</p>\r\n          <p>© 2020 - Copyright</p>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Adm;","import api from '../services/api';\r\nimport history from '../services/history';\r\nimport { setInfosLocalStorage } from '../services/auth';\r\nimport { showMessage } from './messageReducer';\r\n\r\nconst ACTIONS = {\r\n  AUTH: 'AUTH',\r\n  FOGOT: 'FOGOT'\r\n}\r\nconst INITIAL_STATE = {\r\n  infos:[],\r\n  email:[],\r\n  user:[],\r\n}\r\nexport const authReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.AUTH:\r\n      return {...state, infos: action.infos}\r\n    case ACTIONS.FOGOT:\r\n      return {...state, email: action.email}\r\n    case ACTIONS.RESET:\r\n      return {...state, user: action.user}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//AUTENTICAÇÃO\r\nexport const auth = (login) => {\r\n  return dispatch => {\r\n    api.post('/auth', login)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.AUTH,\r\n        infos: Response.data,\r\n      }); \r\n      if(Response.data.error){\r\n        dispatch(\r\n          showMessage(Response.data.error)\r\n        )\r\n      }else{\r\n        setInfosLocalStorage(Response.data.token, Response.data.user);\r\n        history.push(`/user/?${Response.data.user._id}?page=1&limit=25`);\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servidor indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )\r\n    });\r\n  }\r\n}\r\n//ESQUECI SENHA\r\nexport const fogot = (email) => {\r\n  return dispatch => {\r\n    api.post('/auth/fogot', email)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.FOGOT,\r\n        email: Response.data,\r\n      });\r\n      if(Response.data.error){\r\n        dispatch(\r\n          showMessage(Response.data.error)\r\n        )\r\n      }else{\r\n        dispatch(\r\n          showMessage(Response.data.msg),\r\n          history.push('/login')\r\n        )\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servidor indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )}\r\n    );\r\n  }\r\n}\r\n//RESET SENHA\r\nexport const reset = (user) => {\r\n  return dispatch => {\r\n    api.post('/auth/reset-password', user)\r\n    .then(Response => {\r\n      dispatch({\r\n          type: ACTIONS.FOGOT,\r\n          user: Response.data,\r\n      });\r\n      if(Response.data.error){\r\n        dispatch(\r\n          showMessage(Response.data.error)\r\n        )\r\n      }else{\r\n        dispatch(\r\n          showMessage(Response.data.msg),\r\n          history.push('/login')\r\n        )\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Serviço indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )}\r\n    );\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { auth } from '../../store/authReducer';\r\nimport { showProgress, hideProgress } from '../../store/messageReducer';\r\nimport MessageDialog from '../Dialog';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    maxWidth: 300,\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  link: {\r\n    textAlign: 'end'\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const [disableSubmit, setDisableSubmit] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    props.hideProgress();\r\n  },[])\r\n\r\n  const formik = useFormik ({\r\n    initialValues: { email: '', password: ''},\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .email('Email inválido')\r\n        .required('Email obrigatório!'),\r\n      password: Yup.string()\r\n        .required('Senha obrigatória!')\r\n        .max(40, 'Senha muito longa'),\r\n      }),\r\n      onSubmit: values => {\r\n        props.auth(values);\r\n        props.hideProgress();\r\n      },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            SuggestInBox\r\n          </Typography>\r\n          <Button component={Link} to={`/`} color=\"inherit\">Site</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container className={classes.container} component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Login\r\n          </Typography> \r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"email\" \r\n              name=\"email\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Email\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.email}\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <div>\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"password\" \r\n              name=\"password\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Senha\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.password}\r\n              inputProps={{ maxLength: 40 }}\r\n            />\r\n            <div>\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <Typography className={classes.error}>{formik.errors.password}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <ReCAPTCHA sitekey=\"6LcdP8cZAAAAAMLbn_f2B0EDFSdtvkPQaEO1hx30\" onChange={() => setDisableSubmit(false)} />\r\n            <Button type=\"submit\" onClick={()=>props.showProgress()} disabled={disableSubmit} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} onBlur={formik.handleBlur}>\r\n              Entrar\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link to=\"/fogot-password\" variant=\"body2\">\r\n                  Esqueci minha senha\r\n                </Link>\r\n              </Grid>\r\n              <Grid className={classes.link} item xs>\r\n                <Link to=\"#\" variant=\"body2\">\r\n                  Criar conta\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n          <div hidden={props.progress}>\r\n            <CircularProgress/>\r\n          </div>\r\n          <MessageDialog/>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  message: state.message.message,\r\n  progress: state.message.progress\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({auth, showProgress, hideProgress}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { useState} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { hideMessage, showProgress } from '../../store/messageReducer';\r\nimport MessageDialog from '../Dialog';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { fogot } from '../../store/authReducer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  link: {\r\n    fontSize: 15 \r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Fogot = (props) => {\r\n  const classes = useStyles();\r\n  const [disableSubmit, setDisableSubmit] = useState(false);\r\n\r\n  const formik = useFormik ({\r\n    initialValues: { email: ''},\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .email('Email invalido')\r\n        .required('Email obrigatório!'),\r\n      }),\r\n      onSubmit: values => {\r\n        props.fogot(values);\r\n      },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <MessageDialog/>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n        <Typography variant=\"h6\" noWrap>\r\n          SuggestInBox\r\n        </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Recuperar senha\r\n          </Typography> \r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"email\" \r\n              name=\"email\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Email\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.email}\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <div>\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <ReCAPTCHA sitekey=\"6LcdP8cZAAAAAMLbn_f2B0EDFSdtvkPQaEO1hx30\" onChange={() => setDisableSubmit(false)} />\r\n            <Button type=\"submit\" onClick={()=> props.showProgress()} disabled={disableSubmit} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} onBlur={formik.handleBlur}>\r\n              Enviar link para email\r\n            </Button>\r\n          </form>\r\n          <div hidden={props.progress}>\r\n            <CircularProgress/>\r\n          </div>\r\n          <MessageDialog/>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  message: state.message.message,\r\n  progress: state.message.progress\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({fogot, hideMessage, showProgress}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Fogot);","import React, { useState} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { showMessage, hideMessage } from '../../store/messageReducer';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { reset } from '../../store/authReducer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    maxWidth: 300,\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  link: {\r\n    fontSize: 15 \r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Reset = (props) => {\r\n  const classes = useStyles();\r\n  const [disableSubmit, setDisableSubmit] = useState(false);\r\n  const [progress, setProgress] = useState(true);\r\n  \r\n  const [ token ] = useState(window.location.href.split('/?')[1]);\r\n  const [ email ] = useState(window.location.href.split('/?')[2]);\r\n\r\n  const formik = useFormik ({\r\n    initialValues: { password: '', passwordConfirmation: ''},\r\n    validationSchema: Yup.object({\r\n      password: Yup.string()\r\n        .required('Senha obrigatória!')\r\n        .matches(/^(?=.*[A-Za-z])(?=.*[0-9])(?=.{6,})/,\r\n          \"A senha deve ter pelo menos uma letra maiuscula, um número e 6 caracteres!\"\r\n        )\r\n        .max(40, 'Senha muito longa'),\r\n      passwordConfirmation: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Senha não confere')\r\n        .required('Confirme a senha!')\r\n      }),\r\n      onSubmit: values => {\r\n        setProgress(false);\r\n        const user = {\r\n          password: values.password,\r\n          token: token,\r\n          email: email\r\n        }\r\n        props.reset(user);\r\n      },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n        <Typography variant=\"h6\" noWrap>\r\n          SuggestInBox\r\n        </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container className={classes.container} component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Recuperar senha\r\n          </Typography> \r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"password\" \r\n              name=\"password\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Nova senha\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.password}\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <div>\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <Typography className={classes.error}>{formik.errors.password}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"password\" \r\n              name=\"passwordConfirmation\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Confirme a senha\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.passwordConfirmation}\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <div>\r\n              {formik.touched.passwordConfirmation && formik.errors.passwordConfirmation ? (\r\n                <Typography className={classes.error}>{formik.errors.passwordConfirmation}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <ReCAPTCHA sitekey=\"6LcdP8cZAAAAAMLbn_f2B0EDFSdtvkPQaEO1hx30\" onChange={() => setDisableSubmit(false)} />\r\n            <Button type=\"submit\" disabled={disableSubmit} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} onBlur={formik.handleBlur}>\r\n              Salvar\r\n            </Button>\r\n          </form>\r\n\r\n          <Dialog open={props.openDialog} onClick={()=> setProgress(true)} onClose={props.hideMessage}>\r\n            <DialogTitle>\r\n              Atenção\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              {props.message}\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={props.hideMessage}>Fechar</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          <div hidden={progress}>\r\n            <CircularProgress/>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  openDialog: state.message.showMessage,\r\n  message: state.message.message\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({reset, showMessage, hideMessage}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Reset);","import React from 'react';\r\n\r\nconst Print = () => {\r\n  return (\r\n    <div>\r\n      Imprimir\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Print;","import React from 'react';\r\nimport { Route, Switch, Redirect, Router } from 'react-router-dom';\r\n\r\nimport Site from './Site';\r\nimport Client from './pages/Client';\r\nimport User from './pages/User';\r\nimport Suggest from './pages/User/Suggest';\r\nimport Adm from './pages/Adm';\r\nimport { Login, Fogot, Reset, Print } from './components';\r\n\r\nimport { isAuthenticated } from './services/auth';\r\nimport history from './services/history';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      isAuthenticated() ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\r\n      )\r\n    }\r\n  />\r\n);\r\n \r\nconst Routes = () => (\r\n  <Router history={history}>\r\n    <Switch>\r\n      <Route exact path='/' component={Site}/>\r\n      <Route exact path='/login' component={Login}/>\r\n      <Route exact path='/fogot-password' component={Fogot}/>\r\n      <Route path='/reset-password' component={Reset}/>\r\n      <Route path='/client' component={Client}/>\r\n      <PrivateRoute path='/user' component={User}/>\r\n      <PrivateRoute path='/suggest' component={Suggest}/>\r\n      <PrivateRoute path='/adm' component={Adm}/>\r\n      <PrivateRoute path='/print' component={Print}/>\r\n      <Route exact path=\"/not-found\" component={()=><h1>Página não encontrada 404</h1>}/>\r\n      <Redirect to=\"/not-found\" />\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nexport default Routes;","import React from 'react';\r\nimport Routes from './routes';\r\n\r\nconst App = () => (\r\n  <Routes/> \r\n)\r\n\r\nexport default App;\r\n","import api from '../services/api';\r\n\r\nconst ACTIONS = {\r\n  LIST_PROMO: 'LISTPROMO',\r\n  BY_ID_PROMO: 'BYIDPROMO',\r\n  UPDATE_PROMO: 'UPDATEPROMO',\r\n  ADD_PROMO: 'ADDPROMO',\r\n}\r\nconst INITIAL_STATE = {\r\n  promo: [],\r\n  promoById: [],\r\n}\r\nexport const promoReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.ATV_PROMO:\r\n      return {...state, companyById: action.companyById}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import api from '../services/api';\r\n\r\nconst ACTIONS = {\r\n  LIST_NOTIFICATION: 'LIST_NOTIFICATION',\r\n  DELETE_NOTIFICATION: 'DELETE_NOTIFICATION',\r\n}\r\nconst INITIAL_STATE = {\r\n  notifications: [],\r\n}\r\nexport const notificationReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.LIST_NOTIFICATION:\r\n      return {...state, notification: action.notification}\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { clientReducer } from './clientReducer';\r\nimport { authReducer } from './authReducer';\r\nimport { companyReducer } from './companyReducer';\r\nimport { suggestReducer } from './suggestReducer';\r\nimport { promoReducer } from './promoReducer';\r\nimport { menuReducer } from './menuReducer';\r\nimport { messageReducer } from './messageReducer';\r\nimport { callReducer } from './callReducer';\r\nimport { notificationReducer } from './notificationReducer';\r\nimport { userReducer } from './userReducer';\r\n\r\nconst mainReducer = combineReducers({\r\n  auth: authReducer,\r\n  client: clientReducer,\r\n  user: userReducer,\r\n  company: companyReducer,\r\n  suggest: suggestReducer,\r\n  menu: menuReducer,\r\n  promo: promoReducer,\r\n  call: callReducer,\r\n  message: messageReducer,\r\n  notification: notificationReducer,\r\n});\r\n\r\nexport const store = applyMiddleware(thunk)(createStore)(mainReducer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}