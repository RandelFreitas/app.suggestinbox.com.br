{"version":3,"sources":["pages/Client/ConfirmClient/index.module.css","Site/index.js","services/history.js","services/auth.js","services/api.js","store/clientReducer.js","pages/Client/MainClient/index.js","pages/Client/FormClient/index.js","pages/Client/MenuClient/index.js","pages/Client/AtentionClient/index.js","pages/Client/AboutClient/index.js","pages/Client/ConfirmClient/index.js","pages/Client/routesClient.js","pages/Client/index.js","store/userReducer.js","store/companyReducer.js","pages/User/Companies/index.js","pages/User/SetupUser/index.js","pages/User/SetupCompany/index.js","pages/User/routesUser.js","pages/User/index.js","store/suggestReducer.js","pages/User/Suggest/Suggests/index.js","store/callReducer.js","pages/User/Suggest/Call/index.js","pages/User/Suggest/Promo/index.js","pages/User/Suggest/Menu/index.js","pages/User/Suggest/Finances/index.js","pages/User/Suggest/Reservation/index.js","pages/User/Suggest/Delivery/index.js","pages/User/Suggest/routesUser.js","pages/User/Suggest/index.js","pages/Adm/routesAdm.js","pages/Adm/index.js","store/messageReducer.js","store/authReducer.js","components/Dialog/index.js","components/Login/index.js","components/Fogot/index.js","components/ResetPassword/index.js","routes.js","App.js","store/promoReducer.js","store/menuReducer.js","store/index.js","index.js","pages/Client/MenuClient/index.module.css"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Site","classes","className","AppBar","position","Toolbar","Typography","variant","Button","component","Link","to","color","history","createBrowserHistory","logoutUser","localStorage","removeItem","push","api","axios","create","baseURL","interceptors","request","use","a","config","token","getItem","headers","Authorization","ACTIONS","INFOS","ADD","INITIAL_STATE","infos","idTable","suggest","getInfo","idCompany","dispatch","get","then","Response","type","data","catch","error","console","log","submitSuggest","recommends","post","companyId","addCall","call","table","ADD_CALL","margin","width","photo","marginBottom","marginTop","height","center","textAlign","button","hide","display","MainClient","props","CardMedia","image","name","slogan","_id","menu","onClick","prototypes","PropTypes","array","isRequired","connect","state","client","bindActionCreators","background","span","namePhone","ident","maxWidth","unknown","fontSize","alignItems","minHeight","stars","padding","NumberFormatCustom","inputRef","onChange","other","getInputRef","onValueChange","values","target","value","isNumericString","format","FormClient","useState","window","location","href","split","checked","setChecked","activeStep","setActiveStep","Set","skipped","setSkipped","steps","phone","opinion","setValues","handleChange","event","checkChange","onSubmit","preventDefault","Stepper","Step","StepLabel","step","TextField","label","disabled","id","inputProps","maxLength","InputProps","inputComponent","FormControlLabel","promo","size","control","Checkbox","Box","mb","borderColor","FormLabel","Rating","defaultValue","icon","emptyIcon","FormControl","RadioGroup","row","aria-label","Radio","labelPlacement","multiline","rows","rowsMax","getStepContent","buttons","prevActiveStep","length","newSkipped","has","delete","MenuClient","styles","wrap","section","htmlFor","grid","content","description","ten","AtentionClient","idUrl","useEffect","localization","src","frameBorder","aria-hidden","tabIndex","ConfirmClient","cupom","link","RoutesApp","exact","path","AboutClient","poth","img","links","labelLink","appBar","top","bottom","grow","list","justifyContent","paddingTop","Client","React","setState","toggleDrawer","open","role","onKeyDown","List","ListItem","ListItemIcon","ListItemText","primary","Divider","CssBaseline","IconButton","edge","Drawer","onClose","users","userById","userUp","infosUsers","getUserById","updateUser","user","put","companies","infosCompanies","companyById","companyAtv","listCompanies","page","nOfItems","docs","addCompany","company","getCompanyById","updateCompany","idUser","cleanCompany","atvCompany","item","palette","text","secondary","Companies","nOfPages","pages","setPage","mapCompanies","Fragment","map","Grid","key","md","sm","xs","Card","CardActionArea","CardContent","noWrap","address","city","CardActions","container","Pagination","count","float","media","card","ZipFormatCustom","CpfFormatCustom","PhoneFormatCustom","SetupUser","initialValues","email","cpf","street","number","district","zip","obs","enableReinitialize","validationSchema","Yup","required","userUpdate","formik","handleSubmit","style","fullWidth","InputLabelProps","shrink","getFieldProps","touched","errors","qrCode","buttonQr","buttonPhoto","cardMain","sectionImg","qrCodeTable","nTable","CnpjFormatCustom","SetupCompany","setNTable","accept","input","multiple","rel","cnpj","companyUpdate","RoutesUser","toolbar","paddingRight","textDecoration","paddingBottom","profile","appBarSpacer","mixins","overflow","User","Badge","badgeContent","Container","suggests","suggestById","infosSuggests","listSuggest","limit","fromDate","toDate","favorite","outlier","createMuiTheme","main","filter","minWidth","marginLeft","Suggest","setLimit","typeSuggests","setTypeSuggests","Date","selectedDateFrom","setSelectedDateFrom","now","selectedDateTo","setSelectedDateTo","FormHelperText","Select","MenuItem","locale","ptBR","utils","DateFnsUtils","disableToolbar","invalidDateMessage","date","KeyboardButtonProps","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","hover","parseISO","createdAt","timeZone","precision","readOnly","favoriteUpdate","outlierUpdate","calls","infosCalls","callById","listCalls","tables","Call","check","setCall","FormGroup","Switch","atvCall","status","Promo","setPromo","atvPromo","Menu","setMenu","atvMenu","Finances","Reservation","reservation","setReservation","atvReservation","Delivery","delivery","setDelivery","atvDelivery","toolbarIcon","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","paper","flexDirection","fixedHeight","avatar","backgroundColor","MainSuggest","setOpen","clsx","Avatar","hidden","parseFloat","toFixed","nStars","auth","RoutesAppSuggest","match","useRouteMatch","url","Adm","alt","message","showMessage","progress","hideMessage","showProgress","hideProgress","AUTH","FOGOT","login","setItem","JSON","stringify","fogot","reset","success","openDialog","Dialog","DialogTitle","DialogContent","DialogActions","submit","disableSubmit","setDisableSubmit","useFormik","password","max","onBlur","handleBlur","sitekey","CircularProgress","setProgress","passwordConfirmation","matches","oneOf","PrivateRoute","Component","rest","render","pathname","from","Routes","Login","Fogot","Reset","App","LIST_PROMO","BY_ID_PROMO","UPDATE_PROMO","ADD_PROMO","promoById","LIST_MENU","ATV_MENU","menuById","mainReducer","combineReducers","action","RESET","listUp","forEach","listUpOut","infosMenu","ADD_MENU","BY_ID_MENU","UPDATE_MENU","ATV_PROMO","store","applyMiddleware","thunk","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6f3cc190.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"ConfirmClient_center__DxxVk\",\"link\":\"ConfirmClient_link__1PO4Z\"};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Site = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            SuggestInBox\r\n          </Typography>\r\n          <Button component={Link} to={`/login`} color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Site;","import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","import history from './history';\r\nexport const TOKEN_KEY = \"@token\";\r\nexport const INFOS = \"@infos\";\r\n\r\nexport const isAuthenticated = () => localStorage.getItem(TOKEN_KEY) !== null;\r\n\r\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\r\nexport const getInfos = () => localStorage.getItem(INFOS);\r\n\r\nexport const setInfosLocalStorage = (token, infos) => {\r\n  localStorage.setItem(TOKEN_KEY, token);\r\n  localStorage.setItem(INFOS, JSON.stringify(infos));\r\n};\r\nexport const setTokenLocalStorage = (token) => {\r\n  localStorage.setItem(TOKEN_KEY, token);\r\n};\r\nexport const logoutUser = () => {\r\n  localStorage.removeItem(TOKEN_KEY);\r\n  localStorage.removeItem(INFOS);\r\n  history.push('/login');\r\n};","import axios from \"axios\";\r\nimport { getToken } from \"./auth\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.suggestinbox.com.br\"\r\n  //baseURL: \"http://localhost:3001\"\r\n});\r\n\r\napi.interceptors.request.use(async config => {\r\n  const token = getToken();\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport default api;","import api from '../services/api';\r\nimport history from \"../services/history\";\r\n\r\nconst ACTIONS = {\r\n  INFOS: 'INFOS',\r\n  ADD: 'ADD_SUGGEST'\r\n}\r\nconst INITIAL_STATE = {\r\n  infos:[],\r\n  idTable: [],\r\n  suggest:[]\r\n}\r\nexport const clientReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.INFOS:\r\n      return {...state, infos: action.infos, idTable: action.idTable}\r\n    case ACTIONS.ADD:\r\n      return {...state, suggest: action.suggest}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//OBTER INFOS DA COMPANIA\r\nexport const getInfo = (idCompany, idTable) => {\r\n  return dispatch => {\r\n    api.get(`/client/company/${idCompany}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.INFOS,\r\n        infos: Response.data,\r\n        idTable: idTable\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//ENVIAR SUGGEST\r\nexport const submitSuggest = (suggest) => {\r\n  if(suggest.recommends === 'y'){\r\n    suggest.recommends = true;\r\n  }else{\r\n    suggest.recommends = false;\r\n  }\r\n  return dispatch => {\r\n    api.post(`/client/company/${suggest.companyId}`, suggest)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ADD,\r\n        suggest: Response.data,\r\n      });\r\n    }, history.push(`/client/opiniao/sucesso/?${suggest.companyId}`))\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//ENVIAR CALL\r\nexport const addCall = (idCompany, idTable) => {\r\n  const call = {\r\n    table: idTable,\r\n    companyId: idCompany\r\n  };\r\n  console.log(call);\r\n  return dispatch => {\r\n    api.post(`/client/company/call/${idCompany}`, call)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ADD_CALL,\r\n      });\r\n    }) //history.push(`/suggest/call/success`))\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { addCall } from '../../../store/clientReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: 'auto',\r\n      width: '100%',\r\n    },\r\n  },\r\n  photo: {\r\n    margin: '0 auto',\r\n    marginBottom: '10px',\r\n    marginTop: '20px',\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    margin: 'auto',\r\n    marginBottom: '20px',\r\n  },\r\n  button: {\r\n    marginBottom: \"20px\"\r\n  },\r\n  hide: {\r\n    display: 'none'\r\n  }\r\n}));\r\n\r\nconst MainClient = (props) => {\r\n  const { infos, idTable } = props;\r\n  const classes = useStyles();\r\n  console.log(idTable == 0);\r\n  return(\r\n    <div className={classes.root}>\r\n      <CardMedia className={classes.photo} image=\"/assets/logoBar.png\" title=\"Contemplative Reptile\"/>\r\n      <div className={classes.center}>\r\n        <h3>{infos.name}</h3>\r\n        <p>{infos.slogan}</p>\r\n      </div>\r\n      <Button className={classes.button} component={Link} to={`/client/opiniao/?${infos._id}?table=${idTable? idTable: 0}`} variant=\"contained\" color=\"primary\">\r\n        Dar opinião\r\n      </Button>\r\n      <Button className={props.infos.menu? classes.button : classes.hide} \r\n        component={Link} to={`/client/cardapio/?${infos._id}?table=${idTable? idTable: 0}`} \r\n        variant=\"contained\" color=\"primary\">\r\n        Cardápio online\r\n      </Button>\r\n      <Button className={props.infos.call && idTable != 0? classes.button : classes.hide} \r\n        onClick={() => props.addCall(infos._id, idTable)}\r\n        component={Link} to={`/client/atencao/?${infos._id}?table=${idTable? idTable: 0}`} \r\n        variant=\"contained\" color=\"primary\">\r\n        Chamar garçom\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nMainClient.prototypes = {\r\n  infos: PropTypes.array.isRequired,\r\n  idTable: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos,\r\n  idTable: state.client.idTable\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({addCall}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainClient);","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { submitSuggest } from '../../../store/clientReducer'\r\nimport { connect } from 'react-redux';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport Star from '@material-ui/icons/Star';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: 'auto',\r\n      width: '100%',\r\n      background: '#fafafa',\r\n    },\r\n  },\r\n  name: {\r\n    textAlign: 'center',\r\n  },\r\n\r\n  span: {  \r\n    textAlign: 'center'\r\n  },\r\n  namePhone: {\r\n    width: '250px'\r\n  },\r\n  ident: {\r\n    marginTop: '10px',\r\n    maxWidth: \"200px\",\r\n  },\r\n  unknown: {\r\n    fontSize: \"12px\",\r\n  },\r\n  center: {\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    minHeight: '150px'\r\n  },\r\n  stars: {\r\n    padding: '28px',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    minHeight: '150px'\r\n  },\r\n  recommends: {\r\n    padding: '28px',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    minHeight: '150px'\r\n  },\r\n  button: {\r\n    margin: '8px',\r\n    marginTop: '25px'\r\n  }\r\n}));\r\n\r\nconst NumberFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='(##) #########'\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst FormClient = (props) => {\r\n  const classes = useStyles();\r\n  const { infos } = props;\r\n  const [companyId] = useState(window.location.href.split('?')[1]);\r\n  const [checked, setChecked] = useState(false);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [skipped, setSkipped] = useState(new Set());\r\n  const steps = [\"\", \"\", \"\", \"\"];\r\n\r\n  const isStepSkipped = (step) => {\r\n    return skipped.has(step);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const [values, setValues] = useState({\r\n    name: '',\r\n    phone: '',\r\n    stars: 0,\r\n    opinion: '',\r\n    recommends: '',\r\n    companyId\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    switch(event.target.value){\r\n      case '1':\r\n        setValues({...values, [event.target.name]: 1 });\r\n        break;\r\n      case '2':\r\n        setValues({...values, [event.target.name]: 2 });\r\n        break;\r\n      case '3':\r\n        setValues({...values, [event.target.name]: 3 });\r\n        break;\r\n      case '4':\r\n        setValues({...values, [event.target.name]: 4 });\r\n        break;\r\n      case '5':\r\n        setValues({...values, [event.target.name]: 5 });\r\n        break;\r\n      default:\r\n        setValues({...values, [event.target.name]: event.target.value });\r\n        break;\r\n    }\r\n  };\r\n  const checkChange = (event) => {\r\n    setValues({name: '', phone: ''});\r\n    setChecked(event.target.checked);\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    props.submitSuggest(values);\r\n  }\r\n\r\n  function getStepContent(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <div >\r\n            <TextField className={classes.namePhone}\r\n              label=\"Nome\"\r\n              disabled={checked}\r\n              value={values.name} \r\n              onChange={handleChange}\r\n              name=\"name\"\r\n              id=\"standard-basic\"\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <TextField className={classes.namePhone}\r\n              label=\"Telefone\"\r\n              disabled={checked}\r\n              value={values.phone}\r\n              onChange={handleChange}\r\n              name=\"phone\"\r\n              id=\"formatted-numberformat-input\"\r\n              InputProps={{inputComponent: NumberFormatCustom}}\r\n            />\r\n            <FormControlLabel className={classes.ident}\r\n              label={<Typography className={classes.unknown}>Desejo não me identificar{infos.promo? \" e não participar da promoção\": \"\"}</Typography>}\r\n              size=\"small\"\r\n              control={<Checkbox color=\"primary\" onChange={checkChange} name=\"checked\" />}\r\n            />\r\n          </div>\r\n        );\r\n      case 1:\r\n        return (\r\n          <div className={classes.stars}>\r\n            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n              <FormLabel component=\"legend\">Toque para classificar</FormLabel>\r\n              <Rating\r\n                name=\"stars\"\r\n                onChange={handleChange}\r\n                defaultValue={0}\r\n                value={values.stars}\r\n                icon={<Star fontSize=\"large\" />}\r\n                emptyIcon={<StarBorderIcon fontSize=\"large\" />}\r\n              />\r\n            </Box>\r\n          </div>\r\n        );\r\n      case 2:\r\n        return (\r\n          <div className={classes.recommends}>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\">Nos recomendaria?</FormLabel>\r\n              <RadioGroup onChange={handleChange} value={values.recommends} row aria-label=\"position\" name=\"recommends\">\r\n                <FormControlLabel\r\n                  value=\"y\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Sim\"\r\n                  name=\"recommends\"\r\n                  labelPlacement=\"bottom\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"n\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Não\"\r\n                  name=\"recommends\"\r\n                  labelPlacement=\"bottom\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </div>\r\n        );\r\n      case 3:\r\n        return (\r\n          <div className={classes.center}>\r\n            <TextField\r\n            label=\"Deixe sua opinião\"\r\n            multiline\r\n            rows={4}\r\n            rowsMax={7}\r\n            variant=\"outlined\"\r\n            value={values.opinion} \r\n            onChange={handleChange}\r\n            name=\"opinion\"\r\n            id=\"text-basic\" \r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return (\r\n          <div>\r\n            ok\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <h3 className={classes.name}>{props.infos.name}</h3>\r\n      <p className={classes.name}>{props.infos.slogan}</p>\r\n      <form className={classes.root} onSubmit={handleSubmit}>\r\n        <Stepper activeStep={activeStep}>\r\n          <Step>\r\n            <StepLabel/>\r\n          </Step>\r\n          <Step>\r\n            <StepLabel/>\r\n          </Step>\r\n          <Step>\r\n            <StepLabel/>\r\n          </Step>\r\n          <Step>\r\n            <StepLabel/>\r\n          </Step>\r\n        </Stepper>\r\n        <div className={classes.center}>\r\n          {getStepContent(activeStep)}\r\n          <div className={classes.buttons}>\r\n            <Button variant=\"contained\" disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n              Voltar\r\n            </Button>\r\n            {activeStep === steps.length? (\r\n              <Button className={classes.button} variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                Enviar\r\n              </Button>\r\n            ) : (\r\n              <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length -1 ? \"Enviar\" : \"Próximo\"}\r\n              </Button>)\r\n            }\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nFormClient.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({submitSuggest}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormClient);","import React from 'react';\r\nimport styles from './index.module.css';\r\n\r\nconst MenuClient = () =>{\r\n  return(\r\n    <div className={styles.wrap}>\r\n      <div className={styles.section}>\r\n        <h3>Cardápio</h3>\r\n        <div className={styles.wrap}>\r\n          <label className={styles.name}>Seção: </label>\r\n          <select htmlFor='section'>\r\n            <option value='comida'>Comida</option>\r\n            <option value='bebida'>Bebida</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className={styles.grid}>\r\n          <div className={styles.content}>\r\n            <p className={styles.name}>Baião de dois</p>\r\n            <p className={styles.description}>(Arroz e feijao)</p>\r\n          </div>\r\n          <div className={styles.value}>\r\n            <p className={styles.name}>R$ 15,00</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.ten}>\r\n        <span>Cobramos 10% de taxa de serviço</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenuClient;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst AtentionClient = (props) => {\r\n  const { infos } = props;\r\n\r\n  return(\r\n    <div>\r\n      <h2>Chamado enviado!</h2>\r\n      <p>Chegaremos assim que possível.</p>\r\n      <p>Enquanto isso você pode ver nosso cardápio online no botão abaixo:</p>\r\n      <div>\r\n        <Link to={`/client/cardapio/?${infos._id}`}>Ver cadápio online</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAtentionClient.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nexport default connect(mapStateToProps)(AtentionClient);","import React, { useState, useEffect} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { getInfo } from '../../../store/clientReducer';\r\n\r\nconst AboutClient = (props) => {\r\n  const { infos } = props;\r\n  const [ idUrl ] = useState(window.location.href.split('?')[1]);\r\n\r\n  useEffect(()=> {\r\n    console.log(idUrl);\r\n  },[idUrl]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>{infos.name}</h3>\r\n      <p>{infos.history}</p>\r\n      <h4>Localização</h4>\r\n      <p>{infos.localization}</p>\r\n      <iframe title='mapa' src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d63695.95624351804!2d-38.560086091509596!3d-3.810670390317004!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x7c74e4a78a20565%3A0xce1304c86cef7da7!2sR.%20A%20-%20Passar%C3%A9%2C%20Fortaleza%20-%20CE%2C%2060810-670!5e0!3m2!1spt-BR!2sbr!4v1595268668224!5m2!1spt-BR!2sbr\" width=\"250\" height=\"200\" frameBorder=\"0\" aria-hidden=\"false\" tabIndex=\"0\"/>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({getInfo}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AboutClient);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.css';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ConfirmClient = (props) => {\r\n  const { infos } = props;\r\n\r\n  return (\r\n    <div className={styles.center}>\r\n      <h3>Obrigado pela sua opinião!</h3>\r\n      <p>Parabéns vocês ganhou uma caipirinha na sua proxima visita!</p>\r\n      <div className={styles.cupom}>\r\n        <h4>Cupom: 49FBA</h4>\r\n        <p>Cupom disponível em 24h.</p>\r\n      </div>\r\n      <Link className={styles.link} to={`/client/?${infos._id}`}>Voltar ao inicio</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nConfirmClient.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nexport default connect(mapStateToProps)(ConfirmClient);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport MainClient from './MainClient';\r\nimport FormClient from './FormClient';\r\nimport MenuClient from './MenuClient';\r\nimport AtentionClient from './AtentionClient';\r\nimport AboutClient from './AboutClient';\r\nimport ConfirmClient from './ConfirmClient';\r\n\r\nconst RoutesApp = () => (\r\n  <Switch>\r\n    <Route exact path='/client' component={MainClient}/>\r\n    <Route exact path='/client/opiniao' component={FormClient}/>\r\n    <Route exact path='/client/opiniao/sucesso' component={ConfirmClient}/>\r\n    <Route exact path='/client/atencao' component={AtentionClient}/>\r\n    <Route exact path='/client/sobrenos' component={AboutClient}/>\r\n    <Route exact poth='/client/cardapio' component={MenuClient}/>\r\n  </Switch>\r\n)\r\n\r\nexport default RoutesApp;","import React, { useState, useEffect} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport RoutesClient from './routesClient';\r\nimport { getInfo } from '../../store/clientReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport MarkunreadMailboxIcon from '@material-ui/icons/MarkunreadMailbox';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  img:{\r\n    padding: '10px'\r\n  },\r\n  menu: {\r\n    height: '25px'\r\n  },\r\n  links:{\r\n    margin: 'auto'\r\n  },\r\n  labelLink:{\r\n    padding: '10px',\r\n  },\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  list: {\r\n    width: 200,\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  content: {\r\n    width: '275px',\r\n    margin: 'auto',\r\n    paddingTop: '30px'\r\n  },\r\n}));\r\n\r\nconst Client = (props) => {\r\n  const { infos } = props;\r\n  const [ idCompany ] = useState(window.location.href.split('?')[1]);\r\n  const [ idTable ] = useState(window.location.href.split('table=')[1]);\r\n\r\n  const [state, setState] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    props.getInfo(idCompany, idTable);\r\n  },[idCompany]);\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    setState(open);\r\n  };\r\n\r\n  const list = (\r\n    <div className={classes.list} onClick={toggleDrawer(false)} role=\"presentation\" onKeyDown={toggleDrawer(false)}>\r\n      <List>\r\n        <ListItem button component={Link} to={`/client/?${infos._id}?table=${idTable? idTable: 0}`}>\r\n          <ListItemIcon><HomeIcon/></ListItemIcon>\r\n          <ListItemText primary='Início'/>\r\n        </ListItem>\r\n        <Divider/>\r\n        <ListItem button component={Link} to={`/client/sobrenos/?${infos._id}?table=${idTable? idTable: 0}`}>\r\n          <ListItemIcon><InfoIcon/></ListItemIcon>\r\n          <ListItemText primary='Sobre nós'/>\r\n        </ListItem>\r\n        <Divider/>\r\n        <ListItem button component={Link} to='/'>\r\n          <ListItemIcon><MarkunreadMailboxIcon/></ListItemIcon>\r\n          <ListItemText primary='Sobre o SuggestInBox' />\r\n        </ListItem>\r\n        <Divider/>\r\n      </List>\r\n    </div>\r\n  )\r\n  return(\r\n    <div>\r\n      <CssBaseline />\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton onClick={toggleDrawer(true)} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Drawer open={state} onClose={toggleDrawer(false)}>\r\n            {list}\r\n          </Drawer>\r\n          <Typography variant=\"button\" className={classes.links}>\r\n            <Button color=\"inherit\" component={Link} to={`/client/?${infos._id}?table=${idTable? idTable: 0}`}>SuggestInBox</Button>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.content}>\r\n        <RoutesClient/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nClient.prototypes = {\r\n  infos: PropTypes.array.isRequired,\r\n  idTable: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos,\r\n  idTable: state.client.idTable\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({getInfo}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Client);","import api from '../services/api';\r\nimport history from '../services/history';\r\n\r\nconst ACTIONS = {\r\n  LIST_USERS: 'LISTUSERS',\r\n  BY_ID_USER: 'BYIDUSER',\r\n  UPDATE_USER: 'UPDATEUSER',\r\n}\r\nconst INITIAL_STATE = {\r\n  users: [],\r\n  userById: [],\r\n  userUp: [],\r\n  infosUsers: [],\r\n}\r\nexport const userReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.BY_ID_USER:\r\n      return {...state, userById: action.userById}\r\n    case ACTIONS.UPDATE_USER:\r\n      return {...state, user: action.user}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//LISTAR TODOS USUÁRIOS\r\nexport const listUser = (page, nOfItems) => {\r\n  return dispatch => {\r\n    api.get(`/adm/user?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_USERS,\r\n        users: docs,\r\n        infosUsers: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//GET BY ID USER\r\nexport const getUserById = (id) => {\r\n  return dispatch => {\r\n    api.get(`/adm/user/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_USER,\r\n        userById: Response.data,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n//UPDATE USER\r\nexport const updateUser = (user, id) => {\r\n  return dispatch => {\r\n    api.put(`/adm/user/${id}`, user)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_USER,\r\n        userUp: Response.data\r\n      })\r\n    }, history.push(`/user/?${id}?page=1&limit=25`))\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}","import api from '../services/api';\r\nimport history from '../services/history';\r\n\r\nconst ACTIONS = {\r\n  LIST_COMPANIES: 'LISTCOMPANIES',\r\n  BY_ID_COMPANY: 'BYIDCOMPANY',\r\n  UPDATE_COMPANY: 'UPDATECOMPANY',\r\n  ATV_COMPANY: 'ATVCOMPANY',\r\n  CLEAN_COMPANY: 'CLEANCOMPANY',\r\n  ADD_COMPANY: 'ADDCOMPANY',\r\n}\r\nconst INITIAL_STATE = {\r\n  companies: [],\r\n  infosCompanies: [],\r\n  companyById: [],\r\n  companyAtv: [],\r\n}\r\nexport const companyReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.LIST_COMPANIES:\r\n      return {...state, companies: action.companies, infosCompanies: action.infosCompanies}\r\n    case ACTIONS.ADD_COMPANY:\r\n      return {...state}\r\n    case ACTIONS.BY_ID_COMPANY:\r\n      return {...state, companyById: action.companyById}\r\n    case ACTIONS.UPDATE_COMPANY:\r\n      return state;\r\n    case ACTIONS.ATV_COMPANY:\r\n      return {...state}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//LISTAR COMPANIAS\r\nexport const listCompanies = (page, nOfItems) => {\r\n  return dispatch => {\r\n    api.get(`/adm/company?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_COMPANIES,\r\n        companies: docs,\r\n        infosCompanies: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//ADICIONAR COMPANY\r\nexport const addCompany = (company, id) => {\r\n  return dispatch => {\r\n    api.post('/adm/company', company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ADD_COMPANY,\r\n      });\r\n    }, history.push(`/user`))\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//GET BY ID COMPANY\r\nexport const getCompanyById = (id) => {\r\n  return dispatch => {\r\n    api.get(`/adm/company/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_COMPANY,\r\n        companyById: Response.data,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n//UPDATE COMPANY\r\nexport const updateCompany = (company, id, idUser) => {\r\n  return dispatch => {\r\n    api.put(`/adm/company/${id}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_COMPANY,\r\n      })\r\n    }, history.push(`/suggest/?${idUser}/?${id}?page=1&limit=25`))\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n//LIMPAR CAMPOS COMPANY\r\nexport const cleanCompany = () => {\r\n  return {\r\n    type: ACTIONS.CLEAN_COMPANY,\r\n  }\r\n}\r\n//ATIVAR / DESATIVAR: MENU, PROMO, CALL\r\nexport const atvCompany = (company) => {\r\n  return dispatch => {\r\n    api.put(`/adm/company/${company._id}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ATV_COMPANY,\r\n      })\r\n    })\r\n  }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { listCompanies } from '../../../store/companyReducer' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  item: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  center: {\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    margin: '20px'\r\n  },\r\n  button: {\r\n    margin: '15px'\r\n  }\r\n}));\r\n\r\nconst Companies = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { companies, infosCompanies } = props;\r\n  const [ idUrl ] = useState(window.location.href.split('/?')[1].split('?')[0]);\r\n  const nOfPages = infosCompanies.pages;\r\n  const [page, setPage] = useState(1);\r\n  const [nOfItems, setNoOfItems] = useState(10);\r\n\r\n  useEffect(() => {\r\n    props.listCompanies(page, nOfItems);\r\n  },[page, nOfItems]);\r\n\r\n  const handleChange=(event, value)=>{\r\n    setPage(value);\r\n  }\r\n  const handleNofItems=(event)=>{\r\n    setNoOfItems(event.target.value);\r\n    setPage(1);\r\n  }\r\n\r\n  const mapCompanies = (\r\n    <React.Fragment>\r\n      {companies.map( company => {\r\n          return(\r\n            <Grid key={company._id} item md={4} sm={6} xs={12}>\r\n              <div className={classes.item}>  \r\n                <Card>\r\n                  <CardActionArea component={Link} to={`/suggest/?${idUrl}/?${company._id}?page=${page}&limit=${nOfItems}`}>\r\n                    <CardContent>\r\n                      <Typography noWrap variant=\"h5\" component=\"h2\">\r\n                        {company.name}\r\n                      </Typography>\r\n                      <Typography noWrap variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {company.address.city} - {company.address.state}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                  <CardActions className={classes.center}>\r\n                    <Button component={Link} to={`/suggest/?${idUrl}/?${company._id}?page=${page}&limit=${nOfItems}`} variant=\"contained\" color=\"primary\">\r\n                      Gerenciar\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </div>\r\n            </Grid>\r\n          )})\r\n        }\r\n    </React.Fragment>\r\n  )\r\n\r\n  return(\r\n    <div className={classes.root}>\r\n      <Typography className={classes.center} variant=\"h5\" component=\"h2\">Companhias</Typography>\r\n      <Button className={classes.button} component={Link} to={`/user/setup-company/?${idUrl}`} variant=\"contained\" color=\"primary\">\r\n        Adicionar Companhia\r\n      </Button>\r\n      <Grid container item xs={12} spacing={3}>\r\n        {mapCompanies}\r\n      </Grid>\r\n      <Grid className={classes.center} container item xs={12} spacing={3}>\r\n        <Box component=\"span\">\r\n          <Pagination\r\n            count={nOfPages}\r\n            page={page}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nCompanies.prototypes = {\r\n  companies: PropTypes.array.isRequired,\r\n  infosCompanies: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companies: state.company.companies,\r\n  infosCompanies: state.company.infosCompanies,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({listCompanies}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Companies);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport NumberFormat from 'react-number-format';\r\nimport * as Yup from 'yup';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider, Button, TextField, Card, Typography, Grid} from '@material-ui/core';\r\nimport { getUserById, updateUser } from '../../../store/userReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 8\r\n  },\r\n  button: {\r\n    float: 'right',\r\n    margin: 8,\r\n  },\r\n  media: {\r\n    margin: 'auto',\r\n    width: 140,\r\n    height: 140,\r\n  },\r\n  card: {\r\n    marginBottom: 10,\r\n  },\r\n  center: {\r\n    margin: 'auto',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  grid: {\r\n    justifyContent: 'center',\r\n    padding: 8\r\n  }\r\n}));\r\n\r\nconst ZipFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='#####-###'\r\n    />\r\n  );\r\n}\r\n\r\nZipFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst CpfFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='###.###.###-##'\r\n    />\r\n  );\r\n}\r\n\r\nCpfFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst PhoneFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='(##) #########'\r\n    />\r\n  );\r\n}\r\n\r\nPhoneFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst SetupUser = (props) => {\r\n  const classes = useStyles();\r\n  const { userById } = props;\r\n\r\n  const [idUrl] = useState(window.location.href.split('/?')[1]);\r\n  const defaultFormShape = {\r\n    email: '',\r\n    name: '',\r\n    cpf: '',\r\n    phone: '',\r\n    address: {\r\n      state: '',\r\n      city: '',\r\n      street: '',\r\n      number: '',\r\n      type: '',\r\n      district: '',\r\n      zip: '',\r\n      obs: ''\r\n    },\r\n  };\r\n\r\n  useEffect(()=>{\r\n    props.getUserById(idUrl);\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <Formik \r\n        initialValues= {userById._id? userById : defaultFormShape}\r\n        enableReinitialize\r\n        validationSchema={Yup.object({\r\n          email: Yup.string()\r\n            .required('Email obrigatório!'),\r\n          name: Yup.string()\r\n            .required('Nome obrigatório!'),\r\n          cpf: Yup.string()\r\n            .required('Cpf obrigatório!'),\r\n          phone: Yup.string()\r\n            .required('Telefone obrigatório!'),\r\n          address: Yup.object({\r\n            zip: Yup.string()\r\n              .required('Cep obrigatorio!'),\r\n            street: Yup.string()\r\n              .required('Rua obrigatorio!'),\r\n            district: Yup.string()\r\n              .required('Bairro obrigatorio!'),\r\n            city: Yup.string()\r\n              .required('Cidade obrigatorio!'),\r\n            state: Yup.string()\r\n              .required('Estado obrigatorio!'),\r\n            number: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n            type: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n            obs: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n          }),\r\n        })}\r\n\r\n        onSubmit={(values) => {\r\n          const { name, email, phone, cpf } = values;\r\n          const { state, city, street, number, type, district, zip, obs } = values.address;\r\n          const address = {state, city, street, number, type, district, zip, obs};\r\n          const userUpdate = { name, email, cpf, phone, address };\r\n          props.updateUser(userUpdate, userById._id);\r\n        }}>\r\n        {formik => (\r\n          <Card >\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <p style={{margin: 10}}>Dados do Administrador</p>\r\n              <Grid container>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={5}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Nome:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"name\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('name')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.name && formik.errors.name ? (\r\n                        <Typography className={classes.error}>{formik.errors.name}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"CPF:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"cpf\"\r\n                      InputProps={{inputComponent: CpfFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('cpf')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.cpf && formik.errors.cpf ? (\r\n                        <Typography className={classes.error}>{formik.errors.cpf}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Email:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"email\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('email')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.email && formik.errors.email ? (\r\n                        <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Telefone:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"phone\"\r\n                      InputProps={{inputComponent: PhoneFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('phone')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.phone && formik.errors.phone ? (\r\n                        <Typography className={classes.error}>{formik.errors.phone}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{margin: 10}}>Endereço</p>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cep:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.zip\"\r\n                      InputProps={{inputComponent: ZipFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.zip')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.zip}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Rua:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.street\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.street')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.street}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Bairro:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.district\"\r\n                      inputProps={{ maxLength: 40 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.district')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.district}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cidade:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.city\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.city')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.city}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Estado:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.state\"\r\n                      inputProps={{ maxLength: 30 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.state')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.state}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Número:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.number\"\r\n                      inputProps={{ maxLength: 6 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.number')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.number}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Tipo:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.type\"\r\n                      inputProps={{ maxLength: 20 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.type')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.type}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Complemento:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.obs\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.obs')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.obs}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Divider/>\r\n                  <Button type=\"submit\" className={classes.button} variant=\"contained\" color=\"primary\">\r\n                    Atualizar\r\n                  </Button>\r\n                  <Button className={classes.button} component={Link} to={`/user/?${userById._id}?page=1&limit=25`} variant=\"outlined\" color=\"primary\">\r\n                    Cancelar\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nSetupUser.prototypes = {\r\n  userById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userById: state.user.userById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ getUserById, updateUser }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupUser);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport NumberFormat from 'react-number-format';\r\nimport * as Yup from 'yup';\r\nimport QRCode from 'qrcode.react';\r\n\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider, Button, TextField, Card, Typography, Grid} from '@material-ui/core';\r\nimport { addCompany, getCompanyById, updateCompany, cleanCompany } from '../../../store/companyReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 8\r\n  },\r\n  qrCode:{\r\n    textAlign: 'center',\r\n    maxWidth: '200px',\r\n    margin: '15px'\r\n  },\r\n  button: {\r\n    float: 'right',\r\n    margin: 8,\r\n  },\r\n  buttonQr: {\r\n    margin: '5px',\r\n    padding: '5px',\r\n    fontSize: '12px',\r\n    width: '90px'\r\n  },\r\n  buttonPhoto:{\r\n    margin: '5px',\r\n    padding: '5px',\r\n    fontSize: '12px',\r\n    width: '110px'\r\n  },\r\n  media: {\r\n    margin: 'auto',\r\n    width: 140,\r\n    height: 140,\r\n  },\r\n  cardMain: {\r\n    marginBottom: '10px'\r\n  },\r\n  card: {\r\n    marginBottom: 10,\r\n  },\r\n  sectionImg: {\r\n    justifyContent: 'center'\r\n  },\r\n  photo: {\r\n    marginBottom: '5px',\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  center: {\r\n    margin: 'auto',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  grid: {\r\n    justifyContent: 'center',\r\n    padding: 8\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  qrCodeTable: {\r\n    textAlign: 'center',\r\n    maxWidth: '300px',\r\n    margin: '15px'\r\n  },\r\n  nTable: {\r\n    width: '90px'\r\n  },\r\n  title: {\r\n    margin: '15px'\r\n  }\r\n}));\r\n\r\nconst ZipFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='#####-###'\r\n    />\r\n  );\r\n}\r\n\r\nZipFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst CnpjFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='##.###.###/####-##'\r\n    />\r\n  );\r\n}\r\n\r\nCnpjFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst PhoneFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='(##) #########'\r\n    />\r\n  );\r\n}\r\n\r\nPhoneFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst SetupCompany = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n\r\n  const [idUser] = useState(window.location.href.split('/?')[1]);\r\n  const [idCompany] = useState(window.location.href.split('/?')[2]);\r\n\r\n  const defaultFormShape = {\r\n    name: '',\r\n    cnpj: '',\r\n    slogan: '',\r\n    history: '',\r\n    localization: '',\r\n    email: '',\r\n    phone: '',\r\n    address: {\r\n      state: '',\r\n      city: '',\r\n      street: '',\r\n      number: '',\r\n      type: '',\r\n      district: '',\r\n      zip: '',\r\n      obs: ''\r\n    },\r\n  };\r\n  \r\n  const [ nTable, setNTable ] = useState(0);\r\n  const tableChange = (event) => {\r\n    setNTable(event.target.value);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(idCompany){\r\n      props.getCompanyById(idCompany);\r\n    }else{\r\n      props.cleanCompany();\r\n    }\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.cardMain}>\r\n        <Grid container className={classes.sectionImg}>\r\n          <Grid className={classes.qrCode} item>\r\n            <CardMedia\r\n              className={classes.photo}\r\n              image=\"/assets/logoBar.png\"\r\n              title=\"Contemplative Reptile\"\r\n            />\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              style={{ display: 'none' }}\r\n              id=\"raised-button-file\"\r\n              multiple\r\n              type=\"file\"\r\n            />\r\n            <Typography className={classes.title}>Foto perfil</Typography>\r\n            <label htmlFor=\"raised-button-file\">\r\n              <Button className={classes.buttonPhoto} variant=\"outlined\" component=\"span\" color=\"primary\">\r\n                Alterar Foto\r\n              </Button>\r\n            </label>\r\n          </Grid>\r\n          <Grid className={idCompany?  classes.qrCode : classes.hide} item>\r\n            <QRCode value={`https://app.suggestinbox.com.br/client/?${idCompany}?table=0`}/>\r\n            <Typography className={classes.title}>QR Code geral</Typography>\r\n            <Button rel=\"noopener noreferrer\" className={classes.buttonQr} target=\"_blank\" href={`http://app.suggestinbox.com.br/client/?${idCompany}?table=0`} variant=\"contained\" color=\"primary\">\r\n              Ver Perfil\r\n            </Button>\r\n            <Button rel=\"noopener noreferrer\" className={classes.buttonQr} target=\"_blank\" href={`http://app.suggestinbox.com.br/client/?${idCompany}?table=0`} variant=\"outlined\" color=\"primary\">\r\n              Imprimir\r\n            </Button>\r\n          </Grid>\r\n          <Grid className={idCompany?  classes.qrCodeTable : classes.hide} item>\r\n            <QRCode value={`https://app.suggestinbox.com.br/client/?${idCompany}?table=${nTable}`}/>\r\n            <Typography className={classes.title}>QR Code por mesa</Typography>\r\n            <TextField\r\n              className={classes.nTable}\r\n              id=\"standard-number\"\r\n              label=\"Nº da mesa\"\r\n              type=\"number\"\r\n              value={nTable}\r\n              onChange={tableChange}\r\n              size=\"small\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <Button rel=\"noopener noreferrer\" className={classes.buttonQr} target=\"_blank\" href={`localhost:3000/client/?${idCompany}?table=0`} variant=\"outlined\" color=\"primary\">\r\n              Imprimir\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n\r\n      <Formik \r\n        initialValues= {idCompany? companyById : defaultFormShape}\r\n        enableReinitialize\r\n        validationSchema={Yup.object({\r\n          name: Yup.string()\r\n            .required('Nome obrigatório!'),\r\n          cnpj: Yup.string()\r\n            .required('Cnpj obrigatório!'),\r\n          slogan: Yup.string()\r\n            .required('Slogan obrigatório'),\r\n          history: Yup.string()\r\n            .required('História obrigatória'),\r\n          localization: Yup.string()\r\n            .required('Localização obrigatória'),\r\n          email: Yup.string()\r\n            .required('Email obrigatório!'),\r\n          phone: Yup.string()\r\n            .required('Telefone obrigatório!'),\r\n          address: Yup.object({\r\n            zip: Yup.string()\r\n              .required('Cep obrigatorio!'),\r\n            street: Yup.string()\r\n              .required('Rua obrigatorio!'),\r\n            district: Yup.string()\r\n              .required('Bairro obrigatorio!'),\r\n            city: Yup.string()\r\n              .required('Cidade obrigatorio!'),\r\n            state: Yup.string()\r\n              .required('Estado obrigatorio!'),\r\n            number: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n          }),\r\n        })}\r\n\r\n        onSubmit={(values) => {\r\n          if(companyById._id){\r\n            const { name, slogan, history, localization, email, cnpj, phone } = values;\r\n            const { state, city, street, number, type, district, zip, obs } = values.address;\r\n            const address = {state, city, street, number, type, district, zip, obs};\r\n            const companyUpdate = { name, slogan, history, localization, email, cnpj, phone, address };\r\n            props.updateCompany(companyUpdate, companyById._id, idUser);\r\n          }else{\r\n            props.addCompany(values);\r\n          }\r\n        }}>\r\n        {formik => (\r\n          <Card >\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <p style={{margin: 10}}>Dados da companhia</p>\r\n              <Grid container>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Nome:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"name\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('name')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.name && formik.errors.name ? (\r\n                        <Typography className={classes.error}>{formik.errors.name}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Slogan:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"slogan\"\r\n                      inputProps={{ maxLength: 50 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('slogan')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.slogan && formik.errors.slogan ? (\r\n                        <Typography className={classes.error}>{formik.errors.slogan}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"História:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"history\"\r\n                      inputProps={{ maxLength: 250 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('history')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.history && formik.errors.history ? (\r\n                        <Typography className={classes.error}>{formik.errors.history}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Localização:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"localization\"\r\n                      inputProps={{ maxLength: 250 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('localization')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.localization && formik.errors.localization ? (\r\n                        <Typography className={classes.error}>{formik.errors.localization}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Email:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"email\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('email')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.email && formik.errors.email ? (\r\n                        <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Telefone:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"phone\"\r\n                      InputProps={{inputComponent: PhoneFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('phone')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.phone && formik.errors.phone ? (\r\n                        <Typography className={classes.error}>{formik.errors.phone}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"CNPJ:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"cnpj\"\r\n                      InputProps={{inputComponent: CnpjFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('cnpj')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.cnpj && formik.errors.cnpj ? (\r\n                        <Typography className={classes.error}>{formik.errors.cnpj}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{margin: 10}}>Endereço</p>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cep:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.zip\"\r\n                      InputProps={{inputComponent: ZipFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.zip')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.zip}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Rua:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.street\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.street')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.street}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Bairro:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.district\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.district')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.district}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cidade:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.city\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.city')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.city}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Estado:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.state\"\r\n                      inputProps={{ maxLength: 30 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.state')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.state}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Número:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.number\"\r\n                      inputProps={{ maxLength: 10 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.number')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.number}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Divider/>\r\n                  <Button type=\"submit\" className={classes.button} variant=\"contained\" color=\"primary\">\r\n                    {idCompany? 'Atualizar': 'Salvar'}\r\n                  </Button>\r\n                  <Button className={classes.button} component={Link} \r\n                    to={idCompany? `/suggest/?${idUser}/?${idCompany}?page=1&limit=25` : `/user/?${idUser}?page=1&limit=25`} variant=\"outlined\" color=\"primary\">\r\n                    Cancelar\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nSetupCompany.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ addCompany, getCompanyById, updateCompany, cleanCompany }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupCompany);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Companies from './Companies';\r\nimport SetupUser from './SetupUser';\r\nimport SetupCompany from './SetupCompany';\r\n\r\nconst RoutesUser = () => {\r\n  return(\r\n    <Switch>\r\n      <Route exact path='/user' component={Companies}/>\r\n      <Route exact path='/user/setup' component={SetupUser}/>\r\n      <Route exact path='/user/setup-company' component={SetupCompany}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default RoutesUser;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from '../../services/auth';\r\nimport { getUserById } from '../../store/userReducer';\r\nimport PropTypes from 'prop-types';\r\nimport RoutesUser from './routesUser';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textDecoration: 'none',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  profile: {\r\n    paddingRight: 17\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n}));\r\n\r\nconst User = (props) => {\r\n  const classes = useStyles();\r\n  const [ idUser ] = useState(window.location.href.split('/?')[1].split('?')[0]);\r\n  const { userById } = props;\r\n  \r\n  useEffect(() => {\r\n    props.getUserById(idUser);\r\n  },[]);\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\">\r\n          <Toolbar className={classes.toolbar}>\r\n            <Typography component={Link} to={`/user/?${userById._id}?page=1&limit=25`} variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              SuggestInBox\r\n            </Typography>\r\n            <div className={classes.profile}>{userById.name}</div>\r\n            <IconButton aria-label=\"Ver notificações\" color=\"inherit\">\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton component={Link} to={`/user/setup/?${userById._id}`} color=\"inherit\">\r\n              <SettingsIcon/>\r\n            </IconButton>\r\n            <IconButton onClick={()=>logoutUser()} color=\"inherit\">\r\n              <ExitToAppIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid>\r\n              <RoutesUser />\r\n            </Grid>\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUser.prototypes = {\r\n  userById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userById: state.user.userById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({getUserById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(User);","import api from '../services/api';\r\n\r\nconst ACTIONS = {\r\n  LIST_SUGGESTS: 'LISTSUGGESTS',\r\n  FAVORITE: 'FAVORITE',\r\n  TOFILE: 'TOFILE',\r\n}\r\nconst INITIAL_STATE = {\r\n  suggests: [],\r\n  suggestById: [],\r\n  infosSuggests: [],\r\n}\r\n\r\nexport const suggestReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    //*********************SUGGESTS*********************\r\n    case ACTIONS.LIST_SUGGESTS:\r\n      return {...state, suggests: action.suggests, infosSuggests: action.infosSuggests}\r\n    case ACTIONS.FAVORITE:\r\n      const listUp = [...state.suggests]\r\n      listUp.forEach(suggest => {\r\n        if(suggest._id === action._id){\r\n          suggest.favorite = true;\r\n        }\r\n      })\r\n      return {...state, suggests: listUp}\r\n    case ACTIONS.TOFILE:\r\n      const listUpOut = [...state.suggests]\r\n      listUpOut.forEach(suggest => {\r\n        if(suggest._id === action._id){\r\n          suggest.outlier = true;\r\n        }\r\n      })\r\n      return {...state, suggests: listUpOut}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//*******************************************SUGGESTS*********************************************\r\n//LISTAR SUGGESTS\r\nexport const listSuggest = (idUrl, page, limit, type, fromDate, toDate) => {\r\n  return dispatch => {\r\n    api.get(`/adm/all-suggest/${idUrl}?page=${page}&limit=${limit}&type=${type}&fromDate=${fromDate}&toDate=${toDate}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_SUGGESTS,\r\n        suggests: docs,\r\n        infosSuggests: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//FAVORITAR SUGGEST\r\nexport const favorite = (suggest) => {\r\n  return dispatch => {\r\n    api.put(`/adm/suggest/${suggest._id}`, suggest )\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.FAVORITE,\r\n        id: suggest._id\r\n      })\r\n    })\r\n  }\r\n}\r\n//ARQUIVAR SUGGEST\r\nexport const outlier = (suggest) => {\r\n  return dispatch => {\r\n    api.put(`/adm/suggest/${suggest._id}`, suggest )\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.TOFILE,\r\n        id: suggest._id\r\n      })\r\n    })\r\n  }\r\n}","import React, { useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { listSuggest, favorite, outlier } from '../../../../store/suggestReducer';\r\nimport { parseISO } from 'date-fns';\r\nimport { format } from 'date-fns-tz';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport { ptBR } from \"date-fns/locale\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Box from '@material-ui/core/Box';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport { IconButton } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    secondary:{\r\n      main: '#FFB701'\r\n    }\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  center: {\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    margin: '20px'\r\n  },\r\n  filter: {\r\n    minWidth: '110px',\r\n    marginLeft: '9px'\r\n  },\r\n  data: {\r\n    margin: '9px',\r\n    maxWidth: '140px'\r\n  },\r\n}));\r\n\r\nconst Suggest = (props) => {\r\n  const classes = useStyles();\r\n  const [ idCompany ] = useState(window.location.href.split('/?')[2].split('?')[0]);\r\n  const {suggests, infosSuggests} = props;\r\n  const pages = infosSuggests.pages;\r\n  \r\n  const [ page, setPage ] = useState(1);\r\n  const [ limit, setLimit ] = useState(25);\r\n  const [typeSuggests, setTypeSuggests] = useState('All');\r\n  const [selectedDateFrom, setSelectedDateFrom] = useState(new Date('2020-01-01T00:00:00'));\r\n  const [selectedDateTo, setSelectedDateTo] = useState(Date.now);\r\n  \r\n  useEffect(() => {\r\n    props.listSuggest(idCompany, page, limit, typeSuggests, selectedDateFrom, selectedDateTo);\r\n  },[]);\r\n\r\n  const handleChangePage=(event, value)=>{\r\n    setPage(value);\r\n    props.listSuggest(idCompany, value, limit, typeSuggests, selectedDateFrom, selectedDateTo);\r\n  }\r\n  const handleLimit=(event)=>{\r\n    setLimit(event.target.value);\r\n    props.listSuggest(idCompany, page, event.target.value, typeSuggests, selectedDateFrom, selectedDateTo);\r\n    setPage(1);\r\n  }\r\n  const handleChangSuggest=(event)=>{\r\n    setTypeSuggests(event.target.value);\r\n    props.listSuggest(idCompany, page, limit, event.target.value, selectedDateFrom, selectedDateTo);\r\n  }\r\n  const handleDateChangeFrom = (date) => {\r\n    setSelectedDateFrom(date);\r\n    console.log(date);\r\n  };\r\n  const handleDateChangeTo = (date) => {\r\n    setSelectedDateTo(date);\r\n    props.listSuggest(idCompany, page, limit, typeSuggests, selectedDateFrom, date);\r\n  };\r\n\r\n  //FAV E ARQ\r\n  const favoriteUpdate = (suggest) => {\r\n    if(suggest.favorite){\r\n      suggest.favorite = false;\r\n      return props.favorite(suggest)\r\n    }else{\r\n      suggest.favorite = true;\r\n      return props.favorite(suggest)\r\n    }\r\n  }\r\n  const outlierUpdate = (suggest) => {\r\n    if(suggest.outlier){\r\n      suggest.outlier = false;\r\n      return props.outlier(suggest)\r\n    }else{\r\n      suggest.outlier = true;\r\n      return props.outlier(suggest)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Sugestões</Typography>\r\n       <div>\r\n        <FormControl>\r\n          <FormHelperText>Número por página:</FormHelperText>\r\n          <Select\r\n            value={limit}\r\n            onChange={handleLimit}\r\n            inputProps={{ 'aria-label': 'Without label' }}>\r\n            <MenuItem value={25}>25</MenuItem>\r\n            <MenuItem value={50}>50</MenuItem>\r\n            <MenuItem value={75}>75</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.filter}>\r\n          <FormHelperText>Filtrar por:</FormHelperText>\r\n          <Select\r\n            value={typeSuggests}\r\n            onChange={handleChangSuggest}\r\n            inputProps={{ 'aria-label': 'Without label' }}>\r\n            <MenuItem value={'All'}>Todas</MenuItem>\r\n            <MenuItem value={'Fav'}>Favoritas</MenuItem>\r\n            <MenuItem value={'Arq'}>Arquivadas</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <MuiPickersUtilsProvider locale={ptBR} utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            className={classes.data}\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"normal\"\r\n            id=\"date-picker-inline\"\r\n            label=\"De\"\r\n            size=\"small\"\r\n            invalidDateMessage=\"Data inválida.\"\r\n            value={selectedDateFrom}\r\n            onChange={handleDateChangeFrom}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n          <KeyboardDatePicker\r\n            className={classes.data}\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Até\"\r\n            size=\"small\"\r\n            invalidDateMessage=\"Data inválida.\"\r\n            value={selectedDateTo}\r\n            onChange={handleDateChangeTo}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </div>\r\n      <Paper>\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align='center'>Data</TableCell>\r\n                <TableCell align='center'>Nome</TableCell>\r\n                <TableCell align='center'>Telefone</TableCell>\r\n                <TableCell align='center'>Avaliação</TableCell>\r\n                <TableCell align='center'>Recomenda</TableCell>\r\n                <TableCell align='center'>Opinião</TableCell>\r\n                <TableCell align='center'/>\r\n                <TableCell align='center'/>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <MuiThemeProvider theme={theme}>\r\n                { suggests.map( suggest => {\r\n                  return (\r\n                    <TableRow hover key={suggest._id} role=\"checkbox\" tabIndex={-1}>\r\n                      <TableCell align='center'>{format(parseISO(suggest.createdAt), 'dd/MM/yyyy HH:mm', {timeZone: 'America/Sao_Paulo'} )}</TableCell>\r\n                      <TableCell align='center'>{suggest.name}</TableCell>\r\n                      <TableCell align='center'>{suggest.phone}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <Rating name=\"read-only\" size=\"small\" value={suggest.stars? suggest.stars: 0} precision={0.5} readOnly/>\r\n                      </TableCell>\r\n                      <TableCell align='center'>{suggest.recommends? (<CheckIcon/>) : (<CloseIcon/>)}</TableCell>\r\n                      <TableCell align='center'>{suggest.opinion}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <IconButton onClick={() => favoriteUpdate(suggest)}>\r\n                          {suggest.favorite? (<StarIcon color='secondary'/>):(<StarBorderIcon/>)}\r\n                        </IconButton>\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <IconButton onClick={() => outlierUpdate(suggest)}>\r\n                          {suggest.outlier? (<DeleteOutlineIcon color=\"disabled\"/>):(<DeleteOutlineIcon/>)}\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )\r\n                })}\r\n              </MuiThemeProvider>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Grid className={classes.center} container item xs={12} spacing={3}>\r\n          <Box component=\"span\">\r\n            <Pagination\r\n              count={pages}\r\n              page={page}\r\n              onChange={handleChangePage}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nSuggest.prototypes = {\r\n  suggest: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  suggests: state.suggest.suggests,\r\n  infosSuggests: state.suggest.infosSuggests,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({listSuggest, favorite, outlier}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Suggest);","import api from '../services/api';\r\nimport history from '../services/history';\r\n\r\nconst ACTIONS = {\r\n  LIST_CALLS: 'LISTCALLS',\r\n  BY_ID_CALL: 'BYIDCALL',\r\n  ADD_CALL: 'ADDCALL',\r\n  UPDATE_CALL: 'UPDATECALL',\r\n}\r\nconst INITIAL_STATE = {\r\n  calls: [],\r\n  infosCalls: [],\r\n  callById: [],\r\n}\r\nexport const callReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.LIST_CALLS:\r\n      return {...state, calls: action.calls, infosCalls: action.infosCalls}\r\n    case ACTIONS.ADD_CALL:\r\n      return {...state}\r\n    case ACTIONS.BY_ID_CALL:\r\n      return {...state, callById: action.callById}\r\n    case ACTIONS.UPDATE_CALL:\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//LISTAR COMPANIAS\r\nexport const listCalls = (page, nOfItems) => {\r\n  return dispatch => {\r\n    api.get(`/adm/all-calls?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_CALLS,\r\n        calls: docs,\r\n        infosCalls: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//GET BY ID COMPANY\r\nexport const getCallById = (id) => {\r\n  return dispatch => {\r\n    api.get(`/adm/call/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_CALL,\r\n        callById: Response.data,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n//UPDATE COMPANY\r\nexport const updateCall = (company, id, idUser) => {\r\n  return dispatch => {\r\n    api.put(`/adm/call/${id}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_CALL,\r\n      })\r\n    }, history.push(`/suggest/call/?${idUser}/?${id}?page=1&limit=25`))\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { listCalls } from '../../../../store/callReducer';\r\nimport { atvCompany } from '../../../../store/companyReducer';\r\nimport { parseISO } from 'date-fns';\r\nimport { format } from 'date-fns-tz';\r\n\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport { withStyles, Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  tables: {\r\n    marginTop: '25px'\r\n  },\r\n  center: {\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    margin: '20px'\r\n  },\r\n}));\r\n\r\nconst Call = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById, calls } = props;\r\n  const pages = 1;\r\n  const [ page, setPage ] = useState(1);\r\n  const [ limit, setLimit ] = useState(25);\r\n\r\n  const [ call, setCall ] = useState({\r\n    check: companyById.call\r\n  });\r\n\r\n  useEffect(() => {\r\n    props.listCalls(1, 25)\r\n  },[]);\r\n\r\n  const atvCall = (companyById) => {\r\n    if(companyById.call){\r\n      companyById.call = false;\r\n      setCall({check: companyById.call});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.call = true;\r\n      setCall({check: companyById.call});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  const handleChangePage=(event, value)=>{\r\n    setPage(value);\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Chamada por mesa</Typography>\r\n      <Grid container>\r\n        <Grid item>\r\n          <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={call.check}\r\n                onClick={()=>atvCall(companyById)}\r\n                name=\"checkedA\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Ativar/Desativar\"\r\n          />\r\n          </FormGroup>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid className={classes.tables} item>\r\n          <Typography variant=\"h6\">Chamados</Typography>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Paper>\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align='center'>Mesa</TableCell>\r\n                <TableCell align='center'>Hora</TableCell>\r\n                <TableCell align='center'>Status</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              { calls.map( call => {\r\n                return (\r\n                  <TableRow hover key={call.createdAt} role=\"checkbox\" tabIndex={-1}>\r\n                    <TableCell align='center'>{call.table}</TableCell>\r\n                    <TableCell align='center'>{format(parseISO(call.createdAt), 'dd/MM/yyyy HH:mm', {timeZone: 'America/Sao_Paulo'} )}</TableCell>\r\n                    <TableCell align='center'>{call.status? \"Atendita\" : \"Esperando\"}</TableCell>\r\n                  </TableRow>\r\n                )\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Grid className={classes.center} container item xs={12} spacing={3}>\r\n          <Box component=\"span\">\r\n            <Pagination\r\n              count={pages}\r\n              page={page}\r\n              onChange={handleChangePage}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nCall.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n  calls: state.call.calls,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({listCalls, atvCompany}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Call);","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { atvCompany, getCompanyById } from '../../../../store/companyReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  button: {\r\n    marginTop: '25px',\r\n  },\r\n}));\r\n\r\nconst Promo = (props) => {\r\n  //const classes = useStyles();\r\n  const { companyById } = props;\r\n  const [ promo, setPromo ] = useState({\r\n    check: companyById.promo\r\n  })\r\n\r\n  const atvPromo = (companyById) => {\r\n    if(companyById.promo){\r\n      companyById.promo = false;\r\n      setPromo({check: companyById.promo});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.promo = true;\r\n      setPromo({check: companyById.promo});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Promoção</Typography>\r\n      <Grid container>\r\n        <Grid item>\r\n          <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={promo.check}\r\n                onClick={()=>atvPromo(companyById)}\r\n                name=\"checkedA\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Ativar/Desativar\"\r\n          />\r\n          </FormGroup>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nPromo.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({atvCompany, getCompanyById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Promo);","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { atvCompany, getCompanyById } from '../../../../store/companyReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  button: {\r\n    marginTop: '25px',\r\n  },\r\n}));\r\n\r\nconst Menu = (props) => {\r\n  //const classes = useStyles();\r\n  const { companyById } = props;\r\n  const [ menu, setMenu ] = useState({\r\n    check: companyById.menu\r\n  })\r\n\r\n  const atvMenu = (companyById) => {\r\n    if(companyById.menu){\r\n      companyById.menu = false;\r\n      setMenu({check: companyById.menu});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.menu = true;\r\n      setMenu({check: companyById.menu});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Cardápio / Catálogo</Typography>\r\n      <Grid container>\r\n        <Grid item>\r\n          <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={menu.check}\r\n                onClick={()=>atvMenu(companyById)}\r\n                name=\"checkedA\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Ativar/Desativar\"\r\n          />\r\n          </FormGroup>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nMenu.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({atvCompany, getCompanyById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Menu);","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst Finances = () => {\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Financeiro</Typography>\r\n      <Grid container>\r\n        <Grid item>\r\n          Financeiro em desenvolvimento\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Finances;","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { atvCompany, getCompanyById } from '../../../../store/companyReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  button: {\r\n    marginTop: '25px',\r\n  },\r\n}));\r\n\r\nconst Reservation = (props) => {\r\n  //const classes = useStyles();\r\n  const { companyById } = props;\r\n  const [ reservation, setReservation ] = useState({\r\n    check: companyById.reservation\r\n  })\r\n\r\n  const atvReservation = (companyById) => {\r\n    if(companyById.reservation){\r\n      companyById.reservation = false;\r\n      setReservation({check: companyById.reservation});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.reservation = true;\r\n      setReservation({check: companyById.reservation});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Reservas</Typography>\r\n      <Grid container>\r\n        <Grid item>\r\n          <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={reservation.check}\r\n                onClick={()=>atvReservation(companyById)}\r\n                name=\"checkedA\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Ativar/Desativar\"\r\n          />\r\n          </FormGroup>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nReservation.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({atvCompany, getCompanyById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Reservation);","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { atvCompany, getCompanyById } from '../../../../store/companyReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  button: {\r\n    marginTop: '25px',\r\n  },\r\n}));\r\n\r\nconst Delivery = (props) => {\r\n  //const classes = useStyles();\r\n  const { companyById } = props;\r\n  const [ delivery, setDelivery ] = useState({\r\n    check: companyById.delivery\r\n  })\r\n\r\n  const atvDelivery = (companyById) => {\r\n    if(companyById.delivery){\r\n      companyById.delivery = false;\r\n      setDelivery({check: companyById.delivery});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.delivery = true;\r\n      setDelivery({check: companyById.delivery});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Delivery</Typography>\r\n      <Grid container>\r\n        <Grid item>\r\n          <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={delivery.check}\r\n                onClick={()=>atvDelivery(companyById)}\r\n                name=\"checkedA\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Ativar/Desativar\"\r\n          />\r\n          </FormGroup>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nDelivery.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({atvCompany, getCompanyById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Delivery);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Suggest from './Suggests';\r\nimport Call from './Call';\r\nimport Promo from './Promo';\r\nimport Menu from './Menu';\r\nimport Finances from './Finances';\r\nimport Reservation from './Reservation';\r\nimport Delivery from './Delivery';\r\nimport SetupCompany from '../SetupCompany';\r\n\r\nconst RoutesUser = () => {\r\n  return(\r\n    <Switch>\r\n      <Route exact path='/suggest' component={Suggest}/>\r\n      <Route exact path='/suggest/call' component={Call}/>\r\n      <Route exact path='/suggest/promo' component={Promo}/>\r\n      <Route exact path='/suggest/cardapio' component={Menu}/>\r\n      <Route exact path='/suggest/finances' component={Finances}/>\r\n      <Route exact path='/suggest/reservation' component={Reservation}/>\r\n      <Route exact path='/suggest/delivery' component={Delivery}/>\r\n      <Route exact path='/suggest/setup-company' component={SetupCompany}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default RoutesUser;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from '../../../services/auth';\r\nimport { getCompanyById } from '../../../store/companyReducer';\r\nimport { getUserById } from '../../../store/userReducer';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MoodIcon from '@material-ui/icons/Mood';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport AlarmOnIcon from '@material-ui/icons/AlarmOn';\r\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\r\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nimport RoutesUser from './routesUser';\r\n\r\nconst drawerWidth = 210;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textDecoration: 'none',\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  icon: {\r\n    textDecoration: 'none',\r\n    color: 'white',\r\n  },\r\n  profile: {\r\n    paddingRight: 17\r\n  },\r\n  avatar: {\r\n    fontSize: '12px',\r\n    width: '22px',\r\n    height: '22px',\r\n    backgroundColor: '#f50057',\r\n    textAlign: 'center',\r\n  },\r\n  photo: {\r\n    margin: '0 auto',\r\n    marginBottom: '5px',\r\n    marginTop: '20px',\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  card:{\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nconst MainSuggest = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n  const { stars, name } = companyById;\r\n  const [ idUser ] = useState(window.location.href.split('/?')[1]);\r\n  const [ idCompany ] = useState(window.location.href.split('/?')[2].split('?')[0]);\r\n\r\n  useEffect(() => {\r\n    if(idCompany){\r\n      props.getCompanyById(idCompany);\r\n    }\r\n  },[]);\r\n\r\n  const [open, setOpen] = useState(true );\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component={Link} to={`/suggest/?${idUser}/?${idCompany}?page=1&limit=25`} variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                SuggestInBox\r\n            </Typography>\r\n            <IconButton component={Link} to={`/suggest/setup-company/?${idUser}/?${idCompany}`} color=\"inherit\">\r\n              <Avatar className={classes.avatar}>{name? name.split('', 1): \"...\"}</Avatar>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton component={Link} to={`/suggest/setup-company/?${idUser}/?${idCompany}`} color=\"inherit\">\r\n              <SettingsIcon/>\r\n            </IconButton>\r\n            <IconButton onClick={()=>logoutUser()} color=\"inherit\">\r\n              <ExitToAppIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer variant=\"permanent\" classes={{paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)}} open={open}>\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            <div>      \r\n              <Card className={classes.card}>\r\n                <div hidden={!open}>\r\n                  <CardMedia className={classes.photo} image=\"/assets/logoBar.png\" title=\"Contemplative Reptile\"/>\r\n                  <Typography>{companyById.name}</Typography>\r\n                </div>\r\n                <CardContent hidden={!open}>\r\n                  <Typography variant=\"h3\" color=\"textSecondary\" component=\"p\">\r\n                    {companyById.stars? parseFloat(companyById.stars).toFixed(1): \"...\"}\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\" component=\"p\">\r\n                    {companyById.nStars} classificações\r\n                  </Typography>\r\n                  <Rating name=\"read-only\" value={stars? stars: 0} precision={0.5} readOnly/>\r\n                </CardContent>\r\n              </Card>\r\n              <ListItem button component={Link} to={`/suggest/?${idUser}/?${idCompany}?page=1&limit=25`}>\r\n                <ListItemIcon>\r\n                  <EqualizerIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Sugestões\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/call/?${idUser}/?${idCompany}?page=1&limit=25`}>\r\n                <ListItemIcon>\r\n                  <EmojiPeopleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Chamadas\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/promo/?${idUser}/?${idCompany}`}>\r\n                <ListItemIcon>\r\n                  <MoodIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Promoções\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/cardapio/?${idUser}/?${idCompany}`}>\r\n                <ListItemIcon>\r\n                  <MenuBookIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Cardapio\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/delivery/?${idUser}/?${idCompany}`}>\r\n                <ListItemIcon>\r\n                  <MotorcycleIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Delivery\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/reservation/?${idUser}/?${idCompany}`}>\r\n                <ListItemIcon>\r\n                  <AlarmOnIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Reservas\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/finances/?${idUser}/?${idCompany}`}>\r\n                <ListItemIcon>\r\n                  <AttachMoneyIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Financeiro\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/user/?${idUser}?page=1&limit=25`}>\r\n                <ListItemIcon>\r\n                  <BusinessIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Companhias\" />\r\n              </ListItem>\r\n            </div>\r\n          </List>\r\n        <Divider />\r\n        </Drawer>\r\n\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid>\r\n              <RoutesUser />\r\n            </Grid>\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMainSuggest.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.auth.infos,\r\n  companyById: state.company.companyById,\r\n  userById: state.user.userById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({getCompanyById, getUserById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainSuggest);","import React from 'react';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\n\r\nconst RoutesAppSuggest = () => {\r\n  const match = useRouteMatch();\r\n\r\n  return(\r\n    <Switch>\r\n      <Route exact path={`${match.url}`} component={()=><h1>SUGGEST</h1>}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default RoutesAppSuggest;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport RoutesAdm from './routesAdm';\r\n\r\nconst Adm = () => {\r\n  return(\r\n    <div>\r\n      <h1><img alt='logo' src='/assets/logo_palpitebox.png'/></h1>\r\n      <header>\r\n        <nav>\r\n          <ul>\r\n            <li><Link to='/'>Início</Link></li>\r\n            <li>|</li>\r\n            <li><Link to='/client/sobrenos'>Sobre nós</Link></li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n      <div>\r\n        <RoutesAdm/>\r\n      </div>\r\n      <div>\r\n        <footer>\r\n          <p>Colocar Suggest na sua empresa, <Link to='/'>clique aqui!</Link></p>\r\n          <p>Suggest In Box - Todos os direitos reservados.</p>\r\n          <p>© 2020 - Copyright</p>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Adm;","const INITIAL_STATE = {\r\n  message: '',\r\n  showMessage: false,\r\n  progress: true\r\n}\r\nexport const ACTIONS = {\r\n  SHOW_MESSAGE: 'SHOW_MESSAGE',\r\n  HIDE_MESSAGE: 'HIDE_MESSAGE',\r\n  HIDE_PROGRESS: 'HIDE_PROGRESS',\r\n  SHOW_PROGRESS: 'SHOW_PROGRESS'\r\n}\r\nexport const messageReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.SHOW_MESSAGE:\r\n      return {...state, message: action.message, showMessage: true}\r\n    case ACTIONS.HIDE_MESSAGE:\r\n      return {...state, message: '', showMessage: false, progress: true}\r\n    case ACTIONS.SHOW_PROGRESS:\r\n      return {...state, progress: false}\r\n    case ACTIONS.HIDE_PROGRESS:\r\n      return {...state, progress: true}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//MOSTAR MENSAGEM CAPTURADA DAS REQUESTS\r\nexport const showMessage = (message) => {\r\n  return{\r\n    type: ACTIONS.SHOW_MESSAGE,\r\n    message: message\r\n  }\r\n}\r\n//FECHAR MENSAGENS\r\nexport const hideMessage = () => {\r\n  return {\r\n    type: ACTIONS.HIDE_MESSAGE\r\n  }\r\n}\r\n//PROGRESS DA REQUISIÇÃO\r\nexport const showProgress = () => {\r\n  return {\r\n    type: ACTIONS.SHOW_PROGRESS\r\n  }\r\n}\r\n//FECHAR PROGRESSO\r\nexport const hideProgress = () => {\r\n  return {\r\n    type: ACTIONS.HIDE_PROGRESS\r\n  }\r\n}","import api from '../services/api';\r\nimport history from '../services/history';\r\nimport { setInfosLocalStorage } from '../services/auth';\r\nimport { showMessage } from './messageReducer';\r\n\r\nconst ACTIONS = {\r\n  AUTH: 'AUTH',\r\n  FOGOT: 'FOGOT'\r\n}\r\nconst INITIAL_STATE = {\r\n  infos:[],\r\n  email:[],\r\n  user:[],\r\n}\r\nexport const authReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.AUTH:\r\n      return {...state, infos: action.infos}\r\n    case ACTIONS.FOGOT:\r\n      return {...state, email: action.email}\r\n    case ACTIONS.RESET:\r\n      return {...state, user: action.user}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//AUTENTICAÇÃO\r\nexport const auth = (login) => {\r\n  return dispatch => {\r\n    api.post('/auth', login)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.AUTH,\r\n        infos: Response.data,\r\n      }); \r\n      if(!Response.data.token){\r\n        dispatch(\r\n          showMessage(\"Senha ou email inválidos!\")\r\n        )\r\n      }else{\r\n        setInfosLocalStorage(Response.data.token, Response.data.user);\r\n        history.push(`/user/?${Response.data.user._id}?page=1&limit=25`);\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servidor indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )}\r\n    )\r\n  }\r\n}\r\n//ESQUECI SENHA\r\nexport const fogot = (email) => {\r\n  return dispatch => {\r\n    api.post('/auth/fogot', email)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.FOGOT,\r\n        email: Response.data,\r\n      });\r\n      if(!Response.data.email){\r\n        dispatch(\r\n          showMessage(\"Usuario não encontrado!\")\r\n        )\r\n      }else{\r\n        dispatch(\r\n          showMessage(\"Email enviado com sucesso!\"),\r\n          history.push('/login')\r\n        )\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servidor indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )}\r\n    );\r\n  }\r\n}\r\n//RESET SENHA\r\nexport const reset = (user) => {\r\n  return dispatch => {\r\n    api.post('/auth/reset-password', user)\r\n    .then(Response => {\r\n      dispatch({\r\n          type: ACTIONS.FOGOT,\r\n          user: Response.data,\r\n      });\r\n      if(!Response.data.success){\r\n        dispatch(\r\n          showMessage(\"Usuario não encontrado!\")\r\n        )\r\n      }else{\r\n        dispatch(\r\n          showMessage(\"Senha recuperada com sucesso!\"),\r\n          history.push('/login')\r\n        )\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Serviço indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )}\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\r\nimport { showMessage, hideMessage } from '../../store/messageReducer';\r\n\r\nconst MessageDialog = (props) => {\r\n  return(\r\n    <div>\r\n      <Dialog open={props.openDialog} onClick={()=> props.hideMessage} onClose={props.hideMessage}>\r\n        <DialogTitle>\r\n          Atenção\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {props.message}\r\n        </DialogContent>\r\n        <DialogActions onClick={()=> props.hideMessage}>\r\n          <Button onClick={props.hideMessage}>Fechar</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  openDialog: state.message.showMessage,\r\n  message: state.message.message\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({showMessage, hideMessage}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageDialog);","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { auth } from '../../store/authReducer';\r\nimport { showMessage, hideMessage, showProgress, hideProgress } from '../../store/messageReducer';\r\nimport MessageDialog from '../Dialog';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    maxWidth: 300,\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  link: {\r\n    textAlign: 'end'\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const [disableSubmit, setDisableSubmit] = useState(true);\r\n\r\n  useEffect(()=>{\r\n    props.hideProgress();\r\n  },[])\r\n\r\n  const formik = useFormik ({\r\n    initialValues: { email: '', password: ''},\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .email('Email inválido')\r\n        .required('Email obrigatório!'),\r\n      password: Yup.string()\r\n        .required('Senha obrigatória!')\r\n        .max(40, 'Senha muito longa'),\r\n      }),\r\n      onSubmit: values => {\r\n        props.auth(values);\r\n      },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            SuggestInBox\r\n          </Typography>\r\n          <Button component={Link} to={`/`} color=\"inherit\">Site</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container className={classes.container} component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Login\r\n          </Typography> \r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"email\" \r\n              name=\"email\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Email\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.email}\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <div>\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"password\" \r\n              name=\"password\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Senha\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.password}\r\n              inputProps={{ maxLength: 40 }}\r\n            />\r\n            <div>\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <Typography className={classes.error}>{formik.errors.password}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <ReCAPTCHA sitekey=\"6LcdP8cZAAAAAMLbn_f2B0EDFSdtvkPQaEO1hx30\" onChange={() => setDisableSubmit(false)} />\r\n            <Button type=\"submit\" onClick={()=>props.showProgress()} disabled={disableSubmit} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} onBlur={formik.handleBlur}>\r\n              Entrar\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link to=\"/fogot-password\" variant=\"body2\">\r\n                  Esqueci minha senha\r\n                </Link>\r\n              </Grid>\r\n              <Grid className={classes.link} item xs>\r\n                <Link to=\"#\" variant=\"body2\">\r\n                  Criar conta\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n          <div hidden={props.progress}>\r\n            <CircularProgress/>\r\n          </div>\r\n          <MessageDialog/>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  openDialog: state.message.showMessage,\r\n  message: state.message.message,\r\n  progress: state.message.progress\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({auth, showMessage, hideMessage, showProgress, hideProgress}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { useState} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { showMessage, hideMessage, showProgress } from '../../store/messageReducer';\r\nimport MessageDialog from '../Dialog';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { fogot } from '../../store/authReducer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  link: {\r\n    fontSize: 15 \r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Fogot = (props) => {\r\n  const classes = useStyles();\r\n  const [disableSubmit, setDisableSubmit] = useState(true);\r\n\r\n  const formik = useFormik ({\r\n    initialValues: { email: ''},\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .email('Email invalido')\r\n        .required('Email obrigatório!'),\r\n      }),\r\n      onSubmit: values => {\r\n        props.fogot(values);\r\n      },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <MessageDialog/>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n        <Typography variant=\"h6\" noWrap>\r\n          SuggestInBox\r\n        </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Recuperar senha\r\n          </Typography> \r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"email\" \r\n              name=\"email\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Email\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.email}\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <div>\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <ReCAPTCHA sitekey=\"6LcdP8cZAAAAAMLbn_f2B0EDFSdtvkPQaEO1hx30\" onChange={() => setDisableSubmit(false)} />\r\n            <Button type=\"submit\" onClick={()=> props.showProgress()} disabled={disableSubmit} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} onBlur={formik.handleBlur}>\r\n              Enviar link para email\r\n            </Button>\r\n          </form>\r\n          <div hidden={props.progress}>\r\n            <CircularProgress/>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  openDialog: state.message.showMessage,\r\n  message: state.message.message,\r\n  progress: state.message.progress\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({fogot, showMessage, hideMessage, showProgress}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Fogot);","import React, { useState} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { showMessage, hideMessage } from '../../store/messageReducer';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { reset } from '../../store/authReducer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    maxWidth: 300,\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  link: {\r\n    fontSize: 15 \r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Reset = (props) => {\r\n  const classes = useStyles();\r\n  const [disableSubmit, setDisableSubmit] = useState(true);\r\n  const [progress, setProgress] = useState(true);\r\n  \r\n  const [ token ] = useState(window.location.href.split('/?')[1]);\r\n  const [ email ] = useState(window.location.href.split('/?')[2]);\r\n\r\n  const formik = useFormik ({\r\n    initialValues: { password: '', passwordConfirmation: ''},\r\n    validationSchema: Yup.object({\r\n      password: Yup.string()\r\n        .required('Senha obrigatória!')\r\n        .matches(/^(?=.*[A-Za-z])(?=.*[0-9])(?=.{6,})/,\r\n          \"A senha deve ter pelo menos uma letra maiuscula, um número e 6 caracteres!\"\r\n        )\r\n        .max(40, 'Senha muito longa'),\r\n      passwordConfirmation: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Senha não confere')\r\n        .required('Confirme a senha!')\r\n      }),\r\n      onSubmit: values => {\r\n        setProgress(false);\r\n        const user = {\r\n          password: values.password,\r\n          token: token,\r\n          email: email\r\n        }\r\n        props.reset(user);\r\n      },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n        <Typography variant=\"h6\" noWrap>\r\n          SuggestInBox\r\n        </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container className={classes.container} component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Recuperar senha\r\n          </Typography> \r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"password\" \r\n              name=\"password\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Nova senha\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.password}\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <div>\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <Typography className={classes.error}>{formik.errors.password}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"password\" \r\n              name=\"passwordConfirmation\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Confirme a senha\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.passwordConfirmation}\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <div>\r\n              {formik.touched.passwordConfirmation && formik.errors.passwordConfirmation ? (\r\n                <Typography className={classes.error}>{formik.errors.passwordConfirmation}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <ReCAPTCHA sitekey=\"6LcdP8cZAAAAAMLbn_f2B0EDFSdtvkPQaEO1hx30\" onChange={() => setDisableSubmit(false)} />\r\n            <Button type=\"submit\" disabled={disableSubmit} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} onBlur={formik.handleBlur}>\r\n              Salvar\r\n            </Button>\r\n          </form>\r\n\r\n          <Dialog open={props.openDialog} onClick={()=> setProgress(true)} onClose={props.hideMessage}>\r\n            <DialogTitle>\r\n              Atenção\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              {props.message}\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={props.hideMessage}>Fechar</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          <div hidden={progress}>\r\n            <CircularProgress/>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  openDialog: state.message.showMessage,\r\n  message: state.message.message\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({reset, showMessage, hideMessage}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Reset);","import React from 'react';\r\nimport { Route, Switch, Redirect, Router } from 'react-router-dom';\r\n\r\nimport Site from './Site';\r\nimport Client from './pages/Client';\r\nimport User from './pages/User';\r\nimport Suggest from './pages/User/Suggest';\r\nimport Adm from './pages/Adm';\r\nimport { Login, Fogot, Reset } from './components';\r\n\r\nimport { isAuthenticated } from './services/auth';\r\nimport history from './services/history';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      isAuthenticated() ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\r\n      )\r\n    }\r\n  />\r\n);\r\n \r\nconst Routes = () => (\r\n  <Router history={history}>\r\n    <Switch>\r\n      <Route exact path='/' component={Site}/>\r\n      <Route exact path='/login' component={Login}/>\r\n      <Route exact path='/fogot-password' component={Fogot}/>\r\n      <Route path='/reset-password' component={Reset}/>\r\n      <Route path='/client' component={Client}/>\r\n      <PrivateRoute path='/user' component={User}/>\r\n      <PrivateRoute path='/suggest' component={Suggest}/>\r\n      <PrivateRoute path='/adm' component={Adm}/>\r\n      <Route exact path=\"/not-found\" component={()=><h1>Página não encontrada 404</h1>}/>\r\n      <Redirect to=\"/not-found\" />\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nexport default Routes;","import React from 'react';\r\nimport Routes from './routes';\r\n\r\nconst App = () => (\r\n  <Routes/> \r\n)\r\n\r\nexport default App;\r\n","import api from '../services/api';\r\n\r\nconst ACTIONS = {\r\n  LIST_PROMO: 'LISTPROMO',\r\n  BY_ID_PROMO: 'BYIDPROMO',\r\n  UPDATE_PROMO: 'UPDATEPROMO',\r\n  ADD_PROMO: 'ADDPROMO',\r\n}\r\nconst INITIAL_STATE = {\r\n  promo: [],\r\n  promoById: [],\r\n}\r\nexport const promoReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.ATV_PROMO:\r\n      return {...state, companyById: action.companyById}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import api from '../services/api';\r\n\r\nconst ACTIONS = {\r\n  LIST_MENU: 'LISTMENU',\r\n  ATV_MENU: 'ATVMENU'\r\n}\r\nconst INITIAL_STATE = {\r\n  menu: [],\r\n  menuById: [],\r\n}\r\nexport const menuReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.LIST_MENU:\r\n      return {...state, menu: action.menu, infosMenu: action.infosMenu}\r\n    case ACTIONS.ADD_MENU:\r\n      return {...state, menu: action.menu}\r\n    case ACTIONS.BY_ID_MENU:\r\n      return {...state, menuById: action.menuById}\r\n    case ACTIONS.UPDATE_MENU:\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//LISTAR MENU\r\nexport const listMenu = (idCompany) => {\r\n  return dispatch => {\r\n    api.get(`/adm/menu/${idCompany}`)\r\n    .then(Response => {\r\n      const { docs } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_MENU,\r\n        menu: docs,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//ADICIONAR MENU\r\nexport const addMenu = (menu, id) => {\r\n  return dispatch => {\r\n    api.post('/adm/menu', menu)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ADD_MENU,\r\n        menu: Response.data,\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//GET BY ID MENU\r\nexport const getMenuById = (id) => {\r\n  return dispatch => {\r\n    api.get(`/adm/menu/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_MENU,\r\n        menuById: Response.data,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n//UPDATE COMPANY\r\nexport const updateMenu = (menu, id, idUser) => {\r\n  return dispatch => {\r\n    api.put(`/adm/menu/${id}`, menu)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_MENU,\r\n        //company: Response.data\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { clientReducer } from './clientReducer';\r\nimport { authReducer } from './authReducer';\r\nimport { companyReducer } from './companyReducer';\r\nimport { suggestReducer } from './suggestReducer';\r\nimport { promoReducer } from './promoReducer';\r\nimport { menuReducer } from './menuReducer';\r\nimport { messageReducer } from './messageReducer';\r\nimport { callReducer } from './callReducer';\r\nimport { userReducer } from './userReducer';\r\n\r\nconst mainReducer = combineReducers({\r\n  auth: authReducer,\r\n  client: clientReducer,\r\n  user: userReducer,\r\n  company: companyReducer,\r\n  suggest: suggestReducer,\r\n  menu: menuReducer,\r\n  promo: promoReducer,\r\n  call: callReducer,\r\n  message: messageReducer,\r\n});\r\n\r\nexport const store = applyMiddleware(thunk)(createStore)(mainReducer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"MenuClient_wrap__1XHwg\",\"section\":\"MenuClient_section__yfvwT\",\"grid\":\"MenuClient_grid__EiHyG\",\"name\":\"MenuClient_name__NFQDW\",\"description\":\"MenuClient_description__3m5uL\",\"value\":\"MenuClient_value__1uJb-\",\"ten\":\"MenuClient_ten__2KMGT\"};"],"sourceRoot":""}