{"version":3,"sources":["pages/Client/AtentionClient/index.module.css","pages/Client/ConfirmClient/index.module.css","pages/Client/AboutClient/index.module.css","Site/index.js","pages/Client/MainClient/index.js","services/api.js","services/auth.js","services/history.js","store/clientReducer.js","pages/Client/FormClient/index.js","pages/Client/MenuClient/index.js","pages/Client/AtentionClient/index.js","pages/Client/AboutClient/index.js","pages/Client/ConfirmClient/index.js","pages/Client/routesClient.js","pages/Client/index.js","store/messageReducer.js","store/authReducer.js","store/admReducer.js","pages/User/Companies/index.js","pages/User/SetupUser/index.js","pages/User/SetupCompany/index.js","pages/User/routesUser.js","pages/User/index.js","pages/User/Suggest/Suggests/index.js","pages/User/Suggest/Promo/index.js","pages/User/Suggest/Menu/index.js","pages/User/Suggest/Finances/index.js","pages/User/Suggest/routesUser.js","pages/User/Suggest/index.js","pages/Adm/routesAdm.js","pages/Adm/index.js","components/Login/index.js","components/Fogot/index.js","components/ResetPassword/index.js","routes.js","App.js","store/index.js","index.js","pages/Client/MenuClient/index.module.css"],"names":["module","exports","Site","href","alt","src","width","height","useStyles","makeStyles","theme","root","margin","center","textAlign","button","marginBottom","createMuiTheme","palette","primary","main","secondary","MainClient","props","infos","classes","className","name","slogan","Button","component","Link","to","_id","variant","color","prototypes","PropTypes","array","isRequired","connect","state","client","api","axios","create","baseURL","interceptors","request","use","a","config","token","localStorage","getItem","headers","Authorization","history","createBrowserHistory","ACTIONS","INITIAL_STATE","suggest","getInfo","id","dispatch","get","then","Response","type","data","catch","error","console","log","submitSuggest","post","push","span","marginTop","fontSize","unknown","unknownChildren","justifyContent","recommends","NumberFormatCustom","inputRef","onChange","other","getInputRef","onValueChange","values","target","value","isNumericString","format","FormClient","useState","checked","setChecked","phone","stars","opinion","setValues","handleChange","event","onSubmit","preventDefault","TextField","label","disabled","InputProps","inputComponent","FormControlLabel","Typography","size","control","Checkbox","Box","mb","borderColor","FormLabel","Rating","defaultValue","icon","emptyIcon","FormControl","RadioGroup","row","aria-label","Radio","labelPlacement","multiline","rows","rowsMax","bindActionCreators","MenuClient","styles","wrap","section","htmlFor","grid","content","description","ten","AtentionClient","buttons","link","window","location","split","idUrl","useEffect","localization","map","title","frameBorder","aria-hidden","tabIndex","ConfirmClient","cupom","RoutesApp","exact","path","AboutClient","poth","header","background","img","padding","menu","links","labelLink","appBar","top","bottom","grow","flexGrow","list","paddingTop","offset","mixins","toolbar","Client","React","setState","toggleDrawer","open","onClick","role","onKeyDown","List","ListItem","ListItemIcon","ListItemText","Divider","CssBaseline","AppBar","position","Toolbar","IconButton","edge","menuButton","Drawer","onClose","message","showMessage","hideMessage","AUTH","FOGOT","email","user","auth","login","setItem","JSON","stringify","fogot","erro","reset","logout","removeItem","suggests","suggestById","infosSuggests","companies","company","infosCompanies","companyById","loadingCompany","userById","loadingUser","listSuggest","page","nOfItems","docs","favorite","put","outlier","listCompanies","addCompany","getCompanyById","updateCompany","cleanCompany","getUserById","updateUser","item","spacing","text","Companies","nOfPages","pages","setPage","mapCompanies","Fragment","Grid","key","md","sm","xs","Card","CardActionArea","CardContent","noWrap","address","city","CardActions","container","Pagination","count","adm","float","media","card","SetupUser","initialValues","cpf","street","number","district","zip","obs","enableReinitialize","validationSchema","Yup","required","userUpdate","formik","handleSubmit","style","fullWidth","InputLabelProps","shrink","getFieldProps","touched","errors","SetupCompany","cnpj","companyUpdate","RoutesUser","display","paddingRight","textDecoration","paddingBottom","profile","appBarSpacer","overflow","User","Container","maxWidth","Suggest","setNoOfItems","FormHelperText","Select","inputProps","MenuItem","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","hover","createdAt","favoriteUpdate","outlierUpdate","Promo","Menu","Finances","toolbarIcon","alignItems","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","marginRight","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","paper","flexDirection","fixedHeight","avatar","backgroundColor","MainSuggest","setOpen","clsx","Avatar","hidden","precision","readOnly","RoutesAppSuggest","match","useRouteMatch","url","Adm","submit","openDialog","disableSubmit","setDisableSubmit","useFormik","password","onBlur","handleBlur","sitekey","Dialog","DialogTitle","DialogContent","DialogActions","progress","setProgress","CircularProgress","handleClose","aria-labelledby","aria-describedby","DialogContentText","autoFocus","PrivateRoute","Component","rest","render","pathname","from","Routes","Login","Fogot","Reset","App","mainReducer","combineReducers","action","listUp","forEach","listUpOut","RESET","store","applyMiddleware","thunk","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e94ab1c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"AtentionClient_center__1d0UE\",\"suggest\":\"AtentionClient_suggest__3xmOK\",\"link\":\"AtentionClient_link__2Qdae\",\"buttons\":\"AtentionClient_buttons__APISf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"ConfirmClient_center__DxxVk\",\"link\":\"ConfirmClient_link__1PO4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"AboutClient_center__11y1g\",\"map\":\"AboutClient_map___W6Q6\"};","import React from 'react';\r\n\r\nconst Site = () => {\r\n  return(\r\n    <div>\r\n      <header>\r\n        <div>\r\n          <nav>\r\n            <a href='/'>LOGO  |</a>\r\n            <ul>\r\n              <li><a href='/'>SOBRE</a></li>\r\n              <li><a href='/'>SOLUÇÕES</a></li>\r\n              <li><a href='/'>CONTATO</a></li>\r\n              <li><a href='/'>ARTIGOS</a></li>\r\n            </ul>\r\n          </nav>\r\n          <div>\r\n            <img alt='face' src='./assets/facebook.svg'/>\r\n            <img alt='insta' src='./assets/instagram.svg'/>\r\n            <img alt='youtube' src='./assets/youtube.svg'/>\r\n            <button>Login</button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <section>\r\n        <div>\r\n          <div>\r\n            <h2>Qual a pessoa mais importante para seu negócio?</h2>\r\n            <span>Se a sua resposta foi cliente, temos uma ótima notícia para você...</span>\r\n          </div>\r\n          <img width='304' height='294' alt='logo' src='./assets/cliente-2.png'></img>\r\n        </div>\r\n      </section>\r\n      \r\n      <section>\r\n        <div>\r\n          <img width='300' height='160' alt='satisfaction' src='./assets/satisfaction.png'></img>\r\n          <div>\r\n            <h2>Qual a pessoa mais importante para seu negócio?</h2>\r\n            <span>Se a sua resposta foi cliente, temos uma ótima notícia para você...</span>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <div>\r\n          \r\n        </div>\r\n      </section>\r\n      <section>\r\n        <div>\r\n          \r\n        </div>\r\n      </section>\r\n      <footer>\r\n        <div>\r\n          Rodape\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Site;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: 'auto',\r\n      width: '100%',\r\n    },\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    margin: '20px auto'\r\n  },\r\n  button: {\r\n    marginBottom: \"20px\"\r\n  }\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1769aa',\r\n    },\r\n    secondary:{\r\n      main: '#FFB701'\r\n    }\r\n  },\r\n});\r\n\r\nconst MainClient = (props) => {\r\n  const { infos } = props;\r\n  const classes = useStyles();\r\n\r\n  return(\r\n    <MuiThemeProvider theme={theme}>\r\n      <div className={classes.root}>\r\n        <div className={classes.center}>\r\n          <h3>{infos.name}</h3>\r\n          <p>{infos.slogan}</p>\r\n        </div>\r\n        <Button className={classes.button} component={Link} to={`/client/opiniao/?${infos._id}`} variant=\"contained\" color=\"primary\">\r\n          Dar opinião\r\n        </Button>\r\n        <Button className={classes.button} component={Link} to={`/client/opiniao/?${infos._id}`} variant=\"contained\" color=\"primary\">\r\n          Cardápio online\r\n        </Button>\r\n        <Button className={classes.button} component={Link} to={`/client/opiniao/?${infos._id}`} variant=\"contained\" color=\"primary\">\r\n          Chamar garçom\r\n        </Button>\r\n        {/*\r\n        <Link className={styles.link} to={`/client/cardapio/?${infos._id}`}>Cardápio online</Link>\r\n        <Link className={styles.link} to={`/client/atencao/?${infos._id}`}>Chamar garçom(a)</Link>\r\n        */}\r\n\r\n      </div>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nMainClient.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nexport default connect(mapStateToProps)(MainClient);","import axios from \"axios\";\r\nimport { getToken } from \"./auth\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.suggestinbox.com.br\"\r\n  //baseURL: \"http://localhost:3001\"\r\n});\r\n\r\napi.interceptors.request.use(async config => {\r\n  const token = getToken();\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport default api;","export const TOKEN_KEY = \"@token\";\r\nexport const INFOS = \"@infos\";\r\n\r\nexport const isAuthenticated = () => localStorage.getItem(TOKEN_KEY) !== null;\r\n\r\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\r\nexport const getInfos = () => localStorage.getItem(INFOS);\r\n\r\nexport const setInfosLocalStorage = (token, infos) => {\r\n  localStorage.setItem(TOKEN_KEY, token);\r\n  localStorage.setItem(INFOS, JSON.stringify(infos));\r\n};\r\nexport const setTokenLocalStorage = (token) => {\r\n  localStorage.setItem(TOKEN_KEY, token);\r\n};\r\nexport const logoutUser = () => {\r\n  localStorage.removeItem(TOKEN_KEY);\r\n  localStorage.removeItem(INFOS);  \r\n};","import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","import api from '../services/api';\r\nimport history from \"../services/history\";\r\n\r\nconst ACTIONS = {\r\n  INFOS: 'INFOS',\r\n  ADD: 'ADD_SUGGEST'\r\n}\r\nconst INITIAL_STATE = {\r\n  infos:[],\r\n  suggest:[]\r\n}\r\nexport const clientReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.INFOS:\r\n      return {...state, infos: action.infos}\r\n    case ACTIONS.ADD:\r\n      return {...state, suggest: action.suggest}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//OBTER INFOS DA COMPANIA\r\nexport const getInfo = (id) => {\r\n  return dispatch => {\r\n    api.get(`/client/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.INFOS,\r\n        infos: Response.data,\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//ENVIAR SUGGEST\r\nexport const submitSuggest = (suggest, id) => {\r\n  return dispatch => {\r\n    api.post('/client', suggest)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ADD,\r\n        suggest: Response.data,\r\n      });\r\n    }, history.push(`/client/opiniao/sucesso/?${id}`))\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { submitSuggest } from '../../../store/clientReducer'\r\nimport { connect } from 'react-redux';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport Star from '@material-ui/icons/Star';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: 'auto',\r\n      width: '100%',\r\n    },\r\n  },\r\n  span: {\r\n    marginTop: \"20px\",\r\n    fontSize: \"15px\",\r\n    textAlign: 'center'\r\n  },\r\n  unknown: {\r\n    margin: 0,\r\n  },\r\n  unknownChildren: {\r\n    margin: 0,\r\n    justifyContent: 'start',\r\n    fontSize: \"12px\",\r\n  },\r\n  recommends: {\r\n    justifyContent: 'center'\r\n  },\r\n  button: {\r\n    marginTop: '20px',\r\n    marginBottom: '20px'\r\n  }\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1769aa',\r\n    },\r\n    secondary:{\r\n      main: '#FFB701'\r\n    }\r\n  },\r\n});\r\n\r\nconst NumberFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='(##) #########'\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst FormClient = (props) => {\r\n  const classes = useStyles();\r\n  const { infos } = props;\r\n  const [checked, setChecked] = useState(false);\r\n  const [values, setValues] = useState({\r\n    name: '',\r\n    phone: '',\r\n    stars: 0,\r\n    opinion: '',\r\n    recommends: false\r\n  });\r\n  const[error] = useState({\r\n    name: false,\r\n    phone: false,\r\n    stars: false,\r\n    opinion: false,\r\n    recommends: false,\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    switch(event.target.value){\r\n      case 'y':\r\n        setValues({...values, [event.target.name]: true });\r\n        break;\r\n      case 'n':\r\n        setValues({...values, [event.target.name]: false });\r\n        break;\r\n      case '1':\r\n        setValues({...values, [event.target.name]: 1 });\r\n        break;\r\n      case '2':\r\n        setValues({...values, [event.target.name]: 2 });\r\n        break;\r\n      case '3':\r\n        setValues({...values, [event.target.name]: 3 });\r\n        break;\r\n      case '4':\r\n        setValues({...values, [event.target.name]: 4 });\r\n        break;\r\n      case '5':\r\n        setValues({...values, [event.target.name]: 5 });\r\n        break;\r\n      default:\r\n        setValues({...values, [event.target.name]: event.target.value });\r\n        break;\r\n    }\r\n  };\r\n  const checkChange = (event) => {\r\n    setValues({name: '', phone: ''});\r\n    setChecked(event.target.checked);\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    props.submitSuggest(values, infos._id);\r\n  }\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <form className={classes.root} onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"Nome\"\r\n          error={error.name}\r\n          disabled={checked}\r\n          value={values.name} \r\n          onChange={handleChange}\r\n          name=\"name\"\r\n          id=\"standard-basic\" \r\n        />\r\n        <TextField\r\n          label=\"Telefone\"\r\n          error={error.phone}\r\n          disabled={checked}\r\n          value={values.phone}\r\n          onChange={handleChange}\r\n          name=\"phone\"\r\n          id=\"formatted-numberformat-input\"\r\n          InputProps={{inputComponent: NumberFormatCustom}}\r\n        />\r\n        <FormControlLabel className={classes.unknown}\r\n          label={<Typography className={classes.unknownChildren}>Desejo não me identificar</Typography>}\r\n          size=\"small\"\r\n          control={<Checkbox color=\"primary\" onChange={checkChange} name=\"checked\" />}\r\n        />\r\n        <Box className={classes.span} component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n          <FormLabel component=\"legend\">Toque para classificar</FormLabel>\r\n          <Rating\r\n            name=\"stars\"\r\n            onChange={handleChange}\r\n            defaultValue={0}\r\n            icon={<Star fontSize=\"large\" />}\r\n            emptyIcon={<StarBorderIcon fontSize=\"large\" />}\r\n          />\r\n        </Box>\r\n        <FormControl component=\"fieldset\" error={error.recommends} className={classes.span}>\r\n          <FormLabel component=\"legend\">Nos recomendaria?</FormLabel>\r\n          <RadioGroup onChange={handleChange} className={classes.recommends} row aria-label=\"position\" name=\"recommends\">\r\n            <FormControlLabel\r\n              value=\"y\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Sim\"\r\n              name=\"recommends\"\r\n              labelPlacement=\"bottom\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"n\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Não\"\r\n              name=\"recommends\"\r\n              labelPlacement=\"bottom\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n        <TextField className={classes.span}\r\n          label=\"Deixe sua opinião\"\r\n          error={error.opinion}\r\n          multiline\r\n          rows={4}\r\n          rowsMax={6}\r\n          variant=\"outlined\"\r\n          value={values.opinion} \r\n          onChange={handleChange}\r\n          name=\"opinion\"\r\n          id=\"text-basic\" \r\n        />\r\n        <Button className={classes.button} type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Enviar\r\n        </Button>\r\n      </form>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nFormClient.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({submitSuggest}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormClient);","import React from 'react';\r\nimport styles from './index.module.css';\r\n\r\nconst MenuClient = () =>{\r\n  return(\r\n    <div className={styles.wrap}>\r\n      <div className={styles.section}>\r\n        <h3>Cardápio</h3>\r\n        <div className={styles.wrap}>\r\n          <label className={styles.name}>Seção: </label>\r\n          <select htmlFor='section'>\r\n            <option value='comida'>Comida</option>\r\n            <option value='bebida'>Bebida</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className={styles.grid}>\r\n          <div className={styles.content}>\r\n            <p className={styles.name}>Baião de dois</p>\r\n            <p className={styles.description}>(Arroz e feijao)</p>\r\n          </div>\r\n          <div className={styles.value}>\r\n            <p className={styles.name}>R$ 15,00</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.ten}>\r\n        <span>Cobramos 10% de taxa de serviço</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenuClient;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst AtentionClient = (props) => {\r\n  const { infos } = props;\r\n\r\n  return(\r\n    <div className={styles.center}>\r\n      <h2>Chamado enviado!</h2>\r\n      <p>Chegaremos assim que possível.</p>\r\n      <p className={styles.suggest}>Enquanto isso você pode ver nosso cardápio online no botão abaixo:</p>\r\n      <div className={styles.buttons}>\r\n          <Link className={styles.link} to={`/client/cardapio/?${infos._id}`}>Ver cadápio online</Link>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAtentionClient.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nexport default connect(mapStateToProps)(AtentionClient);","import React, { useState, useEffect} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport styles from './index.module.css';\r\nimport { getInfo } from '../../../store/clientReducer';\r\n\r\nconst AboutClient = (props) => {\r\n  const { infos } = props;\r\n  const [ idUrl ] = useState(window.location.href.split('/?')[1]);\r\n\r\n  useEffect(()=> {\r\n    console.log(idUrl);\r\n  },[idUrl]);\r\n\r\n  return (\r\n    <div className={styles.center}>\r\n      <h3>{infos.name}</h3>\r\n      <p>{infos.history}</p>\r\n      <h4>Localização</h4>\r\n      <p>{infos.localization}</p>\r\n      <iframe className={styles.map} title='mapa' src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d63695.95624351804!2d-38.560086091509596!3d-3.810670390317004!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x7c74e4a78a20565%3A0xce1304c86cef7da7!2sR.%20A%20-%20Passar%C3%A9%2C%20Fortaleza%20-%20CE%2C%2060810-670!5e0!3m2!1spt-BR!2sbr!4v1595268668224!5m2!1spt-BR!2sbr\" width=\"250\" height=\"200\" frameBorder=\"0\" aria-hidden=\"false\" tabIndex=\"0\"/>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({getInfo}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AboutClient);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.css';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ConfirmClient = (props) => {\r\n  const { infos } = props;\r\n\r\n  return (\r\n    <div className={styles.center}>\r\n      <h3>Obrigado pela sua opinião!</h3>\r\n      <p>Parabéns vocês ganhou uma caipirinha na sua proxima visita!</p>\r\n      <div className={styles.cupom}>\r\n        <h4>Cupom: 49FBA</h4>\r\n        <p>Cupom disponível em 24h.</p>\r\n      </div>\r\n      <Link className={styles.link} to={`/client/?${infos._id}`}>Voltar ao inicio</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nConfirmClient.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nexport default connect(mapStateToProps)(ConfirmClient);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport MainClient from './MainClient';\r\nimport FormClient from './FormClient';\r\nimport MenuClient from './MenuClient';\r\nimport AtentionClient from './AtentionClient';\r\nimport AboutClient from './AboutClient';\r\nimport ConfirmClient from './ConfirmClient';\r\n\r\nconst RoutesApp = () => (\r\n  <Switch>\r\n    <Route exact path='/client' component={MainClient}/>\r\n    <Route exact path='/client/opiniao' component={FormClient}/>\r\n    <Route exact path='/client/opiniao/sucesso' component={ConfirmClient}/>\r\n    <Route exact path='/client/atencao' component={AtentionClient}/>\r\n    <Route exact path='/client/sobrenos' component={AboutClient}/>\r\n    <Route exact poth='/client/cardapio' component={MenuClient}/>\r\n  </Switch>\r\n)\r\n\r\nexport default RoutesApp;","import React, { useState, useEffect} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport RoutesClient from './routesClient';\r\nimport { getInfo } from '../../store/clientReducer';\r\nimport history from '../../services/history';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header:{\r\n    background: '#FFB701',\r\n    textAlign: 'center',\r\n  },\r\n  img:{\r\n    padding: '10px'\r\n  },\r\n  menu: {\r\n    height: '25px'\r\n  },\r\n  links:{\r\n    margin: 'auto'\r\n  },\r\n  labelLink:{\r\n    padding: '10px',\r\n  },\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  list: {\r\n    width: 200,\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  content: {\r\n    width: '275px',\r\n    margin: 'auto',\r\n    paddingTop: '30px'\r\n  },\r\n  offset: theme.mixins.toolbar,\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#FED200',\r\n    },\r\n    secondary:{\r\n      main: '#FFB701'\r\n    }\r\n  },\r\n});\r\n\r\nconst Client = (props) => {\r\n  const { infos } = props;\r\n  const [ idUrl ] = useState(window.location.href.split('/?')[1]);\r\n  const [state, setState] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if(idUrl){\r\n      props.getInfo(idUrl);\r\n    }else{\r\n      history.push('/');\r\n    }\r\n  },[idUrl]);\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    setState(open);\r\n  };\r\n\r\n  const list = (\r\n    <div className={classes.list} onClick={toggleDrawer(false)} role=\"presentation\" onKeyDown={toggleDrawer(false)}>\r\n      <List>\r\n        <ListItem button component={Link} to={`/client/?${infos._id}`}>\r\n          <ListItemIcon><InboxIcon/></ListItemIcon>\r\n          <ListItemText primary='Início'/>\r\n        </ListItem>\r\n        <Divider/>\r\n        <ListItem button component={Link} to={`/client/sobrenos/?${infos._id}`}>\r\n          <ListItemIcon><InboxIcon/></ListItemIcon>\r\n          <ListItemText primary='Sobre nós'/>\r\n        </ListItem>\r\n        <Divider/>\r\n        <ListItem button component={Link} to='/'>\r\n          <ListItemIcon><InboxIcon/></ListItemIcon>\r\n          <ListItemText primary='Sobre o SuggestInBox' />\r\n        </ListItem>\r\n        <Divider/>\r\n      </List>\r\n    </div>\r\n  )\r\n  return(\r\n    <MuiThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <AppBar position=\"static\">\r\n        <Toolbar color=\"primary\">\r\n          <IconButton onClick={toggleDrawer(true)} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Drawer open={state} onClose={toggleDrawer(false)}>\r\n            {list}\r\n          </Drawer>\r\n          <Typography variant=\"button\" className={classes.links}>\r\n            <Button component={Link} to={`/client/?${infos._id}`}>SuggestInBox</Button>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.content}>\r\n        <RoutesClient/>\r\n      </div>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nClient.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({getInfo}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Client);","const INITIAL_STATE = {\r\n  message: '',\r\n  showMessage: false\r\n}\r\nexport const ACTIONS = {\r\n  SHOW_MESSAGE: 'SHOW_MESSAGE',\r\n  HIDE_MESSAGE: 'HIDE_MESSAGE'\r\n}\r\nexport const messageReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.SHOW_MESSAGE:\r\n      return {...state, message: action.message, showMessage: true}\r\n    case ACTIONS.HIDE_MESSAGE:\r\n      return {...state, message: '', showMessage: false}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//MOSTAR MENSAGEM CAPTURADA DAS REQUESTS\r\nexport const showMessage = (message) => {\r\n  return{\r\n    type: ACTIONS.SHOW_MESSAGE,\r\n    message: message\r\n  }\r\n}\r\n//FECHAR MENSAGENS\r\nexport const hideMessage = () => {\r\n  return {\r\n    type: ACTIONS.HIDE_MESSAGE\r\n  }\r\n}","import api from '../services/api';\r\nimport history from '../services/history';\r\nimport { setInfosLocalStorage, logoutUser } from '../services/auth';\r\nimport { showMessage } from './messageReducer';\r\n\r\nconst ACTIONS = {\r\n  AUTH: 'AUTH',\r\n  FOGOT: 'FOGOT'\r\n}\r\nconst INITIAL_STATE = {\r\n  infos:[],\r\n  email:[],\r\n  user:[]\r\n}\r\nexport const authReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.AUTH:\r\n      return {...state, infos: action.infos}\r\n    case ACTIONS.FOGOT:\r\n      return {...state, email: action.email}\r\n    case ACTIONS.RESET:\r\n      return {...state, user: action.user}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//AUTENTICAÇÃO\r\nexport const auth = (login) => {\r\n  return dispatch => {\r\n    api.post('/auth', login)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.AUTH,\r\n        infos: Response.data,\r\n      },\r\n        setInfosLocalStorage(Response.data.token, Response.data.user),\r\n        history.push(`/user?page=1&limit=25/?${Response.data.user._id}`)\r\n      );\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Email ou senha inválidos!\")\r\n      )}\r\n    )\r\n  }\r\n}\r\n//ESQUECI SENHA\r\nexport const fogot = (email) => {\r\n  return dispatch => {\r\n    api.post('/auth/fogot', email)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.FOGOT,\r\n        email: Response.data,\r\n      },dispatch(\r\n          showMessage(\"Email enviado com sucesso!\")\r\n        ), \r\n        history.push('/login'));\r\n    })\r\n    .catch(erro => {\r\n      dispatch(\r\n        showMessage(\"Este email não está atribuido a nenhum usuário!\")\r\n      )}\r\n    );\r\n  }\r\n}\r\n//RESET SENHA\r\nexport const reset = (user) => {\r\n  return dispatch => {\r\n    api.post('/auth/reset_password', user)\r\n    .then(Response => {\r\n      dispatch({\r\n          type: ACTIONS.FOGOT,\r\n          user: Response.data,\r\n      });\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Serviço indisponível, tente mais tarde!\")\r\n      )}\r\n    );\r\n  }\r\n}\r\n//LOGOUT\r\nexport const logout = () =>{\r\n  logoutUser();\r\n  history.push(`/login`);\r\n}","import api from '../services/api';\r\nimport history from '../services/history';\r\n\r\nconst ACTIONS = {\r\n  //SUGGEST\r\n  LIST_SUGGESTS: 'LISTSUGGESTS',\r\n  FAVORITE: 'FAVORITE',\r\n  TOFILE: 'TOFILE',\r\n  //COMPANY\r\n  LIST_COMPANIES: 'LISTCOMPANIES',\r\n  BY_ID_COMPANY: 'BYIDCOMPANY',\r\n  UPDATE_COMPANY: 'UPDATECOMPANY',\r\n  CLEAN_COMPANY: 'CLEANCOMPANY',\r\n  ADD_COMPANY: 'ADDCOMPANY',\r\n  //USER\r\n  BY_ID_USER: 'BYIDUSER',\r\n  UPDATE_USER: 'UPDATEUSER',\r\n}\r\nconst INITIAL_STATE = {\r\n  //SUGGEST\r\n  suggests: [],\r\n  suggest: [],\r\n  suggestById: [],\r\n  infosSuggests: [],\r\n  //COMPANY\r\n  companies: [],\r\n  company: [],\r\n  infosCompanies: [],\r\n  companyById: [],\r\n  loadingCompany: false,\r\n  //USER\r\n  userById: [],\r\n  loadingUser: false,\r\n}\r\nexport const admReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    //*********************SUGGESTS*********************\r\n    case ACTIONS.LIST_SUGGESTS:\r\n      return {...state, suggests: action.suggests, infosSuggests: action.infosSuggests}\r\n    case ACTIONS.FAVORITE:\r\n      const listUp = [...state.suggests]\r\n      listUp.forEach(suggest => {\r\n        if(suggest._id === action._id){\r\n          suggest.favorite = true;\r\n        }\r\n      })\r\n      return {...state, suggests: listUp}\r\n    case ACTIONS.TOFILE:\r\n      const listUpOut = [...state.suggests]\r\n      listUpOut.forEach(suggest => {\r\n        if(suggest._id === action._id){\r\n          suggest.outlier = true;\r\n        }\r\n      })\r\n      return {...state, suggests: listUpOut}\r\n    //*********************COMPANIES*********************\r\n    case ACTIONS.LIST_COMPANIES:\r\n      return {...state, companies: action.companies, infosCompanies: action.infosCompanies}\r\n    case ACTIONS.ADD_COMPANY:\r\n      return {...state, company: action.company}\r\n    case ACTIONS.BY_ID_COMPANY:\r\n      return {...state, companyById: action.companyById, loadingCompany: action.loadingCompany}\r\n    case ACTIONS.UPDATE_COMPANY:\r\n      return state;\r\n    case ACTIONS.CLEAN_COMPANY:\r\n      return {...state, companyById: []}\r\n    //*********************COMPANIES*********************\r\n    case ACTIONS.BY_ID_USER:\r\n      return {...state, userById: action.userById, loadingUser: action.loadingUser}\r\n    case ACTIONS.UPDATE_USER:\r\n      return state;\r\n    //DEFAULT\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//*******************************************SUGGESTS*********************************************\r\n//LISTAR SUGGESTS\r\nexport const listSuggest = (page, nOfItems) => {\r\n  return dispatch => {\r\n    api.get(`/adm/suggest?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_SUGGESTS,\r\n        suggests: docs,\r\n        infosSuggests: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//FAVORITAR SUGGEST\r\nexport const favorite = (suggest) => {\r\n  return dispatch => {\r\n    api.put(`/adm/suggest/${suggest._id}`, suggest )\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.FAVORITE,\r\n        id: suggest._id\r\n      })\r\n    })\r\n  }\r\n}\r\n//ARQUIVAR SUGGEST\r\nexport const outlier = (suggest) => {\r\n  return dispatch => {\r\n    api.put(`/adm/suggest/${suggest._id}`, suggest )\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.TOFILE,\r\n        id: suggest._id\r\n      })\r\n    })\r\n  }\r\n}\r\n//*******************************************COMPANIES*********************************************\r\n//LISTAR COMPANIAS\r\nexport const listCompanies = (page, nOfItems) => {\r\n  return dispatch => {\r\n    api.get(`/adm/company?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_COMPANIES,\r\n        companies: docs,\r\n        infosCompanies: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//ADICIONAR COMPANY\r\nexport const addCompany = (company, id) => {\r\n  return dispatch => {\r\n    api.post('/adm/company', company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ADD_COMPANY,\r\n        company: Response.data,\r\n      });\r\n    }, history.push(`/user`))\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//GET BY ID COMPANY\r\nexport const getCompanyById = (id) => {\r\n  return dispatch => {\r\n    api.get(`/adm/company/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_COMPANY,\r\n        companyById: Response.data,\r\n        loadingCompany: true,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n//UPDATE COMPANY\r\nexport const updateCompany = (company, id) => {\r\n  return dispatch => {\r\n    api.put(`/adm/company/${id}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_COMPANY,\r\n        //company: Response.data\r\n      })\r\n    }, history.push('/user'))\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n//LIMPAR CAMPOS COMPANY\r\nexport const cleanCompany = () => {\r\n  return {\r\n    type: ACTIONS.CLEAN_COMPANY,\r\n  }\r\n}\r\n//*******************************************USER*********************************************\r\n//GET BY ID USER\r\nexport const getUserById = (id) => {\r\n  return dispatch => {\r\n    api.get(`/adm/user/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_USER,\r\n        userById: Response.data,\r\n        loadingUser: true,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n//UPDATE USER\r\nexport const updateUser = (user, id) => {\r\n  return dispatch => {\r\n    api.put(`/adm/user/${id}`, user)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_USER,\r\n        //user: Response.data\r\n      })\r\n    }, history.push('/user'))\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { listCompanies } from '../../../store/admReducer' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  item: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  center: {\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    margin: '20px'\r\n  },\r\n  button: {\r\n    margin: '15px'\r\n  }\r\n}));\r\n\r\nconst Companies = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { companies, infosCompanies } = props;\r\n  const nOfPages = infosCompanies.pages;\r\n  const [page, setPage] = useState(1);\r\n  const [nOfItems, setNoOfItems] = useState(10);\r\n\r\n  useEffect(() => {\r\n    props.listCompanies(page, nOfItems);\r\n  },[page, nOfItems]);\r\n\r\n  const handleChange=(event, value)=>{\r\n    setPage(value);\r\n  }\r\n  const handleNofItems=(event)=>{\r\n    setNoOfItems(event.target.value);\r\n    setPage(1);\r\n  }\r\n\r\n  const mapCompanies = (\r\n    <React.Fragment>\r\n      {companies.map( company => {\r\n          return(\r\n            <Grid key={company._id} item md={4} sm={6} xs={12}>\r\n              <div className={classes.item}>  \r\n                <Card>\r\n                  <CardActionArea component={Link} to={`/suggest?page=${page}&limit=${nOfItems}`}>\r\n                    <CardContent>\r\n                      <Typography noWrap variant=\"h5\" component=\"h2\">\r\n                        {company.name}\r\n                      </Typography>\r\n                      <Typography noWrap variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {company.address.city} - {company.address.state}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                  <CardActions className={classes.center}>\r\n                    <Button component={Link} to={`/user/setup-company/?${company._id}`} variant=\"contained\" color=\"primary\">\r\n                      Configurações\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </div>\r\n            </Grid>\r\n          )})\r\n        }\r\n    </React.Fragment>\r\n  )\r\n\r\n  return(\r\n    <div className={classes.root}>\r\n      <Typography className={classes.center} variant=\"h5\" component=\"h2\">Estabelecimentos</Typography>\r\n      <Button className={classes.button} component={Link} to='/user/setup-company' variant=\"contained\" color=\"primary\">\r\n        Adicionar Estabelecimento\r\n      </Button>\r\n      <Grid container item xs={12} spacing={3}>\r\n        {mapCompanies}\r\n      </Grid>\r\n      <Grid className={classes.center} container item xs={12} spacing={3}>\r\n        <Box component=\"span\">\r\n          <Pagination\r\n            count={nOfPages}\r\n            page={page}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nCompanies.prototypes = {\r\n  companies: PropTypes.array.isRequired,\r\n  infosCompanies: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companies: state.adm.companies,\r\n  infosCompanies: state.adm.infosCompanies,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({listCompanies}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Companies);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider, Button, TextField, Card, Typography, Grid} from '@material-ui/core';\r\nimport { getUserById, updateUser } from '../../../store/admReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 8\r\n  },\r\n  button: {\r\n    float: 'right',\r\n    margin: 8,\r\n  },\r\n  media: {\r\n    margin: 'auto',\r\n    width: 140,\r\n    height: 140,\r\n  },\r\n  card: {\r\n    marginBottom: 10,\r\n  },\r\n  center: {\r\n    margin: 'auto',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  grid: {\r\n    justifyContent: 'center',\r\n    padding: 8\r\n  }\r\n}));\r\n\r\nconst SetupUser = (props) => {\r\n  const classes = useStyles();\r\n  const { userById } = props;\r\n\r\n  const [idUrl] = useState(window.location.href.split('/?')[1]);\r\n  const defaultFormShape = {\r\n    name: '',\r\n    email: '',\r\n    cpf: '',\r\n    phone: '',\r\n    address: {\r\n      state: '',\r\n      city: '',\r\n      street: '',\r\n      number: '',\r\n      type: '',\r\n      district: '',\r\n      zip: '',\r\n      obs: ''\r\n    },\r\n  };\r\n\r\n  useEffect(()=>{\r\n    props.getUserById(idUrl);\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <Formik \r\n        initialValues= {userById._id? userById : defaultFormShape}\r\n        enableReinitialize\r\n        validationSchema={Yup.object({\r\n          name: Yup.string()\r\n            .required('Nome obrigatório!'),\r\n          email: Yup.string()\r\n            .required('Email obrigatório!'),\r\n          cpf: Yup.string()\r\n            .required('Cpf obrigatório!'),\r\n          phone: Yup.string()\r\n            .required('Telefone obrigatório!'),\r\n          address: Yup.object({\r\n            zip: Yup.string()\r\n              .required('Cep obrigatorio!'),\r\n            street: Yup.string()\r\n              .required('Rua obrigatorio!'),\r\n            district: Yup.string()\r\n              .required('Bairro obrigatorio!'),\r\n            city: Yup.string()\r\n              .required('Cidade obrigatorio!'),\r\n            state: Yup.string()\r\n              .required('Estado obrigatorio!'),\r\n            number: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n          }),\r\n        })}\r\n\r\n        onSubmit={(values) => {\r\n          const { name, email, phone, cpf } = values;\r\n          const { state, city, street, number, type, district, zip, obs } = values.address;\r\n          const address = {state, city, street, number, type, district, zip, obs};\r\n          const userUpdate = { name, email, cpf, phone, address };\r\n          props.updateCompany(userUpdate, userById._id);\r\n        }}>\r\n        {formik => (\r\n          <Card >\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <p style={{margin: 10}}>Dados</p>\r\n              <Grid container>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Nome:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"name\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('name')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.name && formik.errors.name ? (\r\n                        <Typography className={classes.error}>{formik.errors.name}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"CPF:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"cpf\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('cpf')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.cpf && formik.errors.cpf ? (\r\n                        <Typography className={classes.error}>{formik.errors.cpf}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Email:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"email\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('email')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.email && formik.errors.email ? (\r\n                        <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Telefone:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"phone\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('phone')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.phone && formik.errors.phone ? (\r\n                        <Typography className={classes.error}>{formik.errors.phone}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{margin: 10}}>Endereço</p>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cep:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.zip\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.zip')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.zip}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Rua:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.street\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.street')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.street}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Bairro:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.district\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.district')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.district}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cidade:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.city\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.city')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.city}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Estado:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.state\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.state')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.state}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Número:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.number\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.number')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.number}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Divider/>\r\n                  <Button type=\"submit\" className={classes.button} variant=\"contained\" color=\"primary\">\r\n                    Atualizar\r\n                  </Button>\r\n                  <Button className={classes.button} component={Link} to={`/user/?${userById._id}`} variant=\"outlined\" color=\"primary\">\r\n                    Cancelar\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nSetupUser.prototypes = {\r\n  userById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userById: state.adm.userById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ getUserById, updateUser }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupUser);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider, Button, TextField, Card, Typography, Grid} from '@material-ui/core';\r\nimport { addCompany, getCompanyById, updateCompany, cleanCompany } from '../../../store/admReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 8\r\n  },\r\n  button: {\r\n    float: 'right',\r\n    margin: 8,\r\n  },\r\n  media: {\r\n    margin: 'auto',\r\n    width: 140,\r\n    height: 140,\r\n  },\r\n  card: {\r\n    marginBottom: 10,\r\n  },\r\n  center: {\r\n    margin: 'auto',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  grid: {\r\n    justifyContent: 'center',\r\n    padding: 8\r\n  }\r\n}));\r\n\r\nconst SetupCompany = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n\r\n  const [idUrl] = useState(window.location.href.split('/?')[1]);\r\n  const defaultFormShape = {\r\n    name: '',\r\n    cnpj: '',\r\n    slogan: '',\r\n    history: '',\r\n    localization: '',\r\n    email: '',\r\n    phone: '',\r\n    address: {\r\n      state: '',\r\n      city: '',\r\n      street: '',\r\n      number: '',\r\n      type: '',\r\n      district: '',\r\n      zip: '',\r\n      obs: ''\r\n    },\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(idUrl){\r\n      props.getCompanyById(idUrl);\r\n    }else{\r\n      props.cleanCompany();\r\n    }\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <Formik \r\n        initialValues= {companyById._id? companyById : defaultFormShape}\r\n        enableReinitialize\r\n        validationSchema={Yup.object({\r\n          name: Yup.string()\r\n            .required('Nome obrigatório!'),\r\n          cnpj: Yup.string()\r\n            .required('Cnpj obrigatório!'),\r\n          slogan: Yup.string()\r\n            .required('Slogan obrigatório'),\r\n          history: Yup.string()\r\n            .required('História obrigatória'),\r\n          localization: Yup.string()\r\n            .required('Localização obrigatória'),\r\n          email: Yup.string()\r\n            .required('Email obrigatório!'),\r\n          phone: Yup.string()\r\n            .required('Telefone obrigatório!'),\r\n          address: Yup.object({\r\n            zip: Yup.string()\r\n              .required('Cep obrigatorio!'),\r\n            street: Yup.string()\r\n              .required('Rua obrigatorio!'),\r\n            district: Yup.string()\r\n              .required('Bairro obrigatorio!'),\r\n            city: Yup.string()\r\n              .required('Cidade obrigatorio!'),\r\n            state: Yup.string()\r\n              .required('Estado obrigatorio!'),\r\n            number: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n          }),\r\n        })}\r\n\r\n        onSubmit={(values) => {\r\n          if(companyById._id){\r\n            const { name, slogan, history, localization, email, cnpj, phone } = values;\r\n            const { state, city, street, number, type, district, zip, obs } = values.address;\r\n            const address = {state, city, street, number, type, district, zip, obs};\r\n            const companyUpdate = { name, slogan, history, localization, email, cnpj, phone, address };\r\n            props.updateCompany(companyUpdate, companyById._id);\r\n          }else{\r\n            props.addCompany(values);\r\n          }\r\n        }}>\r\n        {formik => (\r\n          <Card >\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <p style={{margin: 10}}>Dados</p>\r\n              <Grid container>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Nome:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"name\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('name')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.name && formik.errors.name ? (\r\n                        <Typography className={classes.error}>{formik.errors.name}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Slogan:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"slogan\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('slogan')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.slogan && formik.errors.slogan ? (\r\n                        <Typography className={classes.error}>{formik.errors.slogan}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"História:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"history\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('history')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.history && formik.errors.history ? (\r\n                        <Typography className={classes.error}>{formik.errors.history}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Localização:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"localization\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('localization')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.localization && formik.errors.localization ? (\r\n                        <Typography className={classes.error}>{formik.errors.localization}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Email:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"email\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('email')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.email && formik.errors.email ? (\r\n                        <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Telefone:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"phone\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('phone')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.phone && formik.errors.phone ? (\r\n                        <Typography className={classes.error}>{formik.errors.phone}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"CNPJ:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"cnpj\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('cnpj')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.cnpj && formik.errors.cnpj ? (\r\n                        <Typography className={classes.error}>{formik.errors.cnpj}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{margin: 10}}>Endereço</p>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cep:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.zip\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.zip')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.zip}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Rua:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.street\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.street')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.street}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Bairro:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.district\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.district')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.district}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cidade:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.city\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.city')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.city}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Estado:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.state\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.state')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.state}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Número:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.number\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.number')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.number}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Divider/>\r\n                  <Button type=\"submit\" className={classes.button} variant=\"contained\" color=\"primary\">\r\n                    {companyById._id? 'Atualizar': 'Salvar'}\r\n                  </Button>\r\n                  <Button className={classes.button} component={Link} to={'/user'} variant=\"outlined\" color=\"primary\">\r\n                    Cancelar\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nSetupCompany.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.adm.companyById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ addCompany, getCompanyById, updateCompany, cleanCompany }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupCompany);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Companies from './Companies';\r\nimport SetupUser from './SetupUser';\r\nimport SetupCompany from './SetupCompany';\r\n\r\nconst RoutesUser = () => {\r\n  return(\r\n    <Switch>\r\n      <Route exact path='/user' component={Companies}/>\r\n      <Route exact path='/user/setup' component={SetupUser}/>\r\n      <Route exact path='/user/setup-company' component={SetupCompany}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default RoutesUser;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../store/authReducer';\r\nimport { getUserById } from '../../store/admReducer';\r\nimport PropTypes from 'prop-types';\r\nimport RoutesUser from './routesUser';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textDecoration: 'none',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  profile: {\r\n    paddingRight: 17\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n}));\r\n\r\nconst User = (props) => {\r\n  const classes = useStyles();\r\n  const [ idUrl ] = useState(window.location.href.split('/?')[1]);\r\n  const { userById } = props;\r\n\r\n  useEffect(() => {\r\n    props.getUserById(idUrl);\r\n  },[]);\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\">\r\n          <Toolbar className={classes.toolbar}>\r\n            <Typography component={Link} to={`?${userById._id}`} variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              SuggestInBox\r\n            </Typography>\r\n            <div className={classes.profile}>Randel</div>\r\n            <IconButton component={Link} to={`/user/setup/?${userById._id}`} color=\"inherit\">\r\n              <SettingsIcon/>\r\n            </IconButton>\r\n            <IconButton onClick={props.logout} color=\"inherit\">\r\n              <ExitToAppIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid>\r\n              <RoutesUser />\r\n            </Grid>\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUser.prototypes = {\r\n  userById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userById: state.adm.userById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({logout, getUserById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(User);","import React, { useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { listSuggest, favorite, outlier } from '../../../../store/admReducer';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Box from '@material-ui/core/Box';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport { IconButton } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    secondary:{\r\n      main: '#FFB701'\r\n    }\r\n  },\r\n});\r\n\r\nconst Suggest = (props) => {\r\n  const {suggests, infosSuggests} = props;\r\n  const nOfPages = infosSuggests.pages;\r\n  const [page, setPage] = useState(1);\r\n  const [nOfItems, setNoOfItems] = useState(10);\r\n\r\n  useEffect(() => {\r\n    props.listSuggest(page, nOfItems);\r\n  },[page, nOfItems]);\r\n\r\n  const handleChange=(event, value)=>{\r\n    setPage(value);\r\n  }\r\n  const handleNofItems=(event)=>{\r\n    setNoOfItems(event.target.value);\r\n    setPage(1);\r\n  }\r\n  const favoriteUpdate = (suggest) => {\r\n    if(suggest.favorite){\r\n      suggest.favorite = false;\r\n      return props.favorite(suggest)\r\n    }else{\r\n      suggest.favorite = true;\r\n      return props.favorite(suggest)\r\n    }\r\n  }\r\n  const outlierUpdate = (suggest) => {\r\n    if(suggest.outlier){\r\n      suggest.outlier = false;\r\n      return props.outlier(suggest)\r\n    }else{\r\n      suggest.outlier = true;\r\n      return props.outlier(suggest)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Suggestões</Typography>\r\n       <div>\r\n        <FormControl>\r\n          <FormHelperText>Número por página:</FormHelperText>\r\n          <Select\r\n            value={nOfItems}\r\n            onChange={handleNofItems}\r\n            inputProps={{ 'aria-label': 'Without label' }}>\r\n            <MenuItem value={10}>10</MenuItem>\r\n            <MenuItem value={20}>20</MenuItem>\r\n            <MenuItem value={30}>30</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <Paper>\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align='center'>Data</TableCell>\r\n                <TableCell align='center'>Nome</TableCell>\r\n                <TableCell align='center'>Telefone</TableCell>\r\n                <TableCell align='center'>Avaliação</TableCell>\r\n                <TableCell align='center'>Recomenda</TableCell>\r\n                <TableCell align='center'>Opinião</TableCell>\r\n                <TableCell align='center'/>\r\n                <TableCell align='center'/>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <MuiThemeProvider theme={theme}>\r\n                { suggests.map( suggest => {\r\n                  return (\r\n                    <TableRow hover key={suggest._id} role=\"checkbox\" tabIndex={-1}>\r\n                      <TableCell align='center'>{suggest.createdAt}</TableCell>\r\n                      <TableCell align='center'>{suggest.name}</TableCell>\r\n                      <TableCell align='center'>{suggest.phone}</TableCell>\r\n                      <TableCell align='center'>{suggest.stars}</TableCell>\r\n                      <TableCell align='center'>{suggest.recommends? (<CheckIcon/>) :(<CloseIcon/>)}</TableCell>\r\n                      <TableCell align='center'>{suggest.opinion}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <IconButton onClick={() => favoriteUpdate(suggest)}>\r\n                          {suggest.favorite? (<StarIcon color='secondary'/>):(<StarBorderIcon/>)}\r\n                        </IconButton>\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <IconButton onClick={() => outlierUpdate(suggest)}>\r\n                          {suggest.outlier? (<DeleteOutlineIcon color=\"disabled\"/>):(<DeleteOutlineIcon/>)}\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )\r\n                })}\r\n              </MuiThemeProvider>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Box component=\"span\">\r\n          <Pagination\r\n            count={nOfPages}\r\n            page={page}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nSuggest.prototypes = {\r\n  suggest: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  suggests: state.adm.suggests,\r\n  infosSuggests: state.adm.infosSuggests,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({listSuggest, favorite, outlier}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Suggest);","import React from 'react';\r\n\r\nconst Promo = () => {\r\n  return(\r\n    <div>\r\n      PROMOÇÕES\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Promo;","import React from 'react';\r\n\r\nconst Menu = () => {\r\n  return(\r\n    <div>\r\n      Cardapio\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\n\r\nconst Finances = () => {\r\n  return(\r\n    <div>\r\n      FINANÇAS\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Finances;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Suggest from './Suggests';\r\nimport Promo from './Promo';\r\nimport Menu from './Menu';\r\nimport Finances from './Finances';\r\n\r\nconst RoutesUser = () => {\r\n  return(\r\n    <Switch>\r\n      <Route exact path='/suggest' component={Suggest}/>\r\n      <Route exact path='/suggest/promo' component={Promo}/>\r\n      <Route exact path='/suggest/cardapio' component={Menu}/>\r\n      <Route exact path='/suggest/finances' component={Finances}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default RoutesUser;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../../store/authReducer';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\n\r\nimport RoutesUser from './routesUser';\r\n\r\nconst drawerWidth = 210;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textDecoration: 'none',\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  icon: {\r\n    textDecoration: 'none',\r\n    color: 'white',\r\n  },\r\n  profile: {\r\n    paddingRight: 17\r\n  },\r\n  avatar: {\r\n    backgroundColor: '#f50057',\r\n    textAlign: 'center',\r\n  },\r\n  card:{\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nconst MainSuggest = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component={Link} to='/suggest' variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                SuggestInBox\r\n            </Typography>\r\n            <div component={Link} to='/user' className={classes.profile}>Randel Freitas</div>\r\n            <IconButton component={Link} to='/suggest/setup' color=\"inherit\">\r\n              <SettingsIcon/>\r\n            </IconButton>\r\n            <IconButton onClick={props.logout} color=\"inherit\">\r\n              <ExitToAppIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer variant=\"permanent\" classes={{paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)}} open={open}>\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            <div>      \r\n              <Card className={classes.card}>\r\n                <div>\r\n                  <IconButton component={Link} to='/suggest/setup' color=\"inherit\">\r\n                    <Avatar className={classes.avatar}>S</Avatar>\r\n                  </IconButton>\r\n                  <Typography hidden={!open}>Bar Skinão</Typography>\r\n                </div>\r\n                <CardContent hidden={!open}>\r\n                  <Typography variant=\"h3\" color=\"textSecondary\" component=\"p\">\r\n                    4,5\r\n                  </Typography>\r\n                  <Rating name=\"read-only\" precision={0.1} value={4.5} readOnly />\r\n                </CardContent>\r\n              </Card>\r\n              <ListItem button component={Link} to='/suggest'>\r\n                <ListItemIcon>\r\n                  <AssessmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Sugestões\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to='/suggest/promo'>\r\n                <ListItemIcon>\r\n                  <EmojiEmotionsIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Promoções\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to='/suggest/cardapio'>\r\n                <ListItemIcon>\r\n                  <MenuBookIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Cardapio\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to='/suggest/finances'>\r\n                <ListItemIcon>\r\n                  <MonetizationOnIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Financeiro\" />\r\n              </ListItem>\r\n            </div>\r\n          </List>\r\n        <Divider />\r\n        </Drawer>\r\n\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid>\r\n              <RoutesUser />\r\n            </Grid>\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMainSuggest.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({logout}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainSuggest);","import React from 'react';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\n\r\nconst RoutesAppSuggest = () => {\r\n  const match = useRouteMatch();\r\n\r\n  return(\r\n    <Switch>\r\n      <Route exact path={`${match.url}`} component={()=><h1>SUGGEST</h1>}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default RoutesAppSuggest;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport RoutesAdm from './routesAdm';\r\n\r\nconst Adm = () => {\r\n  return(\r\n    <div>\r\n      <h1><img alt='logo' src='/assets/logo_palpitebox.png'/></h1>\r\n      <header>\r\n        <nav>\r\n          <ul>\r\n            <li><Link to='/'>Início</Link></li>\r\n            <li>|</li>\r\n            <li><Link to='/client/sobrenos'>Sobre nós</Link></li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n      <div>\r\n        <RoutesAdm/>\r\n      </div>\r\n      <div>\r\n        <footer>\r\n          <p>Colocar Suggest na sua empresa, <Link to='/'>clique aqui!</Link></p>\r\n          <p>Suggest In Box - Todos os direitos reservados.</p>\r\n          <p>© 2020 - Copyright</p>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Adm;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { auth } from '../../store/authReducer';\r\nimport { showMessage, hideMessage } from '../../store/messageReducer';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  link: {\r\n    fontSize: 15 \r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const [disableSubmit, setDisableSubmit] = useState(false);\r\n\r\n  const formik = useFormik ({\r\n    initialValues: { email: '', password: ''},\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .email('Email invalido')\r\n        .required('Email obrigatório!'),\r\n      password: Yup.string()\r\n        .required('Senha obrigatória!'),\r\n      }),\r\n      onSubmit: values => {\r\n        props.auth(values);\r\n      },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n        <Typography variant=\"h6\" noWrap>\r\n          SuggestInBox\r\n        </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Login\r\n          </Typography> \r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"email\" \r\n              name=\"email\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Email\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.email}\r\n            />\r\n            <div>\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"password\" \r\n              name=\"password\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Senha\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.password} \r\n            />\r\n            <div>\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <Typography className={classes.error}>{formik.errors.password}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <ReCAPTCHA sitekey=\"6LcdP8cZAAAAAMLbn_f2B0EDFSdtvkPQaEO1hx30\" onChange={() => setDisableSubmit(false)} />\r\n            <Button type=\"submit\" disabled={disableSubmit} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} onBlur={formik.handleBlur}>\r\n              Entrar\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link className={classes.link} to=\"/fogot-password\" variant=\"body2\">\r\n                  Esqueci minha senha\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n          \r\n          <Dialog open={props.openDialog} onClose={props.hideMessage}>\r\n            <DialogTitle>\r\n              Atenção\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              {props.message}\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={props.hideMessage}>Fechar</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n          \r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  openDialog: state.message.showMessage,\r\n  message: state.message.message\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({auth, showMessage, hideMessage}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { useState} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { showMessage, hideMessage } from '../../store/messageReducer';\r\n\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { fogot } from '../../store/authReducer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  link: {\r\n    fontSize: 15 \r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Fogot = (props) => {\r\n  const classes = useStyles();\r\n  const [disableSubmit, setDisableSubmit] = useState(false);\r\n  const [progress, setProgress] = useState(true);\r\n\r\n  const formik = useFormik ({\r\n    initialValues: { email: ''},\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .email('Email invalido')\r\n        .required('Email obrigatório!'),\r\n      }),\r\n      onSubmit: values => {\r\n        setProgress(false);\r\n        props.fogot(values);\r\n      },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.openDialog} onClick={()=> setProgress(true)} onClose={props.hideMessage}>\r\n        <DialogTitle>\r\n          Atenção\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {props.message}\r\n        </DialogContent>\r\n        <DialogActions onClick={()=> setProgress(true)}>\r\n          <Button onClick={props.hideMessage}>Fechar</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n        <Typography variant=\"h6\" noWrap>\r\n          SuggestInBox\r\n        </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Recuperar senha\r\n          </Typography> \r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"email\" \r\n              name=\"email\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Email\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.email}\r\n            />\r\n            <div>\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <ReCAPTCHA sitekey=\"6LcdP8cZAAAAAMLbn_f2B0EDFSdtvkPQaEO1hx30\" onChange={() => setDisableSubmit(false)} />\r\n            <Button type=\"submit\" disabled={disableSubmit} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} onBlur={formik.handleBlur}>\r\n              Enviar link para email\r\n            </Button>\r\n          </form>\r\n          <div hidden={progress}>\r\n            <CircularProgress/>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  openDialog: state.message.showMessage,\r\n  message: state.message.message\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({fogot, showMessage, hideMessage}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Fogot);","import React, { useState} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport history from '../../services/history';\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { reset } from '../../store/authReducer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  link: {\r\n    fontSize: 15 \r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Reset = (props) => {\r\n  const classes = useStyles();\r\n  const [disableSubmit, setDisableSubmit] = useState(true);\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const [ token ] = useState(window.location.href.split('/?$')[1]);\r\n  const [ email ] = useState(window.location.href.split('/?$')[2]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    history.push('/login');\r\n  };\r\n\r\n  const formik = useFormik ({\r\n    initialValues: { password: ''},\r\n    validationSchema: Yup.object({\r\n      password: Yup.string()\r\n        .required('Senha não confere')\r\n      }),\r\n      onSubmit: values => {\r\n        const user = {\r\n          password: values.password,\r\n          token: token,\r\n          email: email\r\n        }\r\n        props.reset(user);\r\n      },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              Senha recuperada com sucesso!\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n              Ok\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n        <Typography variant=\"h6\" noWrap>\r\n          SuggestInBox\r\n        </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Recuperar senha\r\n          </Typography> \r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"password\" \r\n              name=\"password\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Nova senha\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.password} \r\n            />\r\n            <div>\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <Typography className={classes.error}>{formik.errors.password}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <ReCAPTCHA sitekey=\"6LcdP8cZAAAAAMLbn_f2B0EDFSdtvkPQaEO1hx30\" onChange={() => setDisableSubmit(false)} />\r\n            <Button type=\"submit\" onClick={handleClickOpen} disabled={disableSubmit} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} onBlur={formik.handleBlur}>\r\n              Salvar\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({reset}, dispatch);\r\n\r\nexport default connect(null, mapDispatchToProps)(Reset);","import React from 'react';\r\nimport { Route, Switch, Redirect, Router } from 'react-router-dom';\r\n\r\nimport Site from './Site';\r\nimport Client from './pages/Client';\r\nimport User from './pages/User';\r\nimport Suggest from './pages/User/Suggest';\r\nimport Adm from './pages/Adm';\r\nimport { Login, Fogot, Reset } from './components';\r\n\r\nimport { isAuthenticated } from './services/auth';\r\nimport history from './services/history';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      isAuthenticated() ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\r\n      )\r\n    }\r\n  />\r\n);\r\n \r\nconst Routes = () => (\r\n  <Router history={history}>\r\n    <Switch>\r\n      <Route exact path='/' component={Site}/>\r\n      <Route exact path='/login' component={Login}/>\r\n      <Route exact path='/fogot-password' component={Fogot}/>\r\n      <Route path='/reset-password' component={Reset}/>\r\n      <Route path='/client' component={Client}/>\r\n      <PrivateRoute path='/user' component={User}/>\r\n      <PrivateRoute path='/suggest' component={Suggest}/>\r\n      <PrivateRoute path='/adm' component={Adm}/>\r\n      <Route exact path=\"/not-found\" component={()=><h1>Página não encontrada 404</h1>}/>\r\n      <Redirect to=\"/not-found\" />\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nexport default Routes;","import React from 'react';\r\nimport Routes from './routes';\r\n\r\nconst App = () => (\r\n  <Routes/> \r\n)\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { clientReducer } from './clientReducer';\r\nimport { authReducer } from './authReducer';\r\nimport { admReducer } from './admReducer';\r\nimport { messageReducer } from './messageReducer';\r\n\r\nconst mainReducer = combineReducers({\r\n  adm: admReducer,\r\n  auth: authReducer,\r\n  message: messageReducer,\r\n  client: clientReducer,\r\n});\r\n\r\nexport const store = applyMiddleware(thunk)(createStore)(mainReducer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"MenuClient_wrap__1XHwg\",\"section\":\"MenuClient_section__yfvwT\",\"grid\":\"MenuClient_grid__EiHyG\",\"name\":\"MenuClient_name__NFQDW\",\"description\":\"MenuClient_description__3m5uL\",\"value\":\"MenuClient_value__1uJb-\",\"ten\":\"MenuClient_ten__2KMGT\"};"],"sourceRoot":""}