{"version":3,"sources":["pages/Client/AtentionClient/index.module.css","pages/Client/ConfirmClient/index.module.css","pages/Client/AboutClient/index.module.css","Site/index.js","pages/Client/MainClient/index.js","services/api.js","services/auth.js","services/history.js","store/clientReducer.js","pages/Client/FormClient/index.js","pages/Client/MenuClient/index.js","pages/Client/AtentionClient/index.js","pages/Client/AboutClient/index.js","pages/Client/ConfirmClient/index.js","pages/Client/routesClient.js","pages/Client/index.js","store/messageReducer.js","store/authReducer.js","store/userReducer.js","store/companyReducer.js","pages/User/Companies/index.js","pages/User/SetupUser/index.js","pages/User/SetupCompany/index.js","pages/User/routesUser.js","pages/User/index.js","store/suggestReducer.js","pages/User/Suggest/Suggests/index.js","pages/User/Suggest/Call/index.js","pages/User/Suggest/Promo/index.js","pages/User/Suggest/Menu/index.js","pages/User/Suggest/Finances/index.js","pages/User/Suggest/Reservation/index.js","pages/User/Suggest/Delivery/index.js","pages/User/Suggest/routesUser.js","pages/User/Suggest/index.js","pages/Adm/routesAdm.js","pages/Adm/index.js","components/Dialog/index.js","components/Login/index.js","components/Fogot/index.js","components/ResetPassword/index.js","routes.js","App.js","store/promoReducer.js","store/menuReducer.js","store/index.js","index.js","pages/Client/MenuClient/index.module.css"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Site","classes","className","AppBar","position","Toolbar","Typography","variant","Button","component","Link","to","color","margin","width","center","textAlign","marginBottom","button","hidden","display","MainClient","props","infos","idTable","name","slogan","_id","menu","call","prototypes","PropTypes","array","isRequired","connect","state","client","api","axios","create","baseURL","interceptors","request","use","a","config","token","localStorage","getItem","headers","Authorization","history","createBrowserHistory","ACTIONS","INITIAL_STATE","suggest","getInfo","idCompany","dispatch","get","then","Response","type","data","catch","error","console","log","submitSuggest","recommends","post","companyId","push","background","span","namePhone","ident","marginTop","maxWidth","unknown","fontSize","alignItems","minHeight","stars","padding","NumberFormatCustom","inputRef","onChange","other","getInputRef","onValueChange","values","target","value","isNumericString","format","FormClient","useState","window","location","href","split","checked","setChecked","activeStep","setActiveStep","Set","skipped","setSkipped","steps","phone","opinion","setValues","handleChange","event","checkChange","onSubmit","preventDefault","Stepper","Step","StepLabel","step","TextField","label","disabled","id","inputProps","maxLength","InputProps","inputComponent","FormControlLabel","promo","size","control","Checkbox","Box","mb","borderColor","FormLabel","Rating","defaultValue","icon","emptyIcon","FormControl","RadioGroup","row","aria-label","Radio","labelPlacement","multiline","rows","rowsMax","getStepContent","buttons","onClick","prevActiveStep","length","newSkipped","has","delete","bindActionCreators","MenuClient","styles","wrap","section","htmlFor","grid","content","description","ten","AtentionClient","link","idUrl","useEffect","localization","map","src","height","frameBorder","aria-hidden","tabIndex","ConfirmClient","cupom","RoutesApp","exact","path","AboutClient","poth","img","links","labelLink","appBar","top","bottom","grow","list","justifyContent","paddingTop","Client","React","setState","toggleDrawer","open","role","onKeyDown","List","ListItem","ListItemIcon","ListItemText","primary","Divider","CssBaseline","IconButton","edge","Drawer","onClose","message","showMessage","progress","hideMessage","showProgress","AUTH","FOGOT","email","user","auth","login","setItem","JSON","stringify","fogot","reset","logout","removeItem","users","userById","userUp","infosUsers","getUserById","updateUser","put","companies","infosCompanies","companyById","companyAtv","listCompanies","page","nOfItems","docs","addCompany","company","getCompanyById","updateCompany","idUser","cleanCompany","atvCompany","item","palette","text","secondary","Companies","nOfPages","pages","setPage","mapCompanies","Fragment","Grid","key","md","sm","xs","Card","CardActionArea","CardContent","noWrap","address","city","CardActions","container","Pagination","count","float","media","card","ZipFormatCustom","CpfFormatCustom","PhoneFormatCustom","SetupUser","initialValues","cpf","street","number","district","zip","obs","enableReinitialize","validationSchema","Yup","required","userUpdate","formik","handleSubmit","style","fullWidth","InputLabelProps","shrink","getFieldProps","touched","errors","qrCode","CnpjFormatCustom","SetupCompany","cnpj","companyUpdate","RoutesUser","toolbar","paddingRight","textDecoration","paddingBottom","profile","appBarSpacer","mixins","overflow","User","Badge","badgeContent","Container","suggests","suggestById","infosSuggests","listSuggest","limit","fromDate","toDate","favorite","outlier","createMuiTheme","main","filter","minWidth","marginLeft","Suggest","setLimit","typeSuggests","setTypeSuggests","Date","selectedDateFrom","setSelectedDateFrom","now","selectedDateTo","setSelectedDateTo","FormHelperText","Select","MenuItem","locale","ptBR","utils","DateFnsUtils","disableToolbar","invalidDateMessage","date","KeyboardButtonProps","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","hover","parseISO","createdAt","timeZone","precision","readOnly","favoriteUpdate","outlierUpdate","Call","check","setCall","FormGroup","Switch","atvCall","Promo","setPromo","atvPromo","Menu","setMenu","atvMenu","Finances","Reservation","reservation","setReservation","atvReservation","Delivery","delivery","setDelivery","atvDelivery","toolbarIcon","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","paper","flexDirection","fixedHeight","avatar","backgroundColor","MainSuggest","setOpen","clsx","Avatar","parseFloat","toFixed","nStars","RoutesAppSuggest","match","useRouteMatch","url","Adm","alt","openDialog","Dialog","DialogTitle","DialogContent","DialogActions","submit","disableSubmit","setDisableSubmit","useFormik","password","max","onBlur","handleBlur","sitekey","CircularProgress","setProgress","passwordConfirmation","matches","oneOf","PrivateRoute","Component","rest","render","pathname","from","Routes","Login","Fogot","Reset","App","LIST_PROMO","BY_ID_PROMO","UPDATE_PROMO","ADD_PROMO","promoById","LIST_MENU","ATV_MENU","menuById","mainReducer","combineReducers","action","RESET","listUp","forEach","listUpOut","infosMenu","ADD_MENU","BY_ID_MENU","UPDATE_MENU","ATV_PROMO","store","applyMiddleware","thunk","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9d4ce3be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"AtentionClient_center__1d0UE\",\"suggest\":\"AtentionClient_suggest__3xmOK\",\"link\":\"AtentionClient_link__2Qdae\",\"buttons\":\"AtentionClient_buttons__APISf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"ConfirmClient_center__DxxVk\",\"link\":\"ConfirmClient_link__1PO4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"AboutClient_center__11y1g\",\"map\":\"AboutClient_map___W6Q6\"};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Site = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            SuggestInBox\r\n          </Typography>\r\n          <Button component={Link} to={`/login`} color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Site;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: 'auto',\r\n      width: '100%',\r\n    },\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    margin: 'auto',\r\n    marginBottom: '20px',\r\n  },\r\n  button: {\r\n    marginBottom: \"20px\"\r\n  },\r\n  hidden: {\r\n    display: 'none'\r\n  }\r\n}));\r\n\r\nconst MainClient = (props) => {\r\n  const { infos, idTable } = props;\r\n  const classes = useStyles();\r\n\r\n  return(\r\n    <div className={classes.root}>\r\n      <div className={classes.center}>\r\n        <h3>{infos.name}</h3>\r\n        <p>{infos.slogan}</p>\r\n      </div>\r\n      <Button className={classes.button} component={Link} to={`/client/opiniao/?${infos._id}?table=${idTable? idTable: 0}`} variant=\"contained\" color=\"primary\">\r\n        Dar opinião\r\n      </Button>\r\n      <Button className={props.infos.menu? classes.button : classes.hidden} \r\n              component={Link} to={`/client/opiniao/?${infos._id}?table=${idTable? idTable: 0}`} \r\n              variant=\"contained\" color=\"primary\">\r\n        Cardápio online\r\n      </Button>\r\n      <Button className={props.infos.call? classes.button : classes.hidden} \r\n              component={Link} to={`/client/opiniao/?${infos._id}?table=${idTable? idTable: 0}`} \r\n              variant=\"contained\" color=\"primary\">\r\n        Chamar garçom\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nMainClient.prototypes = {\r\n  infos: PropTypes.array.isRequired,\r\n  idTable: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos,\r\n  idTable: state.client.idTable\r\n});\r\n\r\nexport default connect(mapStateToProps)(MainClient);","import axios from \"axios\";\r\nimport { getToken } from \"./auth\";\r\n\r\nconst api = axios.create({\r\n  //baseURL: \"https://api.suggestinbox.com.br\"\r\n  baseURL: \"http://localhost:3001\"\r\n});\r\n\r\napi.interceptors.request.use(async config => {\r\n  const token = getToken();\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport default api;","export const TOKEN_KEY = \"@token\";\r\nexport const INFOS = \"@infos\";\r\n\r\nexport const isAuthenticated = () => localStorage.getItem(TOKEN_KEY) !== null;\r\n\r\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\r\nexport const getInfos = () => localStorage.getItem(INFOS);\r\n\r\nexport const setInfosLocalStorage = (token, infos) => {\r\n  localStorage.setItem(TOKEN_KEY, token);\r\n  localStorage.setItem(INFOS, JSON.stringify(infos));\r\n};\r\nexport const setTokenLocalStorage = (token) => {\r\n  localStorage.setItem(TOKEN_KEY, token);\r\n};\r\nexport const logoutUser = () => {\r\n  localStorage.removeItem(TOKEN_KEY);\r\n  localStorage.removeItem(INFOS);  \r\n};","import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","import api from '../services/api';\r\nimport history from \"../services/history\";\r\n\r\nconst ACTIONS = {\r\n  INFOS: 'INFOS',\r\n  ADD: 'ADD_SUGGEST'\r\n}\r\nconst INITIAL_STATE = {\r\n  infos:[],\r\n  idTable: [],\r\n  suggest:[]\r\n}\r\nexport const clientReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.INFOS:\r\n      return {...state, infos: action.infos, idTable: action.idTable}\r\n    case ACTIONS.ADD:\r\n      return {...state, suggest: action.suggest}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//OBTER INFOS DA COMPANIA\r\nexport const getInfo = (idCompany, idTable) => {\r\n  return dispatch => {\r\n    api.get(`/client/company/${idCompany}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.INFOS,\r\n        infos: Response.data,\r\n        idTable: idTable\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//ENVIAR SUGGEST\r\nexport const submitSuggest = (suggest) => {\r\n  if(suggest.recommends === 'y'){\r\n    suggest.recommends = true;\r\n  }else{\r\n    suggest.recommends = false;\r\n  }\r\n  return dispatch => {\r\n    api.post(`/client/company/${suggest.companyId}`, suggest)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ADD,\r\n        suggest: Response.data,\r\n      });\r\n    }, history.push(`/client/opiniao/sucesso/?${suggest.companyId}`))\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { submitSuggest } from '../../../store/clientReducer'\r\nimport { connect } from 'react-redux';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport Star from '@material-ui/icons/Star';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: 'auto',\r\n      width: '100%',\r\n      background: '#fafafa',\r\n    },\r\n  },\r\n  name: {\r\n    textAlign: 'center',\r\n  },\r\n\r\n  span: {  \r\n    textAlign: 'center'\r\n  },\r\n  namePhone: {\r\n    width: '250px'\r\n  },\r\n  ident: {\r\n    marginTop: '10px',\r\n    maxWidth: \"200px\",\r\n  },\r\n  unknown: {\r\n    fontSize: \"12px\",\r\n  },\r\n  center: {\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    minHeight: '150px'\r\n  },\r\n  stars: {\r\n    padding: '28px',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    minHeight: '150px'\r\n  },\r\n  recommends: {\r\n    padding: '28px',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    minHeight: '150px'\r\n  },\r\n  button: {\r\n    margin: '8px',\r\n    marginTop: '25px'\r\n  }\r\n}));\r\n\r\nconst NumberFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='(##) #########'\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst FormClient = (props) => {\r\n  const classes = useStyles();\r\n  const { infos } = props;\r\n  const [companyId] = useState(window.location.href.split('/?')[1]);\r\n  const [checked, setChecked] = useState(false);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [skipped, setSkipped] = useState(new Set());\r\n  const steps = [\"\", \"\", \"\", \"\"];\r\n\r\n  const isStepSkipped = (step) => {\r\n    return skipped.has(step);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const [values, setValues] = useState({\r\n    name: '',\r\n    phone: '',\r\n    stars: 0,\r\n    opinion: '',\r\n    recommends: '',\r\n    companyId\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    switch(event.target.value){\r\n      case '1':\r\n        setValues({...values, [event.target.name]: 1 });\r\n        break;\r\n      case '2':\r\n        setValues({...values, [event.target.name]: 2 });\r\n        break;\r\n      case '3':\r\n        setValues({...values, [event.target.name]: 3 });\r\n        break;\r\n      case '4':\r\n        setValues({...values, [event.target.name]: 4 });\r\n        break;\r\n      case '5':\r\n        setValues({...values, [event.target.name]: 5 });\r\n        break;\r\n      default:\r\n        setValues({...values, [event.target.name]: event.target.value });\r\n        break;\r\n    }\r\n  };\r\n  const checkChange = (event) => {\r\n    setValues({name: '', phone: ''});\r\n    setChecked(event.target.checked);\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    props.submitSuggest(values);\r\n  }\r\n\r\n  function getStepContent(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <div >\r\n            <TextField className={classes.namePhone}\r\n              label=\"Nome\"\r\n              disabled={checked}\r\n              value={values.name} \r\n              onChange={handleChange}\r\n              name=\"name\"\r\n              id=\"standard-basic\"\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <TextField className={classes.namePhone}\r\n              label=\"Telefone\"\r\n              disabled={checked}\r\n              value={values.phone}\r\n              onChange={handleChange}\r\n              name=\"phone\"\r\n              id=\"formatted-numberformat-input\"\r\n              InputProps={{inputComponent: NumberFormatCustom}}\r\n            />\r\n            <FormControlLabel className={classes.ident}\r\n              label={<Typography className={classes.unknown}>Desejo não me identificar{infos.promo? \" e não participar da promoção\": \"\"}</Typography>}\r\n              size=\"small\"\r\n              control={<Checkbox color=\"primary\" onChange={checkChange} name=\"checked\" />}\r\n            />\r\n          </div>\r\n        );\r\n      case 1:\r\n        return (\r\n          <div className={classes.stars}>\r\n            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n              <FormLabel component=\"legend\">Toque para classificar</FormLabel>\r\n              <Rating\r\n                name=\"stars\"\r\n                onChange={handleChange}\r\n                defaultValue={0}\r\n                value={values.stars}\r\n                icon={<Star fontSize=\"large\" />}\r\n                emptyIcon={<StarBorderIcon fontSize=\"large\" />}\r\n              />\r\n            </Box>\r\n          </div>\r\n        );\r\n      case 2:\r\n        return (\r\n          <div className={classes.recommends}>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\">Nos recomendaria?</FormLabel>\r\n              <RadioGroup onChange={handleChange} value={values.recommends} row aria-label=\"position\" name=\"recommends\">\r\n                <FormControlLabel\r\n                  value=\"y\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Sim\"\r\n                  name=\"recommends\"\r\n                  labelPlacement=\"bottom\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"n\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Não\"\r\n                  name=\"recommends\"\r\n                  labelPlacement=\"bottom\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </div>\r\n        );\r\n      case 3:\r\n        return (\r\n          <div className={classes.center}>\r\n            <TextField\r\n            label=\"Deixe sua opinião\"\r\n            multiline\r\n            rows={4}\r\n            rowsMax={7}\r\n            variant=\"outlined\"\r\n            value={values.opinion} \r\n            onChange={handleChange}\r\n            name=\"opinion\"\r\n            id=\"text-basic\" \r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return (\r\n          <div>\r\n            ok\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <h3 className={classes.name}>{props.infos.name}</h3>\r\n      <p className={classes.name}>{props.infos.slogan}</p>\r\n      <form className={classes.root} onSubmit={handleSubmit}>\r\n        <Stepper activeStep={activeStep}>\r\n          <Step>\r\n            <StepLabel/>\r\n          </Step>\r\n          <Step>\r\n            <StepLabel/>\r\n          </Step>\r\n          <Step>\r\n            <StepLabel/>\r\n          </Step>\r\n          <Step>\r\n            <StepLabel/>\r\n          </Step>\r\n        </Stepper>\r\n        <div className={classes.center}>\r\n          {getStepContent(activeStep)}\r\n          <div className={classes.buttons}>\r\n            <Button variant=\"contained\" disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n              Voltar\r\n            </Button>\r\n            {activeStep === steps.length? (\r\n              <Button className={classes.button} variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                Enviar\r\n              </Button>\r\n            ) : (\r\n              <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length -1 ? \"Enviar\" : \"Próximo\"}\r\n              </Button>)\r\n            }\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nFormClient.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({submitSuggest}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormClient);","import React from 'react';\r\nimport styles from './index.module.css';\r\n\r\nconst MenuClient = () =>{\r\n  return(\r\n    <div className={styles.wrap}>\r\n      <div className={styles.section}>\r\n        <h3>Cardápio</h3>\r\n        <div className={styles.wrap}>\r\n          <label className={styles.name}>Seção: </label>\r\n          <select htmlFor='section'>\r\n            <option value='comida'>Comida</option>\r\n            <option value='bebida'>Bebida</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className={styles.grid}>\r\n          <div className={styles.content}>\r\n            <p className={styles.name}>Baião de dois</p>\r\n            <p className={styles.description}>(Arroz e feijao)</p>\r\n          </div>\r\n          <div className={styles.value}>\r\n            <p className={styles.name}>R$ 15,00</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.ten}>\r\n        <span>Cobramos 10% de taxa de serviço</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenuClient;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst AtentionClient = (props) => {\r\n  const { infos } = props;\r\n\r\n  return(\r\n    <div className={styles.center}>\r\n      <h2>Chamado enviado!</h2>\r\n      <p>Chegaremos assim que possível.</p>\r\n      <p className={styles.suggest}>Enquanto isso você pode ver nosso cardápio online no botão abaixo:</p>\r\n      <div className={styles.buttons}>\r\n          <Link className={styles.link} to={`/client/cardapio/?${infos._id}`}>Ver cadápio online</Link>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAtentionClient.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nexport default connect(mapStateToProps)(AtentionClient);","import React, { useState, useEffect} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport styles from './index.module.css';\r\nimport { getInfo } from '../../../store/clientReducer';\r\n\r\nconst AboutClient = (props) => {\r\n  const { infos } = props;\r\n  const [ idUrl ] = useState(window.location.href.split('/?')[1]);\r\n\r\n  useEffect(()=> {\r\n    console.log(idUrl);\r\n  },[idUrl]);\r\n\r\n  return (\r\n    <div className={styles.center}>\r\n      <h3>{infos.name}</h3>\r\n      <p>{infos.history}</p>\r\n      <h4>Localização</h4>\r\n      <p>{infos.localization}</p>\r\n      <iframe className={styles.map} title='mapa' src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d63695.95624351804!2d-38.560086091509596!3d-3.810670390317004!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x7c74e4a78a20565%3A0xce1304c86cef7da7!2sR.%20A%20-%20Passar%C3%A9%2C%20Fortaleza%20-%20CE%2C%2060810-670!5e0!3m2!1spt-BR!2sbr!4v1595268668224!5m2!1spt-BR!2sbr\" width=\"250\" height=\"200\" frameBorder=\"0\" aria-hidden=\"false\" tabIndex=\"0\"/>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({getInfo}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AboutClient);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.css';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ConfirmClient = (props) => {\r\n  const { infos } = props;\r\n\r\n  return (\r\n    <div className={styles.center}>\r\n      <h3>Obrigado pela sua opinião!</h3>\r\n      <p>Parabéns vocês ganhou uma caipirinha na sua proxima visita!</p>\r\n      <div className={styles.cupom}>\r\n        <h4>Cupom: 49FBA</h4>\r\n        <p>Cupom disponível em 24h.</p>\r\n      </div>\r\n      <Link className={styles.link} to={`/client/?${infos._id}`}>Voltar ao inicio</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nConfirmClient.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos\r\n});\r\n\r\nexport default connect(mapStateToProps)(ConfirmClient);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport MainClient from './MainClient';\r\nimport FormClient from './FormClient';\r\nimport MenuClient from './MenuClient';\r\nimport AtentionClient from './AtentionClient';\r\nimport AboutClient from './AboutClient';\r\nimport ConfirmClient from './ConfirmClient';\r\n\r\nconst RoutesApp = () => (\r\n  <Switch>\r\n    <Route exact path='/client' component={MainClient}/>\r\n    <Route exact path='/client/opiniao' component={FormClient}/>\r\n    <Route exact path='/client/opiniao/sucesso' component={ConfirmClient}/>\r\n    <Route exact path='/client/atencao' component={AtentionClient}/>\r\n    <Route exact path='/client/sobrenos' component={AboutClient}/>\r\n    <Route exact poth='/client/cardapio' component={MenuClient}/>\r\n  </Switch>\r\n)\r\n\r\nexport default RoutesApp;","import React, { useState, useEffect} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport RoutesClient from './routesClient';\r\nimport { getInfo } from '../../store/clientReducer';\r\nimport history from '../../services/history';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport MarkunreadMailboxIcon from '@material-ui/icons/MarkunreadMailbox';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  img:{\r\n    padding: '10px'\r\n  },\r\n  menu: {\r\n    height: '25px'\r\n  },\r\n  links:{\r\n    margin: 'auto'\r\n  },\r\n  labelLink:{\r\n    padding: '10px',\r\n  },\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  list: {\r\n    width: 200,\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  content: {\r\n    width: '275px',\r\n    margin: 'auto',\r\n    paddingTop: '30px'\r\n  },\r\n}));\r\n\r\nconst Client = (props) => {\r\n  const { infos } = props;\r\n  const [ idCompany ] = useState(window.location.href.split('/?')[1]);\r\n  const [ idTable ] = useState(window.location.href.split('table=')[1]);\r\n\r\n  const [state, setState] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    props.getInfo(idCompany, idTable);\r\n  },[idCompany]);\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    setState(open);\r\n  };\r\n\r\n  const list = (\r\n    <div className={classes.list} onClick={toggleDrawer(false)} role=\"presentation\" onKeyDown={toggleDrawer(false)}>\r\n      <List>\r\n        <ListItem button component={Link} to={`/client/?${infos._id}?table=${idTable? idTable: 0}`}>\r\n          <ListItemIcon><HomeIcon/></ListItemIcon>\r\n          <ListItemText primary='Início'/>\r\n        </ListItem>\r\n        <Divider/>\r\n        <ListItem button component={Link} to={`/client/sobrenos/?${infos._id}?table=${idTable? idTable: 0}`}>\r\n          <ListItemIcon><InfoIcon/></ListItemIcon>\r\n          <ListItemText primary='Sobre nós'/>\r\n        </ListItem>\r\n        <Divider/>\r\n        <ListItem button component={Link} to='/'>\r\n          <ListItemIcon><MarkunreadMailboxIcon/></ListItemIcon>\r\n          <ListItemText primary='Sobre o SuggestInBox' />\r\n        </ListItem>\r\n        <Divider/>\r\n      </List>\r\n    </div>\r\n  )\r\n  return(\r\n    <div>\r\n      <CssBaseline />\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton onClick={toggleDrawer(true)} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Drawer open={state} onClose={toggleDrawer(false)}>\r\n            {list}\r\n          </Drawer>\r\n          <Typography variant=\"button\" className={classes.links}>\r\n            <Button color=\"inherit\" component={Link} to={`/client/?${infos._id}?table=${idTable? idTable: 0}`}>SuggestInBox</Button>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.content}>\r\n        <RoutesClient/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nClient.prototypes = {\r\n  infos: PropTypes.array.isRequired,\r\n  idTable: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.client.infos,\r\n  idTable: state.client.idTable\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({getInfo}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Client);","const INITIAL_STATE = {\r\n  message: '',\r\n  showMessage: false,\r\n  progress: true\r\n}\r\nexport const ACTIONS = {\r\n  SHOW_MESSAGE: 'SHOW_MESSAGE',\r\n  HIDE_MESSAGE: 'HIDE_MESSAGE',\r\n  HIDE_PROGRESS: 'HIDE_PROGRESS',\r\n  SHOW_PROGRESS: 'SHOW_PROGRESS'\r\n}\r\nexport const messageReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.SHOW_MESSAGE:\r\n      return {...state, message: action.message, showMessage: true}\r\n    case ACTIONS.HIDE_MESSAGE:\r\n      return {...state, message: '', showMessage: false, progress: true}\r\n    case ACTIONS.SHOW_PROGRESS:\r\n      return {...state, progress: false}\r\n    case ACTIONS.HIDE_PROGRESS:\r\n      return {...state, progress: true}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//MOSTAR MENSAGEM CAPTURADA DAS REQUESTS\r\nexport const showMessage = (message) => {\r\n  return{\r\n    type: ACTIONS.SHOW_MESSAGE,\r\n    message: message\r\n  }\r\n}\r\n//FECHAR MENSAGENS\r\nexport const hideMessage = () => {\r\n  return {\r\n    type: ACTIONS.HIDE_MESSAGE\r\n  }\r\n}\r\n//PROGRESS DA REQUISIÇÃO\r\nexport const showProgress = () => {\r\n  return {\r\n    type: ACTIONS.SHOW_PROGRESS\r\n  }\r\n}\r\n//FECHAR PROGRESSO\r\nexport const hideProgress = () => {\r\n  return {\r\n    type: ACTIONS.HIDE_MESSAGE\r\n  }\r\n}","import api from '../services/api';\r\nimport history from '../services/history';\r\nimport { setInfosLocalStorage, logoutUser } from '../services/auth';\r\nimport { showMessage } from './messageReducer';\r\n\r\nconst ACTIONS = {\r\n  AUTH: 'AUTH',\r\n  FOGOT: 'FOGOT'\r\n}\r\nconst INITIAL_STATE = {\r\n  infos:[],\r\n  email:[],\r\n  user:[],\r\n}\r\nexport const authReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.AUTH:\r\n      return {...state, infos: action.infos}\r\n    case ACTIONS.FOGOT:\r\n      return {...state, email: action.email}\r\n    case ACTIONS.RESET:\r\n      return {...state, user: action.user}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//AUTENTICAÇÃO\r\nexport const auth = (login) => {\r\n  return dispatch => {\r\n    api.post('/auth', login)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.AUTH,\r\n        infos: Response.data,\r\n      }); \r\n      if(!Response.data.token){\r\n        dispatch(\r\n          showMessage(\"Senha ou email inválidos!\")\r\n        )\r\n      }else{\r\n        setInfosLocalStorage(Response.data.token, Response.data.user);\r\n        history.push(`/user/?${Response.data.user._id}?page=1&limit=25`);\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servidor indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )}\r\n    )\r\n  }\r\n}\r\n//ESQUECI SENHA\r\nexport const fogot = (email) => {\r\n  return dispatch => {\r\n    api.post('/auth/fogot', email)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.FOGOT,\r\n        email: Response.data,\r\n      });\r\n      if(!Response.data.email){\r\n        dispatch(\r\n          showMessage(\"Usuario não encontrado!\")\r\n        )\r\n      }else{\r\n        history.push('/login');\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Servidor indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )}\r\n    );\r\n  }\r\n}\r\n//RESET SENHA\r\nexport const reset = (user) => {\r\n  return dispatch => {\r\n    api.post('/auth/reset_password', user)\r\n    .then(Response => {\r\n      dispatch({\r\n          type: ACTIONS.FOGOT,\r\n          user: Response.data,\r\n      });\r\n    })\r\n    .catch(error => {\r\n      dispatch(\r\n        showMessage(\"Serviço indisponível, tente mais tarde!\"),\r\n        console.log(error)\r\n      )}\r\n    );\r\n  }\r\n}\r\n//LOGOUT\r\nexport const logout = () =>{\r\n  logoutUser();\r\n  history.push(`/login`);\r\n}","import api from '../services/api';\r\nimport history from '../services/history';\r\n\r\nconst ACTIONS = {\r\n  LIST_USERS: 'LISTUSERS',\r\n  BY_ID_USER: 'BYIDUSER',\r\n  UPDATE_USER: 'UPDATEUSER',\r\n}\r\nconst INITIAL_STATE = {\r\n  users: [],\r\n  userById: [],\r\n  userUp: [],\r\n  infosUsers: [],\r\n}\r\nexport const userReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.BY_ID_USER:\r\n      return {...state, userById: action.userById}\r\n    case ACTIONS.UPDATE_USER:\r\n      return {...state, user: action.user}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//LISTAR TODOS USUÁRIOS\r\nexport const listUser = (page, nOfItems) => {\r\n  return dispatch => {\r\n    api.get(`/adm/user?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_USERS,\r\n        users: docs,\r\n        infosUsers: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//GET BY ID USER\r\nexport const getUserById = (id) => {\r\n  return dispatch => {\r\n    api.get(`/adm/user/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_USER,\r\n        userById: Response.data,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n//UPDATE USER\r\nexport const updateUser = (user, id) => {\r\n  return dispatch => {\r\n    api.put(`/adm/user/${id}`, user)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_USER,\r\n        userUp: Response.data\r\n      })\r\n    }, history.push(`/user/?${id}?page=1&limit=25`))\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}","import api from '../services/api';\r\nimport history from '../services/history';\r\n\r\nconst ACTIONS = {\r\n  LIST_COMPANIES: 'LISTCOMPANIES',\r\n  BY_ID_COMPANY: 'BYIDCOMPANY',\r\n  UPDATE_COMPANY: 'UPDATECOMPANY',\r\n  ATV_COMPANY: 'ATVCOMPANY',\r\n  CLEAN_COMPANY: 'CLEANCOMPANY',\r\n  ADD_COMPANY: 'ADDCOMPANY',\r\n}\r\nconst INITIAL_STATE = {\r\n  companies: [],\r\n  infosCompanies: [],\r\n  companyById: [],\r\n  companyAtv: [],\r\n}\r\nexport const companyReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.LIST_COMPANIES:\r\n      return {...state, companies: action.companies, infosCompanies: action.infosCompanies}\r\n    case ACTIONS.ADD_COMPANY:\r\n      return {...state, companyById: action.companyById}\r\n    case ACTIONS.BY_ID_COMPANY:\r\n      return {...state, companyById: action.companyById}\r\n    case ACTIONS.UPDATE_COMPANY:\r\n      return state;\r\n    case ACTIONS.ATV_COMPANY:\r\n      return {...state, companyById: action.companyById}\r\n    //DEFAULT\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//LISTAR COMPANIAS\r\nexport const listCompanies = (page, nOfItems) => {\r\n  return dispatch => {\r\n    api.get(`/adm/company?page=${page}&limit=${nOfItems}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_COMPANIES,\r\n        companies: docs,\r\n        infosCompanies: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//ADICIONAR COMPANY\r\nexport const addCompany = (company, id) => {\r\n  return dispatch => {\r\n    api.post('/adm/company', company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ADD_COMPANY,\r\n        companyById: Response.data,\r\n      });\r\n    }, history.push(`/user`))\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//GET BY ID COMPANY\r\nexport const getCompanyById = (id) => {\r\n  return dispatch => {\r\n    api.get(`/adm/company/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_COMPANY,\r\n        companyById: Response.data,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n//UPDATE COMPANY\r\nexport const updateCompany = (company, id, idUser) => {\r\n  return dispatch => {\r\n    api.put(`/adm/company/${id}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_COMPANY,\r\n        //company: Response.data\r\n      })\r\n    }, history.push(`/suggest/?${idUser}/?${id}?page=1&limit=25`))\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n//LIMPAR CAMPOS COMPANY\r\nexport const cleanCompany = () => {\r\n  return {\r\n    type: ACTIONS.CLEAN_COMPANY,\r\n  }\r\n}\r\n//ATIVAR / DESATIVAR: MENU, PROMO, CALL\r\nexport const atvCompany = (company) => {\r\n  return dispatch => {\r\n    api.put(`/adm/company/${company._id}`, company)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ATV_COMPANY,\r\n        companyById: company\r\n      })\r\n    })\r\n  }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { listCompanies } from '../../../store/companyReducer' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  item: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  center: {\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    margin: '20px'\r\n  },\r\n  button: {\r\n    margin: '15px'\r\n  }\r\n}));\r\n\r\nconst Companies = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { companies, infosCompanies } = props;\r\n  const [ idUrl ] = useState(window.location.href.split('/?')[1].split('?')[0]);\r\n  const nOfPages = infosCompanies.pages;\r\n  const [page, setPage] = useState(1);\r\n  const [nOfItems, setNoOfItems] = useState(10);\r\n\r\n  useEffect(() => {\r\n    props.listCompanies(page, nOfItems);\r\n  },[page, nOfItems]);\r\n\r\n  const handleChange=(event, value)=>{\r\n    setPage(value);\r\n  }\r\n  const handleNofItems=(event)=>{\r\n    setNoOfItems(event.target.value);\r\n    setPage(1);\r\n  }\r\n\r\n  const mapCompanies = (\r\n    <React.Fragment>\r\n      {companies.map( company => {\r\n          return(\r\n            <Grid key={company._id} item md={4} sm={6} xs={12}>\r\n              <div className={classes.item}>  \r\n                <Card>\r\n                  <CardActionArea component={Link} to={`/suggest/?${idUrl}/?${company._id}?page=${page}&limit=${nOfItems}`}>\r\n                    <CardContent>\r\n                      <Typography noWrap variant=\"h5\" component=\"h2\">\r\n                        {company.name}\r\n                      </Typography>\r\n                      <Typography noWrap variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {company.address.city} - {company.address.state}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                  <CardActions className={classes.center}>\r\n                    <Button component={Link} to={`/suggest/?${idUrl}/?${company._id}?page=${page}&limit=${nOfItems}`} variant=\"contained\" color=\"primary\">\r\n                      Gerenciar\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </div>\r\n            </Grid>\r\n          )})\r\n        }\r\n    </React.Fragment>\r\n  )\r\n\r\n  return(\r\n    <div className={classes.root}>\r\n      <Typography className={classes.center} variant=\"h5\" component=\"h2\">Estabelecimentos</Typography>\r\n      <Button className={classes.button} component={Link} to={`/user/setup-company/?${idUrl}`} variant=\"contained\" color=\"primary\">\r\n        Adicionar Estabelecimento\r\n      </Button>\r\n      <Grid container item xs={12} spacing={3}>\r\n        {mapCompanies}\r\n      </Grid>\r\n      <Grid className={classes.center} container item xs={12} spacing={3}>\r\n        <Box component=\"span\">\r\n          <Pagination\r\n            count={nOfPages}\r\n            page={page}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nCompanies.prototypes = {\r\n  companies: PropTypes.array.isRequired,\r\n  infosCompanies: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companies: state.company.companies,\r\n  infosCompanies: state.company.infosCompanies,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({listCompanies}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Companies);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport NumberFormat from 'react-number-format';\r\nimport * as Yup from 'yup';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider, Button, TextField, Card, Typography, Grid} from '@material-ui/core';\r\nimport { getUserById, updateUser } from '../../../store/userReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 8\r\n  },\r\n  button: {\r\n    float: 'right',\r\n    margin: 8,\r\n  },\r\n  media: {\r\n    margin: 'auto',\r\n    width: 140,\r\n    height: 140,\r\n  },\r\n  card: {\r\n    marginBottom: 10,\r\n  },\r\n  center: {\r\n    margin: 'auto',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  grid: {\r\n    justifyContent: 'center',\r\n    padding: 8\r\n  }\r\n}));\r\n\r\nconst ZipFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='#####-###'\r\n    />\r\n  );\r\n}\r\n\r\nZipFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst CpfFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='###.###.###-##'\r\n    />\r\n  );\r\n}\r\n\r\nCpfFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst PhoneFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='(##) #########'\r\n    />\r\n  );\r\n}\r\n\r\nPhoneFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst SetupUser = (props) => {\r\n  const classes = useStyles();\r\n  const { userById } = props;\r\n\r\n  const [idUrl] = useState(window.location.href.split('/?')[1]);\r\n  const defaultFormShape = {\r\n    email: '',\r\n    name: '',\r\n    cpf: '',\r\n    phone: '',\r\n    address: {\r\n      state: '',\r\n      city: '',\r\n      street: '',\r\n      number: '',\r\n      type: '',\r\n      district: '',\r\n      zip: '',\r\n      obs: ''\r\n    },\r\n  };\r\n\r\n  useEffect(()=>{\r\n    props.getUserById(idUrl);\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <Formik \r\n        initialValues= {userById._id? userById : defaultFormShape}\r\n        enableReinitialize\r\n        validationSchema={Yup.object({\r\n          email: Yup.string()\r\n            .required('Email obrigatório!'),\r\n          name: Yup.string()\r\n            .required('Nome obrigatório!'),\r\n          cpf: Yup.string()\r\n            .required('Cpf obrigatório!'),\r\n          phone: Yup.string()\r\n            .required('Telefone obrigatório!'),\r\n          address: Yup.object({\r\n            zip: Yup.string()\r\n              .required('Cep obrigatorio!'),\r\n            street: Yup.string()\r\n              .required('Rua obrigatorio!'),\r\n            district: Yup.string()\r\n              .required('Bairro obrigatorio!'),\r\n            city: Yup.string()\r\n              .required('Cidade obrigatorio!'),\r\n            state: Yup.string()\r\n              .required('Estado obrigatorio!'),\r\n            number: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n            type: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n            obs: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n          }),\r\n        })}\r\n\r\n        onSubmit={(values) => {\r\n          const { name, email, phone, cpf } = values;\r\n          const { state, city, street, number, type, district, zip, obs } = values.address;\r\n          const address = {state, city, street, number, type, district, zip, obs};\r\n          const userUpdate = { name, email, cpf, phone, address };\r\n          props.updateUser(userUpdate, userById._id);\r\n        }}>\r\n        {formik => (\r\n          <Card >\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <p style={{margin: 10}}>Dados</p>\r\n              <Grid container>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={5}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Nome:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"name\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('name')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.name && formik.errors.name ? (\r\n                        <Typography className={classes.error}>{formik.errors.name}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"CPF:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"cpf\"\r\n                      InputProps={{inputComponent: CpfFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('cpf')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.cpf && formik.errors.cpf ? (\r\n                        <Typography className={classes.error}>{formik.errors.cpf}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Email:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"email\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('email')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.email && formik.errors.email ? (\r\n                        <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Telefone:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"phone\"\r\n                      InputProps={{inputComponent: PhoneFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('phone')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.phone && formik.errors.phone ? (\r\n                        <Typography className={classes.error}>{formik.errors.phone}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{margin: 10}}>Endereço</p>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cep:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.zip\"\r\n                      InputProps={{inputComponent: ZipFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.zip')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.zip}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Rua:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.street\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.street')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.street}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Bairro:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.district\"\r\n                      inputProps={{ maxLength: 40 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.district')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.district}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cidade:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.city\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.city')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.city}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Estado:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.state\"\r\n                      inputProps={{ maxLength: 30 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.state')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.state}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Número:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.number\"\r\n                      inputProps={{ maxLength: 6 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.number')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.number}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Tipo:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.type\"\r\n                      inputProps={{ maxLength: 20 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.type')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.type}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Complemento:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.obs\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.obs')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.obs}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Divider/>\r\n                  <Button type=\"submit\" className={classes.button} variant=\"contained\" color=\"primary\">\r\n                    Atualizar\r\n                  </Button>\r\n                  <Button className={classes.button} component={Link} to={`/user/?${userById._id}?page=1&limit=25`} variant=\"outlined\" color=\"primary\">\r\n                    Cancelar\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nSetupUser.prototypes = {\r\n  userById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userById: state.user.userById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ getUserById, updateUser }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupUser);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport NumberFormat from 'react-number-format';\r\nimport * as Yup from 'yup';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider, Button, TextField, Card, Typography, Grid} from '@material-ui/core';\r\nimport { addCompany, getCompanyById, updateCompany, cleanCompany } from '../../../store/companyReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 8\r\n  },\r\n  qrCode:{\r\n    margin: '25px 0'\r\n  },\r\n  button: {\r\n    float: 'right',\r\n    margin: 8,\r\n  },\r\n  media: {\r\n    margin: 'auto',\r\n    width: 140,\r\n    height: 140,\r\n  },\r\n  card: {\r\n    marginBottom: 10,\r\n  },\r\n  center: {\r\n    margin: 'auto',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  grid: {\r\n    justifyContent: 'center',\r\n    padding: 8\r\n  }\r\n}));\r\n\r\nconst ZipFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='#####-###'\r\n    />\r\n  );\r\n}\r\n\r\nZipFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst CnpjFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='##.###.###/####-##'\r\n    />\r\n  );\r\n}\r\n\r\nCnpjFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst PhoneFormatCustom = (props) => {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      format='(##) #########'\r\n    />\r\n  );\r\n}\r\n\r\nPhoneFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst SetupCompany = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n\r\n  const [idUser] = useState(window.location.href.split('/?')[1]);\r\n  const [idCompany] = useState(window.location.href.split('/?')[2]);\r\n  const defaultFormShape = {\r\n    name: '',\r\n    cnpj: '',\r\n    slogan: '',\r\n    history: '',\r\n    localization: '',\r\n    email: '',\r\n    phone: '',\r\n    address: {\r\n      state: '',\r\n      city: '',\r\n      street: '',\r\n      number: '',\r\n      type: '',\r\n      district: '',\r\n      zip: '',\r\n      obs: ''\r\n    },\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(idCompany){\r\n      props.getCompanyById(idCompany);\r\n    }else{\r\n      props.cleanCompany();\r\n    }\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.qrCode}>\r\n        <p>randel</p>\r\n      </Card>\r\n      <Formik \r\n        initialValues= {companyById._id? companyById : defaultFormShape}\r\n        enableReinitialize\r\n        validationSchema={Yup.object({\r\n          name: Yup.string()\r\n            .required('Nome obrigatório!'),\r\n          cnpj: Yup.string()\r\n            .required('Cnpj obrigatório!'),\r\n          slogan: Yup.string()\r\n            .required('Slogan obrigatório'),\r\n          history: Yup.string()\r\n            .required('História obrigatória'),\r\n          localization: Yup.string()\r\n            .required('Localização obrigatória'),\r\n          email: Yup.string()\r\n            .required('Email obrigatório!'),\r\n          phone: Yup.string()\r\n            .required('Telefone obrigatório!'),\r\n          address: Yup.object({\r\n            zip: Yup.string()\r\n              .required('Cep obrigatorio!'),\r\n            street: Yup.string()\r\n              .required('Rua obrigatorio!'),\r\n            district: Yup.string()\r\n              .required('Bairro obrigatorio!'),\r\n            city: Yup.string()\r\n              .required('Cidade obrigatorio!'),\r\n            state: Yup.string()\r\n              .required('Estado obrigatorio!'),\r\n            number: Yup.string()\r\n              .required('Número obrigatorio!'),\r\n          }),\r\n        })}\r\n\r\n        onSubmit={(values) => {\r\n          if(companyById._id){\r\n            const { name, slogan, history, localization, email, cnpj, phone } = values;\r\n            const { state, city, street, number, type, district, zip, obs } = values.address;\r\n            const address = {state, city, street, number, type, district, zip, obs};\r\n            const companyUpdate = { name, slogan, history, localization, email, cnpj, phone, address };\r\n            props.updateCompany(companyUpdate, companyById._id, idUser);\r\n          }else{\r\n            props.addCompany(values);\r\n          }\r\n        }}>\r\n        {formik => (\r\n          <Card >\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <p style={{margin: 10}}>Dados</p>\r\n              <Grid container>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Nome:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"name\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('name')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.name && formik.errors.name ? (\r\n                        <Typography className={classes.error}>{formik.errors.name}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Slogan:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"slogan\"\r\n                      inputProps={{ maxLength: 50 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('slogan')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.slogan && formik.errors.slogan ? (\r\n                        <Typography className={classes.error}>{formik.errors.slogan}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"História:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"history\"\r\n                      inputProps={{ maxLength: 250 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('history')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.history && formik.errors.history ? (\r\n                        <Typography className={classes.error}>{formik.errors.history}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Localização:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"localization\"\r\n                      inputProps={{ maxLength: 250 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('localization')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.localization && formik.errors.localization ? (\r\n                        <Typography className={classes.error}>{formik.errors.localization}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Email:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"email\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('email')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.email && formik.errors.email ? (\r\n                        <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Telefone:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"phone\"\r\n                      InputProps={{inputComponent: PhoneFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('phone')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.phone && formik.errors.phone ? (\r\n                        <Typography className={classes.error}>{formik.errors.phone}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"CNPJ:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"cnpj\"\r\n                      InputProps={{inputComponent: CnpjFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('cnpj')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.cnpj && formik.errors.cnpj ? (\r\n                        <Typography className={classes.error}>{formik.errors.cnpj}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{margin: 10}}>Endereço</p>\r\n                <Grid container item spacing={1} className={classes.grid}>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cep:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.zip\"\r\n                      InputProps={{inputComponent: ZipFormatCustom}}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.zip')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.zip}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Rua:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.street\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.street')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.street}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Bairro:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.district\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.district')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.district}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Cidade:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.city\"\r\n                      inputProps={{ maxLength: 70 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.city')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.city}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Estado:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.state\"\r\n                      inputProps={{ maxLength: 30 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.state')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.state}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Número:\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      name=\"address.number\"\r\n                      inputProps={{ maxLength: 10 }}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      {...formik.getFieldProps('address.number')}\r\n                    />\r\n                    <div>\r\n                      {formik.touched.address && formik.errors.address ? (\r\n                        <Typography className={classes.error}>{formik.errors.address.number}</Typography>\r\n                      ) : null}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Divider/>\r\n                  <Button type=\"submit\" className={classes.button} variant=\"contained\" color=\"primary\">\r\n                    {companyById._id? 'Atualizar': 'Salvar'}\r\n                  </Button>\r\n                  <Button className={classes.button} component={Link} \r\n                          to={companyById._id? `/suggest/?${idUser}/?${idCompany}?page=1&limit=25` : `/user/?${idUser}?page=1&limit=25`} variant=\"outlined\" color=\"primary\">\r\n                    Cancelar\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nSetupCompany.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ addCompany, getCompanyById, updateCompany, cleanCompany }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupCompany);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Companies from './Companies';\r\nimport SetupUser from './SetupUser';\r\nimport SetupCompany from './SetupCompany';\r\n\r\nconst RoutesUser = () => {\r\n  return(\r\n    <Switch>\r\n      <Route exact path='/user' component={Companies}/>\r\n      <Route exact path='/user/setup' component={SetupUser}/>\r\n      <Route exact path='/user/setup-company' component={SetupCompany}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default RoutesUser;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../store/authReducer';\r\nimport { getUserById } from '../../store/userReducer';\r\nimport PropTypes from 'prop-types';\r\nimport RoutesUser from './routesUser';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textDecoration: 'none',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  profile: {\r\n    paddingRight: 17\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n}));\r\n\r\nconst User = (props) => {\r\n  const classes = useStyles();\r\n  const [ idUser ] = useState(window.location.href.split('/?')[1].split('?')[0]);\r\n  const { userById } = props;\r\n  \r\n  useEffect(() => {\r\n    props.getUserById(idUser);\r\n  },[]);\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\">\r\n          <Toolbar className={classes.toolbar}>\r\n            <Typography component={Link} to={`/user/?${userById._id}?page=1&limit=25`} variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              SuggestInBox\r\n            </Typography>\r\n            <div className={classes.profile}>{userById.name}</div>\r\n            <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={1} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton component={Link} to={`/user/setup/?${userById._id}`} color=\"inherit\">\r\n              <SettingsIcon/>\r\n            </IconButton>\r\n            <IconButton onClick={props.logout} color=\"inherit\">\r\n              <ExitToAppIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid>\r\n              <RoutesUser />\r\n            </Grid>\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUser.prototypes = {\r\n  userById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userById: state.user.userById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({logout, getUserById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(User);","import api from '../services/api';\r\nimport history from '../services/history';\r\n\r\nconst ACTIONS = {\r\n  LIST_SUGGESTS: 'LISTSUGGESTS',\r\n  FAVORITE: 'FAVORITE',\r\n  TOFILE: 'TOFILE',\r\n}\r\nconst INITIAL_STATE = {\r\n  suggests: [],\r\n  suggestById: [],\r\n  infosSuggests: [],\r\n}\r\n\r\nexport const suggestReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    //*********************SUGGESTS*********************\r\n    case ACTIONS.LIST_SUGGESTS:\r\n      return {...state, suggests: action.suggests, infosSuggests: action.infosSuggests}\r\n    case ACTIONS.FAVORITE:\r\n      const listUp = [...state.suggests]\r\n      listUp.forEach(suggest => {\r\n        if(suggest._id === action._id){\r\n          suggest.favorite = true;\r\n        }\r\n      })\r\n      return {...state, suggests: listUp}\r\n    case ACTIONS.TOFILE:\r\n      const listUpOut = [...state.suggests]\r\n      listUpOut.forEach(suggest => {\r\n        if(suggest._id === action._id){\r\n          suggest.outlier = true;\r\n        }\r\n      })\r\n      return {...state, suggests: listUpOut}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//*******************************************SUGGESTS*********************************************\r\n//LISTAR SUGGESTS\r\nexport const listSuggest = (idUrl, page, limit, type, fromDate, toDate) => {\r\n  return dispatch => {\r\n    api.get(`/adm/all-suggest/${idUrl}?page=${page}&limit=${limit}&type=${type}&fromDate=${fromDate}&toDate=${toDate}`)\r\n    .then(Response => {\r\n      const { docs, infos } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_SUGGESTS,\r\n        suggests: docs,\r\n        infosSuggests: infos,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//FAVORITAR SUGGEST\r\nexport const favorite = (suggest) => {\r\n  return dispatch => {\r\n    api.put(`/adm/suggest/${suggest._id}`, suggest )\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.FAVORITE,\r\n        id: suggest._id\r\n      })\r\n    })\r\n  }\r\n}\r\n//ARQUIVAR SUGGEST\r\nexport const outlier = (suggest) => {\r\n  return dispatch => {\r\n    api.put(`/adm/suggest/${suggest._id}`, suggest )\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.TOFILE,\r\n        id: suggest._id\r\n      })\r\n    })\r\n  }\r\n}","import React, { useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { listSuggest, favorite, outlier } from '../../../../store/suggestReducer';\r\nimport { parseISO } from 'date-fns';\r\nimport { format } from 'date-fns-tz';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport { ptBR } from \"date-fns/locale\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Box from '@material-ui/core/Box';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport { IconButton } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    secondary:{\r\n      main: '#FFB701'\r\n    }\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  center: {\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    margin: '20px'\r\n  },\r\n  filter: {\r\n    minWidth: '110px',\r\n    marginLeft: '9px'\r\n  },\r\n  data: {\r\n    margin: '9px',\r\n    maxWidth: '140px'\r\n  },\r\n}));\r\n\r\nconst Suggest = (props) => {\r\n  const classes = useStyles();\r\n  const [ idCompany ] = useState(window.location.href.split('/?')[2].split('?')[0]);\r\n  const {suggests, infosSuggests} = props;\r\n  const pages = infosSuggests.pages;\r\n  \r\n  const [ page, setPage ] = useState(1);\r\n  const [ limit, setLimit ] = useState(25);\r\n  const [typeSuggests, setTypeSuggests] = useState('All');\r\n  const [selectedDateFrom, setSelectedDateFrom] = useState(new Date('2020-01-01T00:00:00'));\r\n  const [selectedDateTo, setSelectedDateTo] = useState(Date.now);\r\n  \r\n  useEffect(() => {\r\n    props.listSuggest(idCompany, page, limit, typeSuggests, selectedDateFrom, selectedDateTo);\r\n  },[]);\r\n\r\n  const handleChangePage=(event, value)=>{\r\n    setPage(value);\r\n    props.listSuggest(idCompany, value, limit, typeSuggests, selectedDateFrom, selectedDateTo);\r\n  }\r\n  const handleLimit=(event)=>{\r\n    setLimit(event.target.value);\r\n    props.listSuggest(idCompany, page, event.target.value, typeSuggests, selectedDateFrom, selectedDateTo);\r\n    setPage(1);\r\n  }\r\n  const handleChangSuggest=(event)=>{\r\n    setTypeSuggests(event.target.value);\r\n    props.listSuggest(idCompany, page, limit, event.target.value, selectedDateFrom, selectedDateTo);\r\n  }\r\n  const handleDateChangeFrom = (date) => {\r\n    setSelectedDateFrom(date);\r\n    console.log(date);\r\n  };\r\n  const handleDateChangeTo = (date) => {\r\n    setSelectedDateTo(date);\r\n    props.listSuggest(idCompany, page, limit, typeSuggests, selectedDateFrom, date);\r\n  };\r\n\r\n  //FAV E ARQ\r\n  const favoriteUpdate = (suggest) => {\r\n    if(suggest.favorite){\r\n      suggest.favorite = false;\r\n      return props.favorite(suggest)\r\n    }else{\r\n      suggest.favorite = true;\r\n      return props.favorite(suggest)\r\n    }\r\n  }\r\n  const outlierUpdate = (suggest) => {\r\n    if(suggest.outlier){\r\n      suggest.outlier = false;\r\n      return props.outlier(suggest)\r\n    }else{\r\n      suggest.outlier = true;\r\n      return props.outlier(suggest)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Sugestões</Typography>\r\n       <div>\r\n        <FormControl>\r\n          <FormHelperText>Número por página:</FormHelperText>\r\n          <Select\r\n            value={limit}\r\n            onChange={handleLimit}\r\n            inputProps={{ 'aria-label': 'Without label' }}>\r\n            <MenuItem value={25}>25</MenuItem>\r\n            <MenuItem value={50}>50</MenuItem>\r\n            <MenuItem value={75}>75</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.filter}>\r\n          <FormHelperText>Filtrar por:</FormHelperText>\r\n          <Select\r\n            value={typeSuggests}\r\n            onChange={handleChangSuggest}\r\n            inputProps={{ 'aria-label': 'Without label' }}>\r\n            <MenuItem value={'All'}>Todas</MenuItem>\r\n            <MenuItem value={'Fav'}>Favoritas</MenuItem>\r\n            <MenuItem value={'Arq'}>Arquivadas</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <MuiPickersUtilsProvider locale={ptBR} utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            className={classes.data}\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"normal\"\r\n            id=\"date-picker-inline\"\r\n            label=\"De\"\r\n            size=\"small\"\r\n            invalidDateMessage=\"Data inválida.\"\r\n            value={selectedDateFrom}\r\n            onChange={handleDateChangeFrom}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n          <KeyboardDatePicker\r\n            className={classes.data}\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Até\"\r\n            size=\"small\"\r\n            invalidDateMessage=\"Data inválida.\"\r\n            value={selectedDateTo}\r\n            onChange={handleDateChangeTo}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </div>\r\n      <Paper>\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align='center'>Data</TableCell>\r\n                <TableCell align='center'>Nome</TableCell>\r\n                <TableCell align='center'>Telefone</TableCell>\r\n                <TableCell align='center'>Avaliação</TableCell>\r\n                <TableCell align='center'>Recomenda</TableCell>\r\n                <TableCell align='center'>Opinião</TableCell>\r\n                <TableCell align='center'/>\r\n                <TableCell align='center'/>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <MuiThemeProvider theme={theme}>\r\n                { suggests.map( suggest => {\r\n                  return (\r\n                    <TableRow hover key={suggest._id} role=\"checkbox\" tabIndex={-1}>\r\n                      <TableCell align='center'>{format(parseISO(suggest.createdAt), 'dd/MM/yyyy HH:mm', {timeZone: 'America/Sao_Paulo'} )}</TableCell>\r\n                      <TableCell align='center'>{suggest.name}</TableCell>\r\n                      <TableCell align='center'>{suggest.phone}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <Rating name=\"read-only\" size=\"small\" value={suggest.stars? suggest.stars: 0} precision={0.5} readOnly/>\r\n                      </TableCell>\r\n                      <TableCell align='center'>{suggest.recommends? (<CheckIcon/>) : (<CloseIcon/>)}</TableCell>\r\n                      <TableCell align='center'>{suggest.opinion}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <IconButton onClick={() => favoriteUpdate(suggest)}>\r\n                          {suggest.favorite? (<StarIcon color='secondary'/>):(<StarBorderIcon/>)}\r\n                        </IconButton>\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <IconButton onClick={() => outlierUpdate(suggest)}>\r\n                          {suggest.outlier? (<DeleteOutlineIcon color=\"disabled\"/>):(<DeleteOutlineIcon/>)}\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )\r\n                })}\r\n              </MuiThemeProvider>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Grid className={classes.center} container item xs={12} spacing={3}>\r\n          <Box component=\"span\">\r\n            <Pagination\r\n              count={pages}\r\n              page={page}\r\n              onChange={handleChangePage}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nSuggest.prototypes = {\r\n  suggest: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  suggests: state.suggest.suggests,\r\n  infosSuggests: state.suggest.infosSuggests,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({listSuggest, favorite, outlier}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Suggest);","import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { atvCompany, getCompanyById } from '../../../../store/companyReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  button: {\r\n    marginTop: '25px',\r\n  },\r\n}));\r\n\r\nconst Call = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n  const [ call, setCall ] = useState({\r\n    check: companyById.call\r\n  })\r\n\r\n  const atvCall = (companyById) => {\r\n    if(companyById.call){\r\n      companyById.call = false;\r\n      setCall({check: companyById.call});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.call = true;\r\n      setCall({check: companyById.call});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Chamada por mesa</Typography>\r\n      <Grid container>\r\n        <Grid item>\r\n          <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={call.check}\r\n                onClick={()=>atvCall(companyById)}\r\n                name=\"checkedA\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Ativar/Desativar\"\r\n          />\r\n          </FormGroup>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nCall.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({atvCompany, getCompanyById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Call);","import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { atvCompany, getCompanyById } from '../../../../store/companyReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  button: {\r\n    marginTop: '25px',\r\n  },\r\n}));\r\n\r\nconst Promo = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n  const [ promo, setPromo ] = useState({\r\n    check: companyById.promo\r\n  })\r\n\r\n  const atvPromo = (companyById) => {\r\n    if(companyById.promo){\r\n      companyById.promo = false;\r\n      setPromo({check: companyById.promo});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.promo = true;\r\n      setPromo({check: companyById.promo});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Promoção</Typography>\r\n      <Grid container>\r\n        <Grid item>\r\n          <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={promo.check}\r\n                onClick={()=>atvPromo(companyById)}\r\n                name=\"checkedA\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Ativar/Desativar\"\r\n          />\r\n          </FormGroup>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nPromo.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({atvCompany, getCompanyById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Promo);","import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { atvCompany, getCompanyById } from '../../../../store/companyReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  button: {\r\n    marginTop: '25px',\r\n  },\r\n}));\r\n\r\nconst Menu = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n  const [ menu, setMenu ] = useState({\r\n    check: companyById.menu\r\n  })\r\n\r\n  const atvMenu = (companyById) => {\r\n    if(companyById.menu){\r\n      companyById.menu = false;\r\n      setMenu({check: companyById.menu});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.menu = true;\r\n      setMenu({check: companyById.menu});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Cardápio / Catálogo</Typography>\r\n      <Grid container>\r\n        <Grid item>\r\n          <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={menu.check}\r\n                onClick={()=>atvMenu(companyById)}\r\n                name=\"checkedA\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Ativar/Desativar\"\r\n          />\r\n          </FormGroup>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nMenu.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({atvCompany, getCompanyById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Menu);","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst Finances = () => {\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Financeiro</Typography>\r\n      <Grid container>\r\n        <Grid item>\r\n          Financeiro em desenvolvimento\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Finances;","import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { atvCompany, getCompanyById } from '../../../../store/companyReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  button: {\r\n    marginTop: '25px',\r\n  },\r\n}));\r\n\r\nconst Reservation = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n  const [ reservation, setReservation ] = useState({\r\n    check: companyById.reservation\r\n  })\r\n\r\n  const atvReservation = (companyById) => {\r\n    if(companyById.reservation){\r\n      companyById.reservation = false;\r\n      setReservation({check: companyById.reservation});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.reservation = true;\r\n      setReservation({check: companyById.reservation});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Pedidos</Typography>\r\n      <Grid container>\r\n        <Grid item>\r\n          <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={reservation.check}\r\n                onClick={()=>atvReservation(companyById)}\r\n                name=\"checkedA\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Ativar/Desativar\"\r\n          />\r\n          </FormGroup>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nReservation.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({atvCompany, getCompanyById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Reservation);","import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { atvCompany, getCompanyById } from '../../../../store/companyReducer';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  button: {\r\n    marginTop: '25px',\r\n  },\r\n}));\r\n\r\nconst Delivery = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n  const [ delivery, setDelivery ] = useState({\r\n    check: companyById.delivery\r\n  })\r\n\r\n  const atvDelivery = (companyById) => {\r\n    if(companyById.promo){\r\n      companyById.promo = false;\r\n      setDelivery({check: companyById.delivery});\r\n      return props.atvCompany(companyById);\r\n    }else{\r\n      companyById.promo = true;\r\n      setDelivery({check: companyById.delivery});\r\n      return props.atvCompany(companyById);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Typography variant=\"h5\" component=\"h2\">Delivery</Typography>\r\n      <Grid container>\r\n        <Grid item>\r\n          <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={delivery.check}\r\n                onClick={()=>atvDelivery(companyById)}\r\n                name=\"checkedA\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Ativar/Desativar\"\r\n          />\r\n          </FormGroup>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nDelivery.prototypes = {\r\n  companyById: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  companyById: state.company.companyById,\r\n});\r\n\r\nconst mapsDispatchToProps = dispatch => \r\n  bindActionCreators({atvCompany, getCompanyById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Delivery);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Suggest from './Suggests';\r\nimport Call from './Call';\r\nimport Promo from './Promo';\r\nimport Menu from './Menu';\r\nimport Finances from './Finances';\r\nimport Reservation from './Reservation';\r\nimport Delivery from './Delivery';\r\nimport SetupCompany from '../SetupCompany';\r\n\r\nconst RoutesUser = () => {\r\n  return(\r\n    <Switch>\r\n      <Route exact path='/suggest' component={Suggest}/>\r\n      <Route exact path='/suggest/call' component={Call}/>\r\n      <Route exact path='/suggest/promo' component={Promo}/>\r\n      <Route exact path='/suggest/cardapio' component={Menu}/>\r\n      <Route exact path='/suggest/finances' component={Finances}/>\r\n      <Route exact path='/suggest/reservation' component={Reservation}/>\r\n      <Route exact path='/suggest/delivery' component={Delivery}/>\r\n      <Route exact path='/suggest/setup-company' component={SetupCompany}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default RoutesUser;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../../store/authReducer';\r\nimport { getCompanyById } from '../../../store/companyReducer';\r\nimport { getUserById } from '../../../store/userReducer';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MoodIcon from '@material-ui/icons/Mood';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport AlarmOnIcon from '@material-ui/icons/AlarmOn';\r\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\r\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\r\n\r\nimport RoutesUser from './routesUser';\r\n\r\nconst drawerWidth = 210;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textDecoration: 'none',\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  icon: {\r\n    textDecoration: 'none',\r\n    color: 'white',\r\n  },\r\n  profile: {\r\n    paddingRight: 17\r\n  },\r\n  avatar: {\r\n    backgroundColor: '#f50057',\r\n    textAlign: 'center',\r\n  },\r\n  card:{\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nconst MainSuggest = (props) => {\r\n  const classes = useStyles();\r\n  const { companyById } = props;\r\n  const { stars, name } = companyById;\r\n  const [ idUser ] = useState(window.location.href.split('/?')[1]);\r\n  const [ idCompany ] = useState(window.location.href.split('/?')[2].split('?')[0]);\r\n\r\n  useEffect(() => {\r\n    if(idCompany){\r\n      props.getCompanyById(idCompany);\r\n    }\r\n  },[]);\r\n\r\n  const [open, setOpen] = useState(true );\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component={Link} to={`/suggest/?${idUser}/?${idCompany}?page=1&limit=25`} variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                SuggestInBox\r\n            </Typography>\r\n            <div component={Link} to='/user' className={classes.profile}>{companyById.name}</div>\r\n            <IconButton component={Link} to={`/suggest/setup-company/?${idUser}/?${idCompany}`} color=\"inherit\">\r\n              <SettingsIcon/>\r\n            </IconButton>\r\n            <IconButton onClick={props.logout} color=\"inherit\">\r\n              <ExitToAppIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer variant=\"permanent\" classes={{paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)}} open={open}>\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            <div>      \r\n              <Card className={classes.card}>\r\n                <div>\r\n                  <IconButton component={Link} to={`/suggest/setup-company/?${idUser}/?${idCompany}`} color=\"inherit\">\r\n                    <Avatar className={classes.avatar}>{name? name.split('', 1): \"...\"}</Avatar>\r\n                  </IconButton>\r\n                  <Typography hidden={!open}>{companyById.name}</Typography>\r\n                </div>\r\n                <CardContent hidden={!open}>\r\n                  <Typography variant=\"h3\" color=\"textSecondary\" component=\"p\">\r\n                    {companyById.stars? parseFloat(companyById.stars).toFixed(1): \"...\"}\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\" component=\"p\">\r\n                    {companyById.nStars} classificações\r\n                  </Typography>\r\n                  <Rating name=\"read-only\" value={stars? stars: 0} precision={0.5} readOnly/>\r\n                </CardContent>\r\n              </Card>\r\n              <ListItem button component={Link} to={`/suggest/?${idUser}/?${idCompany}?page=1&limit=25`}>\r\n                <ListItemIcon>\r\n                  <EqualizerIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Sugestões\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/call/?${idUser}/?${idCompany}?page=1&limit=25`}>\r\n                <ListItemIcon>\r\n                  <EmojiPeopleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Chamadas\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/promo/?${idUser}/?${idCompany}`}>\r\n                <ListItemIcon>\r\n                  <MoodIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Promoções\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/cardapio/?${idUser}/?${idCompany}`}>\r\n                <ListItemIcon>\r\n                  <MenuBookIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Cardapio\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/delivery/?${idUser}/?${idCompany}`}>\r\n                <ListItemIcon>\r\n                  <MotorcycleIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Delivery\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/reservation/?${idUser}/?${idCompany}`}>\r\n                <ListItemIcon>\r\n                  <AlarmOnIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Reservas\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/suggest/finances/?${idUser}/?${idCompany}`}>\r\n                <ListItemIcon>\r\n                  <AttachMoneyIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Financeiro\" />\r\n              </ListItem>\r\n              <ListItem button component={Link} to={`/user/?${idUser}?page=1&limit=25`}>\r\n                <ListItemIcon>\r\n                  <BusinessIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Companias\" />\r\n              </ListItem>\r\n            </div>\r\n          </List>\r\n        <Divider />\r\n        </Drawer>\r\n\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid>\r\n              <RoutesUser />\r\n            </Grid>\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMainSuggest.prototypes = {\r\n  infos: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infos: state.auth.infos,\r\n  companyById: state.company.companyById,\r\n  userById: state.user.userById,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({logout, getCompanyById, getUserById}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainSuggest);","import React from 'react';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\n\r\nconst RoutesAppSuggest = () => {\r\n  const match = useRouteMatch();\r\n\r\n  return(\r\n    <Switch>\r\n      <Route exact path={`${match.url}`} component={()=><h1>SUGGEST</h1>}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default RoutesAppSuggest;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport RoutesAdm from './routesAdm';\r\n\r\nconst Adm = () => {\r\n  return(\r\n    <div>\r\n      <h1><img alt='logo' src='/assets/logo_palpitebox.png'/></h1>\r\n      <header>\r\n        <nav>\r\n          <ul>\r\n            <li><Link to='/'>Início</Link></li>\r\n            <li>|</li>\r\n            <li><Link to='/client/sobrenos'>Sobre nós</Link></li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n      <div>\r\n        <RoutesAdm/>\r\n      </div>\r\n      <div>\r\n        <footer>\r\n          <p>Colocar Suggest na sua empresa, <Link to='/'>clique aqui!</Link></p>\r\n          <p>Suggest In Box - Todos os direitos reservados.</p>\r\n          <p>© 2020 - Copyright</p>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Adm;","import React from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\r\nimport { showMessage, hideMessage } from '../../store/messageReducer';\r\n\r\nconst MessageDialog = (props) => {\r\n  return(\r\n    <div>\r\n      <Dialog open={props.openDialog} onClick={()=> props.hideMessage} onClose={props.hideMessage}>\r\n        <DialogTitle>\r\n          Atenção\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {props.message}\r\n        </DialogContent>\r\n        <DialogActions onClick={()=> props.hideMessage}>\r\n          <Button onClick={props.hideMessage}>Fechar</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  openDialog: state.message.showMessage,\r\n  message: state.message.message\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({showMessage, hideMessage}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageDialog);","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { auth } from '../../store/authReducer';\r\nimport { showMessage, hideMessage, showProgress } from '../../store/messageReducer';\r\nimport MessageDialog from '../Dialog';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    maxWidth: 300,\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  link: {\r\n    textAlign: 'end'\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const [disableSubmit, setDisableSubmit] = useState(true);\r\n\r\n  const formik = useFormik ({\r\n    initialValues: { email: '', password: ''},\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .email('Email inválido')\r\n        .required('Email obrigatório!'),\r\n      password: Yup.string()\r\n        .required('Senha obrigatória!')\r\n        .max(40, 'Senha muito longa'),\r\n      }),\r\n      onSubmit: values => {\r\n        props.auth(values);\r\n      },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            SuggestInBox\r\n          </Typography>\r\n          <Button component={Link} to={`/`} color=\"inherit\">Site</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container className={classes.container} component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Login\r\n          </Typography> \r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"email\" \r\n              name=\"email\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Email\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.email}\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <div>\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"password\" \r\n              name=\"password\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Senha\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.password}\r\n              inputProps={{ maxLength: 40 }}\r\n            />\r\n            <div>\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <Typography className={classes.error}>{formik.errors.password}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <ReCAPTCHA sitekey=\"6LcgjtIZAAAAAANAHsE5_vCGEFFu8nCbHvk5AV7y\" onChange={() => setDisableSubmit(false)} />\r\n            <Button type=\"submit\" onClick={()=>props.showProgress()} disabled={disableSubmit} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} onBlur={formik.handleBlur}>\r\n              Entrar\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link to=\"/fogot-password\" variant=\"body2\">\r\n                  Esqueci minha senha\r\n                </Link>\r\n              </Grid>\r\n              <Grid className={classes.link} item xs>\r\n                <Link to=\"#\" variant=\"body2\">\r\n                  Criar conta\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n          <div hidden={props.progress}>\r\n            <CircularProgress/>\r\n          </div>\r\n          <MessageDialog/>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  openDialog: state.message.showMessage,\r\n  message: state.message.message,\r\n  progress: state.message.progress\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({auth, showMessage, hideMessage, showProgress}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { useState} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { showMessage, hideMessage, showProgress } from '../../store/messageReducer';\r\nimport MessageDialog from '../Dialog';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { fogot } from '../../store/authReducer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  link: {\r\n    fontSize: 15 \r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Fogot = (props) => {\r\n  const classes = useStyles();\r\n  const [disableSubmit, setDisableSubmit] = useState(false);\r\n\r\n  const formik = useFormik ({\r\n    initialValues: { email: ''},\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .email('Email invalido')\r\n        .required('Email obrigatório!'),\r\n      }),\r\n      onSubmit: values => {\r\n        props.fogot(values);\r\n      },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <MessageDialog/>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n        <Typography variant=\"h6\" noWrap>\r\n          SuggestInBox\r\n        </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Recuperar senha\r\n          </Typography> \r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"email\" \r\n              name=\"email\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Email\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.email}\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <div>\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <Typography className={classes.error}>{formik.errors.email}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <ReCAPTCHA sitekey=\"6LcdP8cZAAAAAMLbn_f2B0EDFSdtvkPQaEO1hx30\" onChange={() => setDisableSubmit(false)} />\r\n            <Button type=\"submit\" onClick={()=> props.showProgress()} disabled={disableSubmit} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} onBlur={formik.handleBlur}>\r\n              Enviar link para email\r\n            </Button>\r\n          </form>\r\n          <div hidden={props.progress}>\r\n            <CircularProgress/>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  openDialog: state.message.showMessage,\r\n  message: state.message.message,\r\n  progress: state.message.progress\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({fogot, showMessage, hideMessage, showProgress}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Fogot);","import React, { useState} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport history from '../../services/history';\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { showMessage, hideMessage } from '../../store/messageReducer';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { reset } from '../../store/authReducer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    maxWidth: 300,\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 12\r\n  },\r\n  link: {\r\n    fontSize: 15 \r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Reset = (props) => {\r\n  const classes = useStyles();\r\n  const [disableSubmit, setDisableSubmit] = useState(true);\r\n  const [progress, setProgress] = useState(true);\r\n  \r\n  const [ token ] = useState(window.location.href.split('/?$')[1]);\r\n  const [ email ] = useState(window.location.href.split('/?$')[2]);\r\n\r\n  const formik = useFormik ({\r\n    initialValues: { password: '', passwordConfirmation: ''},\r\n    validationSchema: Yup.object({\r\n      password: Yup.string()\r\n        .required('Senha obrigatória!')\r\n        .matches(/^(?=.*[A-Za-z])(?=.*[0-9])(?=.{6,})/,\r\n          \"A senha deve ter pelo menos uma letra maiuscula, um número e 6 caracteres!\"\r\n        )\r\n        .max(40, 'Senha muito longa'),\r\n      passwordConfirmation: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Senha não confere')\r\n        .required('Confirme a senha!')\r\n      }),\r\n      onSubmit: values => {\r\n        setProgress(false);\r\n        const user = {\r\n          password: values.password,\r\n          token: token,\r\n          email: email\r\n        }\r\n        props.reset(user);\r\n      },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n        <Typography variant=\"h6\" noWrap>\r\n          SuggestInBox\r\n        </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container className={classes.container} component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Recuperar senha\r\n          </Typography> \r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"password\" \r\n              name=\"password\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Nova senha\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.password}\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <div>\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <Typography className={classes.error}>{formik.errors.password}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <TextField \r\n              variant=\"outlined\" \r\n              type=\"password\" \r\n              name=\"passwordConfirmation\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Confirme a senha\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.passwordConfirmation}\r\n              inputProps={{ maxLength: 70 }}\r\n            />\r\n            <div>\r\n              {formik.touched.passwordConfirmation && formik.errors.passwordConfirmation ? (\r\n                <Typography className={classes.error}>{formik.errors.passwordConfirmation}</Typography>\r\n              ) : null}\r\n            </div>\r\n            <ReCAPTCHA sitekey=\"6LcgjtIZAAAAAANAHsE5_vCGEFFu8nCbHvk5AV7y\" onChange={() => setDisableSubmit(false)} />\r\n            <Button type=\"submit\" disabled={disableSubmit} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} onBlur={formik.handleBlur}>\r\n              Salvar\r\n            </Button>\r\n          </form>\r\n\r\n          <Dialog open={props.openDialog} onClick={()=> setProgress(true)} onClose={props.hideMessage}>\r\n            <DialogTitle>\r\n              Atenção\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              {props.message}\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={props.hideMessage}>Fechar</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          <div hidden={progress}>\r\n            <CircularProgress/>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  openDialog: state.message.showMessage,\r\n  message: state.message.message\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({reset, showMessage, hideMessage}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Reset);","import React from 'react';\r\nimport { Route, Switch, Redirect, Router } from 'react-router-dom';\r\n\r\nimport Site from './Site';\r\nimport Client from './pages/Client';\r\nimport User from './pages/User';\r\nimport Suggest from './pages/User/Suggest';\r\nimport Adm from './pages/Adm';\r\nimport { Login, Fogot, Reset } from './components';\r\n\r\nimport { isAuthenticated } from './services/auth';\r\nimport history from './services/history';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      isAuthenticated() ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\r\n      )\r\n    }\r\n  />\r\n);\r\n \r\nconst Routes = () => (\r\n  <Router history={history}>\r\n    <Switch>\r\n      <Route exact path='/' component={Site}/>\r\n      <Route exact path='/login' component={Login}/>\r\n      <Route exact path='/fogot-password' component={Fogot}/>\r\n      <Route path='/reset-password' component={Reset}/>\r\n      <Route path='/client' component={Client}/>\r\n      <PrivateRoute path='/user' component={User}/>\r\n      <PrivateRoute path='/suggest' component={Suggest}/>\r\n      <PrivateRoute path='/adm' component={Adm}/>\r\n      <Route exact path=\"/not-found\" component={()=><h1>Página não encontrada 404</h1>}/>\r\n      <Redirect to=\"/not-found\" />\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nexport default Routes;","import React from 'react';\r\nimport Routes from './routes';\r\n\r\nconst App = () => (\r\n  <Routes/> \r\n)\r\n\r\nexport default App;\r\n","import api from '../services/api';\r\n\r\nconst ACTIONS = {\r\n  LIST_PROMO: 'LISTPROMO',\r\n  BY_ID_PROMO: 'BYIDPROMO',\r\n  UPDATE_PROMO: 'UPDATEPROMO',\r\n  ADD_PROMO: 'ADDPROMO',\r\n}\r\nconst INITIAL_STATE = {\r\n  promo: [],\r\n  promoById: [],\r\n}\r\nexport const promoReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.ATV_PROMO:\r\n      return {...state, companyById: action.companyById}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import api from '../services/api';\r\n\r\nconst ACTIONS = {\r\n  LIST_MENU: 'LISTMENU',\r\n  ATV_MENU: 'ATVMENU'\r\n}\r\nconst INITIAL_STATE = {\r\n  menu: [],\r\n  menuById: [],\r\n}\r\nexport const menuReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case ACTIONS.LIST_MENU:\r\n      return {...state, menu: action.menu, infosMenu: action.infosMenu}\r\n    case ACTIONS.ADD_MENU:\r\n      return {...state, menu: action.menu}\r\n    case ACTIONS.BY_ID_MENU:\r\n      return {...state, menuById: action.menuById}\r\n    case ACTIONS.UPDATE_MENU:\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//LISTAR MENU\r\nexport const listMenu = (idCompany) => {\r\n  return dispatch => {\r\n    api.get(`/adm/menu/${idCompany}`)\r\n    .then(Response => {\r\n      const { docs } = Response.data;\r\n      dispatch({\r\n        type: ACTIONS.LIST_MENU,\r\n        menu: docs,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//ADICIONAR MENU\r\nexport const addMenu = (menu, id) => {\r\n  return dispatch => {\r\n    api.post('/adm/menu', menu)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.ADD_MENU,\r\n        menu: Response.data,\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n//GET BY ID MENU\r\nexport const getMenuById = (id) => {\r\n  return dispatch => {\r\n    api.get(`/adm/menu/${id}`)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.BY_ID_MENU,\r\n        menuById: Response.data,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n//UPDATE COMPANY\r\nexport const updateMenu = (menu, id, idUser) => {\r\n  return dispatch => {\r\n    api.put(`/adm/menu/${id}`, menu)\r\n    .then(Response => {\r\n      dispatch({\r\n        type: ACTIONS.UPDATE_MENU,\r\n        //company: Response.data\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { clientReducer } from './clientReducer';\r\nimport { authReducer } from './authReducer';\r\nimport { companyReducer } from './companyReducer';\r\nimport { suggestReducer } from './suggestReducer';\r\nimport { promoReducer } from './promoReducer';\r\nimport { menuReducer } from './menuReducer';\r\nimport { messageReducer } from './messageReducer';\r\nimport { userReducer } from './userReducer';\r\n\r\nconst mainReducer = combineReducers({\r\n  auth: authReducer,\r\n  client: clientReducer,\r\n  user: userReducer,\r\n  company: companyReducer,\r\n  suggest: suggestReducer,\r\n  menu: menuReducer,\r\n  promo: promoReducer,\r\n  message: messageReducer,\r\n});\r\n\r\nexport const store = applyMiddleware(thunk)(createStore)(mainReducer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"MenuClient_wrap__1XHwg\",\"section\":\"MenuClient_section__yfvwT\",\"grid\":\"MenuClient_grid__EiHyG\",\"name\":\"MenuClient_name__NFQDW\",\"description\":\"MenuClient_description__3m5uL\",\"value\":\"MenuClient_value__1uJb-\",\"ten\":\"MenuClient_ten__2KMGT\"};"],"sourceRoot":""}